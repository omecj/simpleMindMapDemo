{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { extend } from '../utils/adopter.js';\n// import { subClassArray } from './ArrayPolyfill.js'\n\nclass List extends Array {\n  constructor(arr = [], ...args) {\n    super(arr, ...args);\n    if (typeof arr === 'number') return this;\n    this.length = 0;\n    this.push(...arr);\n  }\n}\n\n/* = subClassArray('List', Array, function (arr = []) {\n  // This catches the case, that native map tries to create an array with new Array(1)\n  if (typeof arr === 'number') return this\n  this.length = 0\n  this.push(...arr)\n}) */\n\nexport default List;\nextend([List], {\n  each(fnOrMethodName, ...args) {\n    if (typeof fnOrMethodName === 'function') {\n      return this.map((el, i, arr) => {\n        return fnOrMethodName.call(el, el, i, arr);\n      });\n    } else {\n      return this.map(el => {\n        return el[fnOrMethodName](...args);\n      });\n    }\n  },\n  toArray() {\n    return Array.prototype.concat.apply([], this);\n  }\n});\nconst reserved = ['toArray', 'constructor', 'each'];\nList.extend = function (methods) {\n  methods = methods.reduce((obj, name) => {\n    // Don't overwrite own methods\n    if (reserved.includes(name)) return obj;\n\n    // Don't add private methods\n    if (name[0] === '_') return obj;\n\n    // Allow access to original Array methods through a prefix\n    if (name in Array.prototype) {\n      obj['$' + name] = Array.prototype[name];\n    }\n\n    // Relay every call to each()\n    obj[name] = function (...attrs) {\n      return this.each(name, ...attrs);\n    };\n    return obj;\n  }, {});\n  extend([List], methods);\n};","map":{"version":3,"names":["extend","List","Array","constructor","arr","args","length","push","each","fnOrMethodName","map","el","i","call","toArray","prototype","concat","apply","reserved","methods","reduce","obj","name","includes","attrs"],"sources":["C:/Users/otff/Desktop/mindmap_demo/mind_demo/node_modules/@svgdotjs/svg.js/src/types/List.js"],"sourcesContent":["import { extend } from '../utils/adopter.js'\n// import { subClassArray } from './ArrayPolyfill.js'\n\nclass List extends Array {\n  constructor(arr = [], ...args) {\n    super(arr, ...args)\n    if (typeof arr === 'number') return this\n    this.length = 0\n    this.push(...arr)\n  }\n}\n\n/* = subClassArray('List', Array, function (arr = []) {\n  // This catches the case, that native map tries to create an array with new Array(1)\n  if (typeof arr === 'number') return this\n  this.length = 0\n  this.push(...arr)\n}) */\n\nexport default List\n\nextend([List], {\n  each(fnOrMethodName, ...args) {\n    if (typeof fnOrMethodName === 'function') {\n      return this.map((el, i, arr) => {\n        return fnOrMethodName.call(el, el, i, arr)\n      })\n    } else {\n      return this.map((el) => {\n        return el[fnOrMethodName](...args)\n      })\n    }\n  },\n\n  toArray() {\n    return Array.prototype.concat.apply([], this)\n  }\n})\n\nconst reserved = ['toArray', 'constructor', 'each']\n\nList.extend = function (methods) {\n  methods = methods.reduce((obj, name) => {\n    // Don't overwrite own methods\n    if (reserved.includes(name)) return obj\n\n    // Don't add private methods\n    if (name[0] === '_') return obj\n\n    // Allow access to original Array methods through a prefix\n    if (name in Array.prototype) {\n      obj['$' + name] = Array.prototype[name]\n    }\n\n    // Relay every call to each()\n    obj[name] = function (...attrs) {\n      return this.each(name, ...attrs)\n    }\n    return obj\n  }, {})\n\n  extend([List], methods)\n}\n"],"mappings":";AAAA,SAASA,MAAM,QAAQ,qBAAqB;AAC5C;;AAEA,MAAMC,IAAI,SAASC,KAAK,CAAC;EACvBC,WAAWA,CAACC,GAAG,GAAG,EAAE,EAAE,GAAGC,IAAI,EAAE;IAC7B,KAAK,CAACD,GAAG,EAAE,GAAGC,IAAI,CAAC;IACnB,IAAI,OAAOD,GAAG,KAAK,QAAQ,EAAE,OAAO,IAAI;IACxC,IAAI,CAACE,MAAM,GAAG,CAAC;IACf,IAAI,CAACC,IAAI,CAAC,GAAGH,GAAG,CAAC;EACnB;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeH,IAAI;AAEnBD,MAAM,CAAC,CAACC,IAAI,CAAC,EAAE;EACbO,IAAIA,CAACC,cAAc,EAAE,GAAGJ,IAAI,EAAE;IAC5B,IAAI,OAAOI,cAAc,KAAK,UAAU,EAAE;MACxC,OAAO,IAAI,CAACC,GAAG,CAAC,CAACC,EAAE,EAAEC,CAAC,EAAER,GAAG,KAAK;QAC9B,OAAOK,cAAc,CAACI,IAAI,CAACF,EAAE,EAAEA,EAAE,EAAEC,CAAC,EAAER,GAAG,CAAC;MAC5C,CAAC,CAAC;IACJ,CAAC,MAAM;MACL,OAAO,IAAI,CAACM,GAAG,CAAEC,EAAE,IAAK;QACtB,OAAOA,EAAE,CAACF,cAAc,CAAC,CAAC,GAAGJ,IAAI,CAAC;MACpC,CAAC,CAAC;IACJ;EACF,CAAC;EAEDS,OAAOA,CAAA,EAAG;IACR,OAAOZ,KAAK,CAACa,SAAS,CAACC,MAAM,CAACC,KAAK,CAAC,EAAE,EAAE,IAAI,CAAC;EAC/C;AACF,CAAC,CAAC;AAEF,MAAMC,QAAQ,GAAG,CAAC,SAAS,EAAE,aAAa,EAAE,MAAM,CAAC;AAEnDjB,IAAI,CAACD,MAAM,GAAG,UAAUmB,OAAO,EAAE;EAC/BA,OAAO,GAAGA,OAAO,CAACC,MAAM,CAAC,CAACC,GAAG,EAAEC,IAAI,KAAK;IACtC;IACA,IAAIJ,QAAQ,CAACK,QAAQ,CAACD,IAAI,CAAC,EAAE,OAAOD,GAAG;;IAEvC;IACA,IAAIC,IAAI,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE,OAAOD,GAAG;;IAE/B;IACA,IAAIC,IAAI,IAAIpB,KAAK,CAACa,SAAS,EAAE;MAC3BM,GAAG,CAAC,GAAG,GAAGC,IAAI,CAAC,GAAGpB,KAAK,CAACa,SAAS,CAACO,IAAI,CAAC;IACzC;;IAEA;IACAD,GAAG,CAACC,IAAI,CAAC,GAAG,UAAU,GAAGE,KAAK,EAAE;MAC9B,OAAO,IAAI,CAAChB,IAAI,CAACc,IAAI,EAAE,GAAGE,KAAK,CAAC;IAClC,CAAC;IACD,OAAOH,GAAG;EACZ,CAAC,EAAE,CAAC,CAAC,CAAC;EAENrB,MAAM,CAAC,CAACC,IAAI,CAAC,EAAEkB,OAAO,CAAC;AACzB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}