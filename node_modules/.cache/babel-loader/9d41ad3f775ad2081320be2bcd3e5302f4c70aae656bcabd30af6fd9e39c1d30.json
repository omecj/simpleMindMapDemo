{"ast":null,"code":"import { adopt, nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js';\nimport { svg, xlink, xmlns } from '../modules/core/namespaces.js';\nimport { registerMethods } from '../utils/methods.js';\nimport Container from './Container.js';\nimport Defs from './Defs.js';\nimport { globals } from '../utils/window.js';\nexport default class Svg extends Container {\n  constructor(node, attrs = node) {\n    super(nodeOrNew('svg', node), attrs);\n    this.namespace();\n  }\n\n  // Creates and returns defs element\n  defs() {\n    if (!this.isRoot()) return this.root().defs();\n    return adopt(this.node.querySelector('defs')) || this.put(new Defs());\n  }\n  isRoot() {\n    return !this.node.parentNode || !(this.node.parentNode instanceof globals.window.SVGElement) && this.node.parentNode.nodeName !== '#document-fragment';\n  }\n\n  // Add namespaces\n  namespace() {\n    if (!this.isRoot()) return this.root().namespace();\n    return this.attr({\n      xmlns: svg,\n      version: '1.1'\n    }).attr('xmlns:xlink', xlink, xmlns);\n  }\n  removeNamespace() {\n    return this.attr({\n      xmlns: null,\n      version: null\n    }).attr('xmlns:xlink', null, xmlns).attr('xmlns:svgjs', null, xmlns);\n  }\n\n  // Check if this is a root svg\n  // If not, call root() from this element\n  root() {\n    if (this.isRoot()) return this;\n    return super.root();\n  }\n}\nregisterMethods({\n  Container: {\n    // Create nested svg document\n    nested: wrapWithAttrCheck(function () {\n      return this.put(new Svg());\n    })\n  }\n});\nregister(Svg, 'Svg', true);","map":{"version":3,"names":["adopt","nodeOrNew","register","wrapWithAttrCheck","svg","xlink","xmlns","registerMethods","Container","Defs","globals","Svg","constructor","node","attrs","namespace","defs","isRoot","root","querySelector","put","parentNode","window","SVGElement","nodeName","attr","version","removeNamespace","nested"],"sources":["C:/Users/otff/Desktop/mindmap_demo/mind_demo/node_modules/@svgdotjs/svg.js/src/elements/Svg.js"],"sourcesContent":["import {\n  adopt,\n  nodeOrNew,\n  register,\n  wrapWithAttrCheck\n} from '../utils/adopter.js'\nimport { svg, xlink, xmlns } from '../modules/core/namespaces.js'\nimport { registerMethods } from '../utils/methods.js'\nimport Container from './Container.js'\nimport Defs from './Defs.js'\nimport { globals } from '../utils/window.js'\n\nexport default class Svg extends Container {\n  constructor(node, attrs = node) {\n    super(nodeOrNew('svg', node), attrs)\n    this.namespace()\n  }\n\n  // Creates and returns defs element\n  defs() {\n    if (!this.isRoot()) return this.root().defs()\n\n    return adopt(this.node.querySelector('defs')) || this.put(new Defs())\n  }\n\n  isRoot() {\n    return (\n      !this.node.parentNode ||\n      (!(this.node.parentNode instanceof globals.window.SVGElement) &&\n        this.node.parentNode.nodeName !== '#document-fragment')\n    )\n  }\n\n  // Add namespaces\n  namespace() {\n    if (!this.isRoot()) return this.root().namespace()\n    return this.attr({ xmlns: svg, version: '1.1' }).attr(\n      'xmlns:xlink',\n      xlink,\n      xmlns\n    )\n  }\n\n  removeNamespace() {\n    return this.attr({ xmlns: null, version: null })\n      .attr('xmlns:xlink', null, xmlns)\n      .attr('xmlns:svgjs', null, xmlns)\n  }\n\n  // Check if this is a root svg\n  // If not, call root() from this element\n  root() {\n    if (this.isRoot()) return this\n    return super.root()\n  }\n}\n\nregisterMethods({\n  Container: {\n    // Create nested svg document\n    nested: wrapWithAttrCheck(function () {\n      return this.put(new Svg())\n    })\n  }\n})\n\nregister(Svg, 'Svg', true)\n"],"mappings":"AAAA,SACEA,KAAK,EACLC,SAAS,EACTC,QAAQ,EACRC,iBAAiB,QACZ,qBAAqB;AAC5B,SAASC,GAAG,EAAEC,KAAK,EAAEC,KAAK,QAAQ,+BAA+B;AACjE,SAASC,eAAe,QAAQ,qBAAqB;AACrD,OAAOC,SAAS,MAAM,gBAAgB;AACtC,OAAOC,IAAI,MAAM,WAAW;AAC5B,SAASC,OAAO,QAAQ,oBAAoB;AAE5C,eAAe,MAAMC,GAAG,SAASH,SAAS,CAAC;EACzCI,WAAWA,CAACC,IAAI,EAAEC,KAAK,GAAGD,IAAI,EAAE;IAC9B,KAAK,CAACZ,SAAS,CAAC,KAAK,EAAEY,IAAI,CAAC,EAAEC,KAAK,CAAC;IACpC,IAAI,CAACC,SAAS,CAAC,CAAC;EAClB;;EAEA;EACAC,IAAIA,CAAA,EAAG;IACL,IAAI,CAAC,IAAI,CAACC,MAAM,CAAC,CAAC,EAAE,OAAO,IAAI,CAACC,IAAI,CAAC,CAAC,CAACF,IAAI,CAAC,CAAC;IAE7C,OAAOhB,KAAK,CAAC,IAAI,CAACa,IAAI,CAACM,aAAa,CAAC,MAAM,CAAC,CAAC,IAAI,IAAI,CAACC,GAAG,CAAC,IAAIX,IAAI,CAAC,CAAC,CAAC;EACvE;EAEAQ,MAAMA,CAAA,EAAG;IACP,OACE,CAAC,IAAI,CAACJ,IAAI,CAACQ,UAAU,IACpB,EAAE,IAAI,CAACR,IAAI,CAACQ,UAAU,YAAYX,OAAO,CAACY,MAAM,CAACC,UAAU,CAAC,IAC3D,IAAI,CAACV,IAAI,CAACQ,UAAU,CAACG,QAAQ,KAAK,oBAAqB;EAE7D;;EAEA;EACAT,SAASA,CAAA,EAAG;IACV,IAAI,CAAC,IAAI,CAACE,MAAM,CAAC,CAAC,EAAE,OAAO,IAAI,CAACC,IAAI,CAAC,CAAC,CAACH,SAAS,CAAC,CAAC;IAClD,OAAO,IAAI,CAACU,IAAI,CAAC;MAAEnB,KAAK,EAAEF,GAAG;MAAEsB,OAAO,EAAE;IAAM,CAAC,CAAC,CAACD,IAAI,CACnD,aAAa,EACbpB,KAAK,EACLC,KACF,CAAC;EACH;EAEAqB,eAAeA,CAAA,EAAG;IAChB,OAAO,IAAI,CAACF,IAAI,CAAC;MAAEnB,KAAK,EAAE,IAAI;MAAEoB,OAAO,EAAE;IAAK,CAAC,CAAC,CAC7CD,IAAI,CAAC,aAAa,EAAE,IAAI,EAAEnB,KAAK,CAAC,CAChCmB,IAAI,CAAC,aAAa,EAAE,IAAI,EAAEnB,KAAK,CAAC;EACrC;;EAEA;EACA;EACAY,IAAIA,CAAA,EAAG;IACL,IAAI,IAAI,CAACD,MAAM,CAAC,CAAC,EAAE,OAAO,IAAI;IAC9B,OAAO,KAAK,CAACC,IAAI,CAAC,CAAC;EACrB;AACF;AAEAX,eAAe,CAAC;EACdC,SAAS,EAAE;IACT;IACAoB,MAAM,EAAEzB,iBAAiB,CAAC,YAAY;MACpC,OAAO,IAAI,CAACiB,GAAG,CAAC,IAAIT,GAAG,CAAC,CAAC,CAAC;IAC5B,CAAC;EACH;AACF,CAAC,CAAC;AAEFT,QAAQ,CAACS,GAAG,EAAE,KAAK,EAAE,IAAI,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}