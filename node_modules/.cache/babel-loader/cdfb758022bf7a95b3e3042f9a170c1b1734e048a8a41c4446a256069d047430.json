{"ast":null,"code":"import { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js';\nimport { proportionalSize } from '../utils/utils.js';\nimport { registerMethods } from '../utils/methods.js';\nimport PathArray from '../types/PathArray.js';\nimport Shape from './Shape.js';\nexport default class Path extends Shape {\n  // Initialize node\n  constructor(node, attrs = node) {\n    super(nodeOrNew('path', node), attrs);\n  }\n\n  // Get array\n  array() {\n    return this._array || (this._array = new PathArray(this.attr('d')));\n  }\n\n  // Clear array cache\n  clear() {\n    delete this._array;\n    return this;\n  }\n\n  // Set height of element\n  height(height) {\n    return height == null ? this.bbox().height : this.size(this.bbox().width, height);\n  }\n\n  // Move by left top corner\n  move(x, y) {\n    return this.attr('d', this.array().move(x, y));\n  }\n\n  // Plot new path\n  plot(d) {\n    return d == null ? this.array() : this.clear().attr('d', typeof d === 'string' ? d : this._array = new PathArray(d));\n  }\n\n  // Set element size to given width and height\n  size(width, height) {\n    const p = proportionalSize(this, width, height);\n    return this.attr('d', this.array().size(p.width, p.height));\n  }\n\n  // Set width of element\n  width(width) {\n    return width == null ? this.bbox().width : this.size(width, this.bbox().height);\n  }\n\n  // Move by left top corner over x-axis\n  x(x) {\n    return x == null ? this.bbox().x : this.move(x, this.bbox().y);\n  }\n\n  // Move by left top corner over y-axis\n  y(y) {\n    return y == null ? this.bbox().y : this.move(this.bbox().x, y);\n  }\n}\n\n// Define morphable array\nPath.prototype.MorphArray = PathArray;\n\n// Add parent method\nregisterMethods({\n  Container: {\n    // Create a wrapped path element\n    path: wrapWithAttrCheck(function (d) {\n      // make sure plot is called as a setter\n      return this.put(new Path()).plot(d || new PathArray());\n    })\n  }\n});\nregister(Path, 'Path');","map":{"version":3,"names":["nodeOrNew","register","wrapWithAttrCheck","proportionalSize","registerMethods","PathArray","Shape","Path","constructor","node","attrs","array","_array","attr","clear","height","bbox","size","width","move","x","y","plot","d","p","prototype","MorphArray","Container","path","put"],"sources":["C:/Users/otff/Desktop/mindmap_demo/mind_demo/node_modules/@svgdotjs/svg.js/src/elements/Path.js"],"sourcesContent":["import { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\nimport { proportionalSize } from '../utils/utils.js'\nimport { registerMethods } from '../utils/methods.js'\nimport PathArray from '../types/PathArray.js'\nimport Shape from './Shape.js'\n\nexport default class Path extends Shape {\n  // Initialize node\n  constructor(node, attrs = node) {\n    super(nodeOrNew('path', node), attrs)\n  }\n\n  // Get array\n  array() {\n    return this._array || (this._array = new PathArray(this.attr('d')))\n  }\n\n  // Clear array cache\n  clear() {\n    delete this._array\n    return this\n  }\n\n  // Set height of element\n  height(height) {\n    return height == null\n      ? this.bbox().height\n      : this.size(this.bbox().width, height)\n  }\n\n  // Move by left top corner\n  move(x, y) {\n    return this.attr('d', this.array().move(x, y))\n  }\n\n  // Plot new path\n  plot(d) {\n    return d == null\n      ? this.array()\n      : this.clear().attr(\n          'd',\n          typeof d === 'string' ? d : (this._array = new PathArray(d))\n        )\n  }\n\n  // Set element size to given width and height\n  size(width, height) {\n    const p = proportionalSize(this, width, height)\n    return this.attr('d', this.array().size(p.width, p.height))\n  }\n\n  // Set width of element\n  width(width) {\n    return width == null\n      ? this.bbox().width\n      : this.size(width, this.bbox().height)\n  }\n\n  // Move by left top corner over x-axis\n  x(x) {\n    return x == null ? this.bbox().x : this.move(x, this.bbox().y)\n  }\n\n  // Move by left top corner over y-axis\n  y(y) {\n    return y == null ? this.bbox().y : this.move(this.bbox().x, y)\n  }\n}\n\n// Define morphable array\nPath.prototype.MorphArray = PathArray\n\n// Add parent method\nregisterMethods({\n  Container: {\n    // Create a wrapped path element\n    path: wrapWithAttrCheck(function (d) {\n      // make sure plot is called as a setter\n      return this.put(new Path()).plot(d || new PathArray())\n    })\n  }\n})\n\nregister(Path, 'Path')\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}