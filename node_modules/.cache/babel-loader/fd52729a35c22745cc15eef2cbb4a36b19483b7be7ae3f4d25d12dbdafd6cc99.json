{"ast":null,"code":"import { numberAndUnit } from '../modules/core/regex.js';\n\n// Module for unit conversions\nexport default class SVGNumber {\n  // Initialize\n  constructor(...args) {\n    this.init(...args);\n  }\n  convert(unit) {\n    return new SVGNumber(this.value, unit);\n  }\n\n  // Divide number\n  divide(number) {\n    number = new SVGNumber(number);\n    return new SVGNumber(this / number, this.unit || number.unit);\n  }\n  init(value, unit) {\n    unit = Array.isArray(value) ? value[1] : unit;\n    value = Array.isArray(value) ? value[0] : value;\n\n    // initialize defaults\n    this.value = 0;\n    this.unit = unit || '';\n\n    // parse value\n    if (typeof value === 'number') {\n      // ensure a valid numeric value\n      this.value = isNaN(value) ? 0 : !isFinite(value) ? value < 0 ? -3.4e38 : +3.4e38 : value;\n    } else if (typeof value === 'string') {\n      unit = value.match(numberAndUnit);\n      if (unit) {\n        // make value numeric\n        this.value = parseFloat(unit[1]);\n\n        // normalize\n        if (unit[5] === '%') {\n          this.value /= 100;\n        } else if (unit[5] === 's') {\n          this.value *= 1000;\n        }\n\n        // store unit\n        this.unit = unit[5];\n      }\n    } else {\n      if (value instanceof SVGNumber) {\n        this.value = value.valueOf();\n        this.unit = value.unit;\n      }\n    }\n    return this;\n  }\n\n  // Subtract number\n  minus(number) {\n    number = new SVGNumber(number);\n    return new SVGNumber(this - number, this.unit || number.unit);\n  }\n\n  // Add number\n  plus(number) {\n    number = new SVGNumber(number);\n    return new SVGNumber(this + number, this.unit || number.unit);\n  }\n\n  // Multiply number\n  times(number) {\n    number = new SVGNumber(number);\n    return new SVGNumber(this * number, this.unit || number.unit);\n  }\n  toArray() {\n    return [this.value, this.unit];\n  }\n  toJSON() {\n    return this.toString();\n  }\n  toString() {\n    return (this.unit === '%' ? ~~(this.value * 1e8) / 1e6 : this.unit === 's' ? this.value / 1e3 : this.value) + this.unit;\n  }\n  valueOf() {\n    return this.value;\n  }\n}","map":{"version":3,"names":["numberAndUnit","SVGNumber","constructor","args","init","convert","unit","value","divide","number","Array","isArray","isNaN","isFinite","match","parseFloat","valueOf","minus","plus","times","toArray","toJSON","toString"],"sources":["C:/Users/otff/Desktop/mindmap_demo/mind_demo/node_modules/@svgdotjs/svg.js/src/types/SVGNumber.js"],"sourcesContent":["import { numberAndUnit } from '../modules/core/regex.js'\n\n// Module for unit conversions\nexport default class SVGNumber {\n  // Initialize\n  constructor(...args) {\n    this.init(...args)\n  }\n\n  convert(unit) {\n    return new SVGNumber(this.value, unit)\n  }\n\n  // Divide number\n  divide(number) {\n    number = new SVGNumber(number)\n    return new SVGNumber(this / number, this.unit || number.unit)\n  }\n\n  init(value, unit) {\n    unit = Array.isArray(value) ? value[1] : unit\n    value = Array.isArray(value) ? value[0] : value\n\n    // initialize defaults\n    this.value = 0\n    this.unit = unit || ''\n\n    // parse value\n    if (typeof value === 'number') {\n      // ensure a valid numeric value\n      this.value = isNaN(value)\n        ? 0\n        : !isFinite(value)\n          ? value < 0\n            ? -3.4e38\n            : +3.4e38\n          : value\n    } else if (typeof value === 'string') {\n      unit = value.match(numberAndUnit)\n\n      if (unit) {\n        // make value numeric\n        this.value = parseFloat(unit[1])\n\n        // normalize\n        if (unit[5] === '%') {\n          this.value /= 100\n        } else if (unit[5] === 's') {\n          this.value *= 1000\n        }\n\n        // store unit\n        this.unit = unit[5]\n      }\n    } else {\n      if (value instanceof SVGNumber) {\n        this.value = value.valueOf()\n        this.unit = value.unit\n      }\n    }\n\n    return this\n  }\n\n  // Subtract number\n  minus(number) {\n    number = new SVGNumber(number)\n    return new SVGNumber(this - number, this.unit || number.unit)\n  }\n\n  // Add number\n  plus(number) {\n    number = new SVGNumber(number)\n    return new SVGNumber(this + number, this.unit || number.unit)\n  }\n\n  // Multiply number\n  times(number) {\n    number = new SVGNumber(number)\n    return new SVGNumber(this * number, this.unit || number.unit)\n  }\n\n  toArray() {\n    return [this.value, this.unit]\n  }\n\n  toJSON() {\n    return this.toString()\n  }\n\n  toString() {\n    return (\n      (this.unit === '%'\n        ? ~~(this.value * 1e8) / 1e6\n        : this.unit === 's'\n          ? this.value / 1e3\n          : this.value) + this.unit\n    )\n  }\n\n  valueOf() {\n    return this.value\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}