{"ast":null,"code":"import { makeInstance } from '../../utils/adopter.js';\nimport { registerMethods } from '../../utils/methods.js';\n\n// Get all siblings, including myself\nexport function siblings() {\n  return this.parent().children();\n}\n\n// Get the current position siblings\nexport function position() {\n  return this.parent().index(this);\n}\n\n// Get the next element (will return null if there is none)\nexport function next() {\n  return this.siblings()[this.position() + 1];\n}\n\n// Get the next element (will return null if there is none)\nexport function prev() {\n  return this.siblings()[this.position() - 1];\n}\n\n// Send given element one step forward\nexport function forward() {\n  const i = this.position();\n  const p = this.parent();\n\n  // move node one step forward\n  p.add(this.remove(), i + 1);\n  return this;\n}\n\n// Send given element one step backward\nexport function backward() {\n  const i = this.position();\n  const p = this.parent();\n  p.add(this.remove(), i ? i - 1 : 0);\n  return this;\n}\n\n// Send given element all the way to the front\nexport function front() {\n  const p = this.parent();\n\n  // Move node forward\n  p.add(this.remove());\n  return this;\n}\n\n// Send given element all the way to the back\nexport function back() {\n  const p = this.parent();\n\n  // Move node back\n  p.add(this.remove(), 0);\n  return this;\n}\n\n// Inserts a given element before the targeted element\nexport function before(element) {\n  element = makeInstance(element);\n  element.remove();\n  const i = this.position();\n  this.parent().add(element, i);\n  return this;\n}\n\n// Inserts a given element after the targeted element\nexport function after(element) {\n  element = makeInstance(element);\n  element.remove();\n  const i = this.position();\n  this.parent().add(element, i + 1);\n  return this;\n}\nexport function insertBefore(element) {\n  element = makeInstance(element);\n  element.before(this);\n  return this;\n}\nexport function insertAfter(element) {\n  element = makeInstance(element);\n  element.after(this);\n  return this;\n}\nregisterMethods('Dom', {\n  siblings,\n  position,\n  next,\n  prev,\n  forward,\n  backward,\n  front,\n  back,\n  before,\n  after,\n  insertBefore,\n  insertAfter\n});","map":{"version":3,"names":["makeInstance","registerMethods","siblings","parent","children","position","index","next","prev","forward","i","p","add","remove","backward","front","back","before","element","after","insertBefore","insertAfter"],"sources":["C:/Users/otff/Desktop/mindmap_demo/mind_demo/node_modules/@svgdotjs/svg.js/src/modules/optional/arrange.js"],"sourcesContent":["import { makeInstance } from '../../utils/adopter.js'\nimport { registerMethods } from '../../utils/methods.js'\n\n// Get all siblings, including myself\nexport function siblings() {\n  return this.parent().children()\n}\n\n// Get the current position siblings\nexport function position() {\n  return this.parent().index(this)\n}\n\n// Get the next element (will return null if there is none)\nexport function next() {\n  return this.siblings()[this.position() + 1]\n}\n\n// Get the next element (will return null if there is none)\nexport function prev() {\n  return this.siblings()[this.position() - 1]\n}\n\n// Send given element one step forward\nexport function forward() {\n  const i = this.position()\n  const p = this.parent()\n\n  // move node one step forward\n  p.add(this.remove(), i + 1)\n\n  return this\n}\n\n// Send given element one step backward\nexport function backward() {\n  const i = this.position()\n  const p = this.parent()\n\n  p.add(this.remove(), i ? i - 1 : 0)\n\n  return this\n}\n\n// Send given element all the way to the front\nexport function front() {\n  const p = this.parent()\n\n  // Move node forward\n  p.add(this.remove())\n\n  return this\n}\n\n// Send given element all the way to the back\nexport function back() {\n  const p = this.parent()\n\n  // Move node back\n  p.add(this.remove(), 0)\n\n  return this\n}\n\n// Inserts a given element before the targeted element\nexport function before(element) {\n  element = makeInstance(element)\n  element.remove()\n\n  const i = this.position()\n\n  this.parent().add(element, i)\n\n  return this\n}\n\n// Inserts a given element after the targeted element\nexport function after(element) {\n  element = makeInstance(element)\n  element.remove()\n\n  const i = this.position()\n\n  this.parent().add(element, i + 1)\n\n  return this\n}\n\nexport function insertBefore(element) {\n  element = makeInstance(element)\n  element.before(this)\n  return this\n}\n\nexport function insertAfter(element) {\n  element = makeInstance(element)\n  element.after(this)\n  return this\n}\n\nregisterMethods('Dom', {\n  siblings,\n  position,\n  next,\n  prev,\n  forward,\n  backward,\n  front,\n  back,\n  before,\n  after,\n  insertBefore,\n  insertAfter\n})\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}