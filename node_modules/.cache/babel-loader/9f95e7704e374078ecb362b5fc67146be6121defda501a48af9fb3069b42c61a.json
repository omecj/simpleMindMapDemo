{"ast":null,"code":"import { CONSTANTS } from './constant';\n\n// 默认选项配置\nexport const defaultOpt = {\n  // 是否只读\n  readonly: false,\n  // 布局\n  layout: CONSTANTS.LAYOUT.LOGICAL_STRUCTURE,\n  // 如果结构为鱼骨图，那么可以通过该选项控制倾斜角度\n  fishboneDeg: 45,\n  // 主题\n  theme: 'default',\n  // 内置主题：default（默认主题）\n  // 主题配置，会和所选择的主题进行合并\n  themeConfig: {},\n  // 放大缩小的增量比例\n  scaleRatio: 0.2,\n  // 鼠标缩放是否以鼠标当前位置为中心点，否则以画布中心点\n  mouseScaleCenterUseMousePosition: true,\n  // 最多显示几个标签\n  maxTag: 5,\n  // 展开收缩按钮尺寸\n  expandBtnSize: 20,\n  // 节点里图片和文字的间距\n  imgTextMargin: 5,\n  // 节点里各种文字信息的间距，如图标和文字的间距\n  textContentMargin: 2,\n  // 多选节点时鼠标移动到边缘时的画布移动偏移量\n  selectTranslateStep: 3,\n  // 多选节点时鼠标移动距边缘多少距离时开始偏移\n  selectTranslateLimit: 20,\n  // 自定义节点备注内容显示\n  customNoteContentShow: null,\n  /*\r\n          {\r\n              show(){},\r\n              hide(){}\r\n          }\r\n      */\n  // 是否开启节点自由拖拽\n  enableFreeDrag: false,\n  // 水印配置\n  watermarkConfig: {\n    onlyExport: false,\n    // 是否仅在导出时添加水印\n    text: '',\n    lineSpacing: 100,\n    textSpacing: 100,\n    angle: 30,\n    textStyle: {\n      color: '#999',\n      opacity: 0.5,\n      fontSize: 14\n    }\n  },\n  // 达到该宽度文本自动换行\n  textAutoWrapWidth: 500,\n  // 自定义鼠标滚轮事件处理\n  // 可以传一个函数，回调参数为事件对象\n  customHandleMousewheel: null,\n  // 鼠标滚动的行为，如果customHandleMousewheel传了自定义函数，这个属性不生效\n  mousewheelAction: CONSTANTS.MOUSE_WHEEL_ACTION.MOVE,\n  // zoom（放大缩小）、move（上下移动）\n  // 当mousewheelAction设为move时，可以通过该属性控制鼠标滚动一下视图移动的步长，单位px\n  mousewheelMoveStep: 100,\n  // 当mousewheelAction设为zoom时，或者按住Ctrl键时，默认向前滚动是缩小，向后滚动是放大，如果该属性设为true，那么会反过来\n  mousewheelZoomActionReverse: true,\n  // 默认插入的二级节点的文字\n  defaultInsertSecondLevelNodeText: '二级节点',\n  // 默认插入的二级以下节点的文字\n  defaultInsertBelowSecondLevelNodeText: '分支主题',\n  // 展开收起按钮的颜色\n  expandBtnStyle: {\n    color: '#808080',\n    fill: '#fff',\n    fontSize: 13,\n    strokeColor: '#333333'\n  },\n  // 自定义展开收起按钮的图标\n  expandBtnIcon: {\n    open: '',\n    // svg字符串\n    close: ''\n  },\n  // 处理收起节点数量\n  expandBtnNumHandler: num => {\n    return num;\n  },\n  // 是否显示带数量的收起按钮\n  isShowExpandNum: true,\n  // 是否只有当鼠标在画布内才响应快捷键事件\n  enableShortcutOnlyWhenMouseInSvg: true,\n  // 初始根节点的位置\n  initRootNodePosition: null,\n  // 导出png、svg、pdf时的图形内边距，注意是单侧内边距\n  exportPaddingX: 10,\n  exportPaddingY: 10,\n  // 节点文本编辑框的z-index\n  nodeTextEditZIndex: 3000,\n  // 节点备注浮层的z-index\n  nodeNoteTooltipZIndex: 3000,\n  // 是否在点击了画布外的区域时结束节点文本的编辑状态\n  isEndNodeTextEditOnClickOuter: true,\n  // 最大历史记录数\n  maxHistoryCount: 500,\n  // 是否一直显示节点的展开收起按钮，默认为鼠标移上去和激活时才显示\n  alwaysShowExpandBtn: false,\n  // 扩展节点可插入的图标\n  iconList: [\n    // {\n    //   name: '',// 分组名称\n    //   type: '',// 分组的值\n    //   list: [// 分组下的图标列表\n    //     {\n    //       name: '',// 图标名称\n    //       icon:''// 图标，可以传svg或图片\n    //     }\n    //   ]\n    // }\n  ],\n  // 节点最大缓存数量\n  maxNodeCacheCount: 1000,\n  // 关联线默认文字\n  defaultAssociativeLineText: '关联',\n  // 思维导图适应画布大小时的内边距\n  fitPadding: 50,\n  // 是否开启按住ctrl键多选节点功能\n  enableCtrlKeyNodeSelection: true,\n  // 设置为左键多选节点，右键拖动画布\n  useLeftKeySelectionRightKeyDrag: false,\n  // 节点即将进入编辑前的回调方法，如果该方法返回true以外的值，那么将取消编辑，函数可以返回一个值，或一个Promise，回调参数为节点实例\n  beforeTextEdit: null,\n  // 是否开启自定义节点内容\n  isUseCustomNodeContent: false,\n  // 自定义返回节点内容的方法\n  customCreateNodeContent: null,\n  // 指定内部一些元素（节点文本编辑元素、节点备注显示元素、关联线文本编辑元素、节点图片调整按钮元素）添加到的位置，默认添加到document.body下\n  customInnerElsAppendTo: null,\n  // 拖拽元素时，指示元素新位置的块的最大高度\n  nodeDragPlaceholderMaxSize: 20,\n  // 是否在存在一个激活节点时，当按下中文、英文、数字按键时自动进入文本编辑模式\n  // 开启该特性后，需要给你的输入框绑定keydown事件，并禁止冒泡\n  enableAutoEnterTextEditWhenKeydown: false,\n  // 设置富文本节点编辑框和节点大小一致，形成伪原地编辑的效果\n  // 需要注意的是，只有当节点内只有文本、且形状是矩形才会有比较好的效果\n  richTextEditFakeInPlace: false,\n  // 自定义对剪贴板文本的处理。当按ctrl+v粘贴时会读取用户剪贴板中的文本和图片，默认只会判断文本是否是普通文本和simple-mind-map格式的节点数据，如果你想处理其他思维导图的数据，比如processon、zhixi等，那么可以传递一个函数，接受当前剪贴板中的文本为参数，返回处理后的数据，可以返回两种类型：\n  /*\r\n    1.返回一个纯文本，那么会直接以该文本创建一个子节点\r\n      2.返回一个节点对象，格式如下：\r\n      {\r\n        // 代表是simple-mind-map格式的数据\r\n        simpleMindMap: true,\r\n        // 节点数据，同simple-mind-map节点数据格式\r\n        data: {\r\n          data: {\r\n            text: ''\r\n          },\r\n          children: []\r\n        }\r\n      }\r\n  */\n  // 如果你的处理逻辑存在异步逻辑，也可以返回一个promise\n  customHandleClipboardText: null,\n  // 禁止鼠标滚轮缩放，你仍旧可以使用api进行缩放\n  disableMouseWheelZoom: false,\n  // 禁止双指缩放，你仍旧可以使用api进行缩放\n  // 需要注册TouchEvent插件后生效\n  disableTouchZoom: false,\n  // 错误处理函数\n  errorHandler: (code, error) => {\n    console.error(code, error);\n  },\n  // 设置导出图片和svg时，针对富文本节点内容，也就是嵌入到svg中的html节点的默认样式覆盖\n  // 如果不覆盖，会发生偏移问题\n  resetCss: `\n    * {\n      margin: 0;\n      padding: 0;\n      box-sizing: border-box;\n    }\n  `,\n  // 是否在鼠标双击时回到根节点，也就是让根节点居中显示\n  enableDblclickBackToRootNode: false,\n  // 导出图片时canvas的缩放倍数，该配置会和window.devicePixelRatio值取最大值\n  minExportImgCanvasScale: 2,\n  // 节点鼠标hover和激活时显示的矩形边框的颜色\n  hoverRectColor: 'rgb(94, 200, 248)',\n  // 节点鼠标hover和激活时显示的矩形边框距节点内容的距离\n  hoverRectPadding: 2,\n  // 双击节点进入节点文本编辑时是否默认选中文本，默认只在创建新节点时会选中\n  selectTextOnEnterEditText: false,\n  // 删除节点后激活相邻节点\n  deleteNodeActive: true,\n  // 拖拽节点时鼠标移动到画布边缘是否开启画布自动移动\n  autoMoveWhenMouseInEdgeOnDrag: true,\n  // 是否首次加载fit view\n  fit: false,\n  // 拖拽多个节点时随鼠标移动的示意矩形的样式配置\n  dragMultiNodeRectConfig: {\n    width: 40,\n    height: 20,\n    fill: '' // 填充颜色，如果不传默认使用连线的颜色\n  },\n  // 节点拖拽时新位置的示意矩形的填充颜色，如果不传默认使用连线的颜色\n  dragPlaceholderRectFill: '',\n  // 节点拖拽时的透明度配置\n  dragOpacityConfig: {\n    cloneNodeOpacity: 0.5,\n    // 跟随鼠标移动的克隆节点或矩形的透明度\n    beingDragNodeOpacity: 0.3 // 被拖拽节点的透明度\n  },\n  // 自定义标签的颜色\n  // {pass: 'green, unpass: 'red'}\n  tagsColorMap: {},\n  // 节点协作样式配置\n  cooperateStyle: {\n    avatarSize: 22,\n    // 头像大小\n    fontSize: 12 // 如果是文字头像，那么文字的大小\n  },\n  // 关联线是否始终显示在节点上层\n  // false：即创建关联线和激活关联线时处于最顶层，其他情况下处于节点下方\n  associativeLineIsAlwaysAboveNode: true,\n  // 插入概要的默认文本\n  defaultGeneralizationText: '概要',\n  // 粘贴文本的方式创建新节点时，控制是否按换行自动分割节点，即如果存在换行，那么会根据换行创建多个节点，否则只会创建一个节点\n  // 可以传递一个函数，返回promise，resolve代表根据换行分割，reject代表忽略换行\n  handleIsSplitByWrapOnPasteCreateNewNode: null,\n  // 多少时间内只允许添加一次历史记录，避免添加没有必要的中间状态，单位：ms\n  addHistoryTime: 100,\n  // 是否禁止拖动画布\n  isDisableDrag: false,\n  // 鼠标移入概要高亮所属节点时的高亮框样式\n  highlightNodeBoxStyle: {\n    stroke: 'rgb(94, 200, 248)',\n    fill: 'transparent'\n  },\n  // 创建新节点时的行为\n  /*\r\n    DEFAULT  ：默认会激活新创建的节点，并且进入编辑模式。如果同时创建了多个新节点，那么只会激活而不会进入编辑模式\r\n    NOT_ACTIVE  : 不激活新创建的节点\r\n    ACTIVE_ONLY  : 只激活新创建的节点，不进入编辑模式\r\n  */\n  createNewNodeBehavior: CONSTANTS.CREATE_NEW_NODE_BEHAVIOR.DEFAULT,\n  // 当节点图片加载失败时显示的默认图片\n  defaultNodeImage: '',\n  // 是否将思维导图限制在画布内\n  // 比如向右拖动时，思维导图图形的最左侧到达画布中心时将无法继续向右拖动，其他同理\n  isLimitMindMapInCanvas: false,\n  // 当注册了滚动条插件（Scrollbar）时，是否将思维导图限制在画布内，isLimitMindMapInCanvas不再起作用\n  isLimitMindMapInCanvasWhenHasScrollbar: true,\n  // 在节点上粘贴剪贴板中的图片的处理方法，默认是转换为data:url数据插入到节点中，你可以通过该方法来将图片数据上传到服务器，实现保存图片的url\n  // 可以传递一个异步方法，接收Blob类型的图片数据，需要返回如下结构：\n  /*\r\n    {\r\n      url,    // 图片url\r\n      size: {\r\n        width,  // 图片的宽度\r\n        height  //图片的高度\r\n      }\r\n    }\r\n  */\n  handleNodePasteImg: null,\n  // 默认情况下，新创建的关联线两个端点的位置是根据两个节点中心点的相对位置来计算的，如果你想固定位置，可以通过这个属性来配置\n  // from和to都不传，则都自动计算，如果只传一个，另一个则会自动计算\n  associativeLineInitPointsPosition: {\n    // from和to可选值：left、top、bottom、right\n    from: '',\n    // 关联线起始节点上端点的位置\n    to: '' // 关联线目标节点上端点的位置\n  },\n  // 是否允许调整关联线两个端点的位置\n  enableAdjustAssociativeLinePoints: true,\n  // 自定义创建节点形状的方法，可以传一个函数，均接收一个参数\n  // 矩形、圆角矩形、椭圆、圆等形状会调用该方法\n  // 接收svg path字符串，返回svg节点\n  customCreateNodePath: null,\n  // 菱形、平行四边形、八角矩形、外三角矩形、内三角矩形等形状会调用该方法\n  // 接收points数组点位，返回svg节点\n  customCreateNodePolygon: null,\n  // 自定义转换节点连线路径的方法\n  // 接收svg path字符串，返回转换后的svg path字符串\n  customTransformNodeLinePath: null,\n  // 是否仅搜索当前渲染的节点，被收起的节点不会被搜索到\n  isOnlySearchCurrentRenderNodes: false,\n  // 协同编辑时，同一个节点不能同时被多人选中\n  onlyOneEnableActiveNodeOnCooperate: false,\n  // 协同编辑时，节点操作即将更新到其他客户端前的生命周期函数\n  // 函数接收一个对象作为参数：\n  /*\r\n    {\r\n      type: createOrUpdate（创建节点或更新节点）、delete（删除节点）\r\n      data: 1.当type=createOrUpdate时，代表被创建或被更新的节点数据，即将同步到其他客户端，所以你可以修改该数据；2.当type=delete时，代表被删除的节点数据\r\n    }\r\n  */\n  beforeCooperateUpdate: null,\n  // 快捷键操作即将执行前的生命周期函数，返回true可以阻止操作执行\n  // 函数接收两个参数：key（快捷键）、activeNodeList（当前激活的节点列表）\n  beforeShortcutRun: null,\n  // 彩虹线条配置，需要先注册RainbowLines插件\n  rainbowLinesConfig: {\n    open: false,\n    // 是否开启彩虹线条\n    colorsList: [] // 自定义彩虹线条的颜色列表，如果不设置，会使用默认颜色列表\n    /*\r\n    [\r\n      'rgb(255, 213, 73)',\r\n      'rgb(255, 136, 126)',\r\n      'rgb(107, 225, 141)',\r\n      'rgb(151, 171, 255)',\r\n      'rgb(129, 220, 242)',\r\n      'rgb(255, 163, 125)',\r\n      'rgb(152, 132, 234)'\r\n    ]\r\n    */\n  },\n  // 导出png、svg、pdf时在头部和尾部添加自定义内容\n  // 可传递一个函数，这个函数可以返回null代表不添加内容，也可以返回如下数据：\n  /*\r\n    {\r\n      el,// 要追加的自定义DOM节点，样式可内联\r\n      cssText,// 可选，如果样式不想内联，可以传递该值，一个css字符串\r\n      height: 50// 返回的DOM节点的高度，必须传递\r\n    }\r\n  */\n  addContentToHeader: null,\n  addContentToFooter: null,\n  // 演示插件配置\n  demonstrateConfig: null,\n  // 移动节点到画布中心、回到根节点等操作时是否将缩放层级复位为100%\n  resetScaleOnMoveNodeToCenter: false,\n  // 添加附加的节点前置内容，前置内容指和文本同一行的区域中的前置内容，不包括节点图片部分\n  createNodePrefixContent: null,\n  // 添加附加的节点后置内容，后置内容指和文本同一行的区域中的后置内容，不包括节点图片部分\n  createNodePostfixContent: null\n};","map":{"version":3,"names":["CONSTANTS","defaultOpt","readonly","layout","LAYOUT","LOGICAL_STRUCTURE","fishboneDeg","theme","themeConfig","scaleRatio","mouseScaleCenterUseMousePosition","maxTag","expandBtnSize","imgTextMargin","textContentMargin","selectTranslateStep","selectTranslateLimit","customNoteContentShow","enableFreeDrag","watermarkConfig","onlyExport","text","lineSpacing","textSpacing","angle","textStyle","color","opacity","fontSize","textAutoWrapWidth","customHandleMousewheel","mousewheelAction","MOUSE_WHEEL_ACTION","MOVE","mousewheelMoveStep","mousewheelZoomActionReverse","defaultInsertSecondLevelNodeText","defaultInsertBelowSecondLevelNodeText","expandBtnStyle","fill","strokeColor","expandBtnIcon","open","close","expandBtnNumHandler","num","isShowExpandNum","enableShortcutOnlyWhenMouseInSvg","initRootNodePosition","exportPaddingX","exportPaddingY","nodeTextEditZIndex","nodeNoteTooltipZIndex","isEndNodeTextEditOnClickOuter","maxHistoryCount","alwaysShowExpandBtn","iconList","maxNodeCacheCount","defaultAssociativeLineText","fitPadding","enableCtrlKeyNodeSelection","useLeftKeySelectionRightKeyDrag","beforeTextEdit","isUseCustomNodeContent","customCreateNodeContent","customInnerElsAppendTo","nodeDragPlaceholderMaxSize","enableAutoEnterTextEditWhenKeydown","richTextEditFakeInPlace","customHandleClipboardText","disableMouseWheelZoom","disableTouchZoom","errorHandler","code","error","console","resetCss","enableDblclickBackToRootNode","minExportImgCanvasScale","hoverRectColor","hoverRectPadding","selectTextOnEnterEditText","deleteNodeActive","autoMoveWhenMouseInEdgeOnDrag","fit","dragMultiNodeRectConfig","width","height","dragPlaceholderRectFill","dragOpacityConfig","cloneNodeOpacity","beingDragNodeOpacity","tagsColorMap","cooperateStyle","avatarSize","associativeLineIsAlwaysAboveNode","defaultGeneralizationText","handleIsSplitByWrapOnPasteCreateNewNode","addHistoryTime","isDisableDrag","highlightNodeBoxStyle","stroke","createNewNodeBehavior","CREATE_NEW_NODE_BEHAVIOR","DEFAULT","defaultNodeImage","isLimitMindMapInCanvas","isLimitMindMapInCanvasWhenHasScrollbar","handleNodePasteImg","associativeLineInitPointsPosition","from","to","enableAdjustAssociativeLinePoints","customCreateNodePath","customCreateNodePolygon","customTransformNodeLinePath","isOnlySearchCurrentRenderNodes","onlyOneEnableActiveNodeOnCooperate","beforeCooperateUpdate","beforeShortcutRun","rainbowLinesConfig","colorsList","addContentToHeader","addContentToFooter","demonstrateConfig","resetScaleOnMoveNodeToCenter","createNodePrefixContent","createNodePostfixContent"],"sources":["C:/Users/otff/Desktop/mindmap_demo/mind_demo/node_modules/simple-mind-map/src/constants/defaultOptions.js"],"sourcesContent":["import { CONSTANTS } from './constant'\r\n\r\n// 默认选项配置\r\nexport const defaultOpt = {\r\n  // 是否只读\r\n  readonly: false,\r\n  // 布局\r\n  layout: CONSTANTS.LAYOUT.LOGICAL_STRUCTURE,\r\n  // 如果结构为鱼骨图，那么可以通过该选项控制倾斜角度\r\n  fishboneDeg: 45,\r\n  // 主题\r\n  theme: 'default', // 内置主题：default（默认主题）\r\n  // 主题配置，会和所选择的主题进行合并\r\n  themeConfig: {},\r\n  // 放大缩小的增量比例\r\n  scaleRatio: 0.2,\r\n  // 鼠标缩放是否以鼠标当前位置为中心点，否则以画布中心点\r\n  mouseScaleCenterUseMousePosition: true,\r\n  // 最多显示几个标签\r\n  maxTag: 5,\r\n  // 展开收缩按钮尺寸\r\n  expandBtnSize: 20,\r\n  // 节点里图片和文字的间距\r\n  imgTextMargin: 5,\r\n  // 节点里各种文字信息的间距，如图标和文字的间距\r\n  textContentMargin: 2,\r\n  // 多选节点时鼠标移动到边缘时的画布移动偏移量\r\n  selectTranslateStep: 3,\r\n  // 多选节点时鼠标移动距边缘多少距离时开始偏移\r\n  selectTranslateLimit: 20,\r\n  // 自定义节点备注内容显示\r\n  customNoteContentShow: null,\r\n  /*\r\n          {\r\n              show(){},\r\n              hide(){}\r\n          }\r\n      */\r\n  // 是否开启节点自由拖拽\r\n  enableFreeDrag: false,\r\n  // 水印配置\r\n  watermarkConfig: {\r\n    onlyExport: false, // 是否仅在导出时添加水印\r\n    text: '',\r\n    lineSpacing: 100,\r\n    textSpacing: 100,\r\n    angle: 30,\r\n    textStyle: {\r\n      color: '#999',\r\n      opacity: 0.5,\r\n      fontSize: 14\r\n    }\r\n  },\r\n  // 达到该宽度文本自动换行\r\n  textAutoWrapWidth: 500,\r\n  // 自定义鼠标滚轮事件处理\r\n  // 可以传一个函数，回调参数为事件对象\r\n  customHandleMousewheel: null,\r\n  // 鼠标滚动的行为，如果customHandleMousewheel传了自定义函数，这个属性不生效\r\n  mousewheelAction: CONSTANTS.MOUSE_WHEEL_ACTION.MOVE, // zoom（放大缩小）、move（上下移动）\r\n  // 当mousewheelAction设为move时，可以通过该属性控制鼠标滚动一下视图移动的步长，单位px\r\n  mousewheelMoveStep: 100,\r\n  // 当mousewheelAction设为zoom时，或者按住Ctrl键时，默认向前滚动是缩小，向后滚动是放大，如果该属性设为true，那么会反过来\r\n  mousewheelZoomActionReverse: true,\r\n  // 默认插入的二级节点的文字\r\n  defaultInsertSecondLevelNodeText: '二级节点',\r\n  // 默认插入的二级以下节点的文字\r\n  defaultInsertBelowSecondLevelNodeText: '分支主题',\r\n  // 展开收起按钮的颜色\r\n  expandBtnStyle: {\r\n    color: '#808080',\r\n    fill: '#fff',\r\n    fontSize: 13,\r\n    strokeColor: '#333333'\r\n  },\r\n  // 自定义展开收起按钮的图标\r\n  expandBtnIcon: {\r\n    open: '', // svg字符串\r\n    close: ''\r\n  },\r\n  // 处理收起节点数量\r\n  expandBtnNumHandler: num => {\r\n    return num\r\n  },\r\n  // 是否显示带数量的收起按钮\r\n  isShowExpandNum: true,\r\n  // 是否只有当鼠标在画布内才响应快捷键事件\r\n  enableShortcutOnlyWhenMouseInSvg: true,\r\n  // 初始根节点的位置\r\n  initRootNodePosition: null,\r\n  // 导出png、svg、pdf时的图形内边距，注意是单侧内边距\r\n  exportPaddingX: 10,\r\n  exportPaddingY: 10,\r\n  // 节点文本编辑框的z-index\r\n  nodeTextEditZIndex: 3000,\r\n  // 节点备注浮层的z-index\r\n  nodeNoteTooltipZIndex: 3000,\r\n  // 是否在点击了画布外的区域时结束节点文本的编辑状态\r\n  isEndNodeTextEditOnClickOuter: true,\r\n  // 最大历史记录数\r\n  maxHistoryCount: 500,\r\n  // 是否一直显示节点的展开收起按钮，默认为鼠标移上去和激活时才显示\r\n  alwaysShowExpandBtn: false,\r\n  // 扩展节点可插入的图标\r\n  iconList: [\r\n    // {\r\n    //   name: '',// 分组名称\r\n    //   type: '',// 分组的值\r\n    //   list: [// 分组下的图标列表\r\n    //     {\r\n    //       name: '',// 图标名称\r\n    //       icon:''// 图标，可以传svg或图片\r\n    //     }\r\n    //   ]\r\n    // }\r\n  ],\r\n  // 节点最大缓存数量\r\n  maxNodeCacheCount: 1000,\r\n  // 关联线默认文字\r\n  defaultAssociativeLineText: '关联',\r\n  // 思维导图适应画布大小时的内边距\r\n  fitPadding: 50,\r\n  // 是否开启按住ctrl键多选节点功能\r\n  enableCtrlKeyNodeSelection: true,\r\n  // 设置为左键多选节点，右键拖动画布\r\n  useLeftKeySelectionRightKeyDrag: false,\r\n  // 节点即将进入编辑前的回调方法，如果该方法返回true以外的值，那么将取消编辑，函数可以返回一个值，或一个Promise，回调参数为节点实例\r\n  beforeTextEdit: null,\r\n  // 是否开启自定义节点内容\r\n  isUseCustomNodeContent: false,\r\n  // 自定义返回节点内容的方法\r\n  customCreateNodeContent: null,\r\n  // 指定内部一些元素（节点文本编辑元素、节点备注显示元素、关联线文本编辑元素、节点图片调整按钮元素）添加到的位置，默认添加到document.body下\r\n  customInnerElsAppendTo: null,\r\n  // 拖拽元素时，指示元素新位置的块的最大高度\r\n  nodeDragPlaceholderMaxSize: 20,\r\n  // 是否在存在一个激活节点时，当按下中文、英文、数字按键时自动进入文本编辑模式\r\n  // 开启该特性后，需要给你的输入框绑定keydown事件，并禁止冒泡\r\n  enableAutoEnterTextEditWhenKeydown: false,\r\n  // 设置富文本节点编辑框和节点大小一致，形成伪原地编辑的效果\r\n  // 需要注意的是，只有当节点内只有文本、且形状是矩形才会有比较好的效果\r\n  richTextEditFakeInPlace: false,\r\n  // 自定义对剪贴板文本的处理。当按ctrl+v粘贴时会读取用户剪贴板中的文本和图片，默认只会判断文本是否是普通文本和simple-mind-map格式的节点数据，如果你想处理其他思维导图的数据，比如processon、zhixi等，那么可以传递一个函数，接受当前剪贴板中的文本为参数，返回处理后的数据，可以返回两种类型：\r\n  /*\r\n    1.返回一个纯文本，那么会直接以该文本创建一个子节点\r\n\r\n    2.返回一个节点对象，格式如下：\r\n      {\r\n        // 代表是simple-mind-map格式的数据\r\n        simpleMindMap: true,\r\n        // 节点数据，同simple-mind-map节点数据格式\r\n        data: {\r\n          data: {\r\n            text: ''\r\n          },\r\n          children: []\r\n        }\r\n      }\r\n  */\r\n  // 如果你的处理逻辑存在异步逻辑，也可以返回一个promise\r\n  customHandleClipboardText: null,\r\n  // 禁止鼠标滚轮缩放，你仍旧可以使用api进行缩放\r\n  disableMouseWheelZoom: false,\r\n  // 禁止双指缩放，你仍旧可以使用api进行缩放\r\n  // 需要注册TouchEvent插件后生效\r\n  disableTouchZoom: false,\r\n  // 错误处理函数\r\n  errorHandler: (code, error) => {\r\n    console.error(code, error)\r\n  },\r\n  // 设置导出图片和svg时，针对富文本节点内容，也就是嵌入到svg中的html节点的默认样式覆盖\r\n  // 如果不覆盖，会发生偏移问题\r\n  resetCss: `\r\n    * {\r\n      margin: 0;\r\n      padding: 0;\r\n      box-sizing: border-box;\r\n    }\r\n  `,\r\n  // 是否在鼠标双击时回到根节点，也就是让根节点居中显示\r\n  enableDblclickBackToRootNode: false,\r\n  // 导出图片时canvas的缩放倍数，该配置会和window.devicePixelRatio值取最大值\r\n  minExportImgCanvasScale: 2,\r\n  // 节点鼠标hover和激活时显示的矩形边框的颜色\r\n  hoverRectColor: 'rgb(94, 200, 248)',\r\n  // 节点鼠标hover和激活时显示的矩形边框距节点内容的距离\r\n  hoverRectPadding: 2,\r\n  // 双击节点进入节点文本编辑时是否默认选中文本，默认只在创建新节点时会选中\r\n  selectTextOnEnterEditText: false,\r\n  // 删除节点后激活相邻节点\r\n  deleteNodeActive: true,\r\n  // 拖拽节点时鼠标移动到画布边缘是否开启画布自动移动\r\n  autoMoveWhenMouseInEdgeOnDrag: true,\r\n  // 是否首次加载fit view\r\n  fit: false,\r\n  // 拖拽多个节点时随鼠标移动的示意矩形的样式配置\r\n  dragMultiNodeRectConfig: {\r\n    width: 40,\r\n    height: 20,\r\n    fill: '' // 填充颜色，如果不传默认使用连线的颜色\r\n  },\r\n  // 节点拖拽时新位置的示意矩形的填充颜色，如果不传默认使用连线的颜色\r\n  dragPlaceholderRectFill: '',\r\n  // 节点拖拽时的透明度配置\r\n  dragOpacityConfig: {\r\n    cloneNodeOpacity: 0.5, // 跟随鼠标移动的克隆节点或矩形的透明度\r\n    beingDragNodeOpacity: 0.3 // 被拖拽节点的透明度\r\n  },\r\n  // 自定义标签的颜色\r\n  // {pass: 'green, unpass: 'red'}\r\n  tagsColorMap: {},\r\n  // 节点协作样式配置\r\n  cooperateStyle: {\r\n    avatarSize: 22, // 头像大小\r\n    fontSize: 12 // 如果是文字头像，那么文字的大小\r\n  },\r\n  // 关联线是否始终显示在节点上层\r\n  // false：即创建关联线和激活关联线时处于最顶层，其他情况下处于节点下方\r\n  associativeLineIsAlwaysAboveNode: true,\r\n  // 插入概要的默认文本\r\n  defaultGeneralizationText: '概要',\r\n  // 粘贴文本的方式创建新节点时，控制是否按换行自动分割节点，即如果存在换行，那么会根据换行创建多个节点，否则只会创建一个节点\r\n  // 可以传递一个函数，返回promise，resolve代表根据换行分割，reject代表忽略换行\r\n  handleIsSplitByWrapOnPasteCreateNewNode: null,\r\n  // 多少时间内只允许添加一次历史记录，避免添加没有必要的中间状态，单位：ms\r\n  addHistoryTime: 100,\r\n  // 是否禁止拖动画布\r\n  isDisableDrag: false,\r\n  // 鼠标移入概要高亮所属节点时的高亮框样式\r\n  highlightNodeBoxStyle: {\r\n    stroke: 'rgb(94, 200, 248)',\r\n    fill: 'transparent'\r\n  },\r\n  // 创建新节点时的行为\r\n  /*\r\n    DEFAULT  ：默认会激活新创建的节点，并且进入编辑模式。如果同时创建了多个新节点，那么只会激活而不会进入编辑模式\r\n    NOT_ACTIVE  : 不激活新创建的节点\r\n    ACTIVE_ONLY  : 只激活新创建的节点，不进入编辑模式\r\n  */\r\n  createNewNodeBehavior: CONSTANTS.CREATE_NEW_NODE_BEHAVIOR.DEFAULT,\r\n  // 当节点图片加载失败时显示的默认图片\r\n  defaultNodeImage: '',\r\n  // 是否将思维导图限制在画布内\r\n  // 比如向右拖动时，思维导图图形的最左侧到达画布中心时将无法继续向右拖动，其他同理\r\n  isLimitMindMapInCanvas: false,\r\n  // 当注册了滚动条插件（Scrollbar）时，是否将思维导图限制在画布内，isLimitMindMapInCanvas不再起作用\r\n  isLimitMindMapInCanvasWhenHasScrollbar: true,\r\n  // 在节点上粘贴剪贴板中的图片的处理方法，默认是转换为data:url数据插入到节点中，你可以通过该方法来将图片数据上传到服务器，实现保存图片的url\r\n  // 可以传递一个异步方法，接收Blob类型的图片数据，需要返回如下结构：\r\n  /*\r\n    {\r\n      url,    // 图片url\r\n      size: {\r\n        width,  // 图片的宽度\r\n        height  //图片的高度\r\n      }\r\n    }\r\n  */\r\n  handleNodePasteImg: null,\r\n  // 默认情况下，新创建的关联线两个端点的位置是根据两个节点中心点的相对位置来计算的，如果你想固定位置，可以通过这个属性来配置\r\n  // from和to都不传，则都自动计算，如果只传一个，另一个则会自动计算\r\n  associativeLineInitPointsPosition: {\r\n    // from和to可选值：left、top、bottom、right\r\n    from: '', // 关联线起始节点上端点的位置\r\n    to: '' // 关联线目标节点上端点的位置\r\n  },\r\n  // 是否允许调整关联线两个端点的位置\r\n  enableAdjustAssociativeLinePoints: true,\r\n  // 自定义创建节点形状的方法，可以传一个函数，均接收一个参数\r\n  // 矩形、圆角矩形、椭圆、圆等形状会调用该方法\r\n  // 接收svg path字符串，返回svg节点\r\n  customCreateNodePath: null,\r\n  // 菱形、平行四边形、八角矩形、外三角矩形、内三角矩形等形状会调用该方法\r\n  // 接收points数组点位，返回svg节点\r\n  customCreateNodePolygon: null,\r\n  // 自定义转换节点连线路径的方法\r\n  // 接收svg path字符串，返回转换后的svg path字符串\r\n  customTransformNodeLinePath: null,\r\n  // 是否仅搜索当前渲染的节点，被收起的节点不会被搜索到\r\n  isOnlySearchCurrentRenderNodes: false,\r\n  // 协同编辑时，同一个节点不能同时被多人选中\r\n  onlyOneEnableActiveNodeOnCooperate: false,\r\n  // 协同编辑时，节点操作即将更新到其他客户端前的生命周期函数\r\n  // 函数接收一个对象作为参数：\r\n  /*\r\n    {\r\n      type: createOrUpdate（创建节点或更新节点）、delete（删除节点）\r\n      data: 1.当type=createOrUpdate时，代表被创建或被更新的节点数据，即将同步到其他客户端，所以你可以修改该数据；2.当type=delete时，代表被删除的节点数据\r\n    }\r\n  */\r\n  beforeCooperateUpdate: null,\r\n  // 快捷键操作即将执行前的生命周期函数，返回true可以阻止操作执行\r\n  // 函数接收两个参数：key（快捷键）、activeNodeList（当前激活的节点列表）\r\n  beforeShortcutRun: null,\r\n  // 彩虹线条配置，需要先注册RainbowLines插件\r\n  rainbowLinesConfig: {\r\n    open: false, // 是否开启彩虹线条\r\n    colorsList: [] // 自定义彩虹线条的颜色列表，如果不设置，会使用默认颜色列表\r\n    /*\r\n    [\r\n      'rgb(255, 213, 73)',\r\n      'rgb(255, 136, 126)',\r\n      'rgb(107, 225, 141)',\r\n      'rgb(151, 171, 255)',\r\n      'rgb(129, 220, 242)',\r\n      'rgb(255, 163, 125)',\r\n      'rgb(152, 132, 234)'\r\n    ]\r\n    */\r\n  },\r\n  // 导出png、svg、pdf时在头部和尾部添加自定义内容\r\n  // 可传递一个函数，这个函数可以返回null代表不添加内容，也可以返回如下数据：\r\n  /*\r\n    {\r\n      el,// 要追加的自定义DOM节点，样式可内联\r\n      cssText,// 可选，如果样式不想内联，可以传递该值，一个css字符串\r\n      height: 50// 返回的DOM节点的高度，必须传递\r\n    }\r\n  */\r\n  addContentToHeader: null,\r\n  addContentToFooter: null,\r\n  // 演示插件配置\r\n  demonstrateConfig: null,\r\n  // 移动节点到画布中心、回到根节点等操作时是否将缩放层级复位为100%\r\n  resetScaleOnMoveNodeToCenter: false,\r\n  // 添加附加的节点前置内容，前置内容指和文本同一行的区域中的前置内容，不包括节点图片部分\r\n  createNodePrefixContent: null,\r\n  // 添加附加的节点后置内容，后置内容指和文本同一行的区域中的后置内容，不包括节点图片部分\r\n  createNodePostfixContent: null\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}