{"ast":null,"code":"// LRU缓存类\nexport default class Lru {\n  constructor(max) {\n    this.max = max || 1000;\n    this.size = 0;\n    this.pool = new Map();\n  }\n  add(key, value) {\n    const isExist = this.has(key);\n    // 如果该key之前不存在，并且现在数量已经超出最大值，则不再继续添加\n    if (!isExist && this.size >= this.max) {\n      return false;\n    }\n    // 已经存在则可以更新，因为不影响数量\n    // 如果该key是否已经存在，则先删除\n    this.delete(key);\n    // 添加\n    this.pool.set(key, value);\n    this.size++;\n    // 删除最早的没啥意义，详见：https://github.com/wanglin2/mind-map/issues/467\n    // if (this.size > this.max) {\n    //   let keys = this.pool.keys()\n    //   let last = keys.next()\n    //   this.delete(last.value)\n    // }\n    return true;\n  }\n  delete(key) {\n    if (this.pool.has(key)) {\n      this.pool.delete(key);\n      this.size--;\n    }\n  }\n  has(key) {\n    return this.pool.has(key);\n  }\n  get(key) {\n    if (this.pool.has(key)) {\n      return this.pool.get(key);\n    }\n  }\n  clear() {\n    this.size = 0;\n    this.pool = new Map();\n  }\n}","map":{"version":3,"names":["Lru","constructor","max","size","pool","Map","add","key","value","isExist","has","delete","set","get","clear"],"sources":["C:/Users/otff/Desktop/mindmap_demo/mind_demo/node_modules/simple-mind-map/src/utils/Lru.js"],"sourcesContent":["// LRU缓存类\r\nexport default class Lru {\r\n  constructor(max) {\r\n    this.max = max || 1000\r\n    this.size = 0\r\n    this.pool = new Map()\r\n  }\r\n\r\n  add(key, value) {\r\n    const isExist = this.has(key)\r\n    // 如果该key之前不存在，并且现在数量已经超出最大值，则不再继续添加\r\n    if (!isExist && this.size >= this.max) {\r\n      return false\r\n    }\r\n    // 已经存在则可以更新，因为不影响数量\r\n    // 如果该key是否已经存在，则先删除\r\n    this.delete(key)\r\n    // 添加\r\n    this.pool.set(key, value)\r\n    this.size++\r\n    // 删除最早的没啥意义，详见：https://github.com/wanglin2/mind-map/issues/467\r\n    // if (this.size > this.max) {\r\n    //   let keys = this.pool.keys()\r\n    //   let last = keys.next()\r\n    //   this.delete(last.value)\r\n    // }\r\n    return true\r\n  }\r\n\r\n  delete(key) {\r\n    if (this.pool.has(key)) {\r\n      this.pool.delete(key)\r\n      this.size--\r\n    }\r\n  }\r\n\r\n  has(key) {\r\n    return this.pool.has(key)\r\n  }\r\n\r\n  get(key) {\r\n    if (this.pool.has(key)) {\r\n      return this.pool.get(key)\r\n    }\r\n  }\r\n\r\n  clear() {\r\n    this.size = 0\r\n    this.pool = new Map()\r\n  }\r\n}\r\n"],"mappings":"AAAA;AACA,eAAe,MAAMA,GAAG,CAAC;EACvBC,WAAWA,CAACC,GAAG,EAAE;IACf,IAAI,CAACA,GAAG,GAAGA,GAAG,IAAI,IAAI;IACtB,IAAI,CAACC,IAAI,GAAG,CAAC;IACb,IAAI,CAACC,IAAI,GAAG,IAAIC,GAAG,CAAC,CAAC;EACvB;EAEAC,GAAGA,CAACC,GAAG,EAAEC,KAAK,EAAE;IACd,MAAMC,OAAO,GAAG,IAAI,CAACC,GAAG,CAACH,GAAG,CAAC;IAC7B;IACA,IAAI,CAACE,OAAO,IAAI,IAAI,CAACN,IAAI,IAAI,IAAI,CAACD,GAAG,EAAE;MACrC,OAAO,KAAK;IACd;IACA;IACA;IACA,IAAI,CAACS,MAAM,CAACJ,GAAG,CAAC;IAChB;IACA,IAAI,CAACH,IAAI,CAACQ,GAAG,CAACL,GAAG,EAAEC,KAAK,CAAC;IACzB,IAAI,CAACL,IAAI,EAAE;IACX;IACA;IACA;IACA;IACA;IACA;IACA,OAAO,IAAI;EACb;EAEAQ,MAAMA,CAACJ,GAAG,EAAE;IACV,IAAI,IAAI,CAACH,IAAI,CAACM,GAAG,CAACH,GAAG,CAAC,EAAE;MACtB,IAAI,CAACH,IAAI,CAACO,MAAM,CAACJ,GAAG,CAAC;MACrB,IAAI,CAACJ,IAAI,EAAE;IACb;EACF;EAEAO,GAAGA,CAACH,GAAG,EAAE;IACP,OAAO,IAAI,CAACH,IAAI,CAACM,GAAG,CAACH,GAAG,CAAC;EAC3B;EAEAM,GAAGA,CAACN,GAAG,EAAE;IACP,IAAI,IAAI,CAACH,IAAI,CAACM,GAAG,CAACH,GAAG,CAAC,EAAE;MACtB,OAAO,IAAI,CAACH,IAAI,CAACS,GAAG,CAACN,GAAG,CAAC;IAC3B;EACF;EAEAO,KAAKA,CAAA,EAAG;IACN,IAAI,CAACX,IAAI,GAAG,CAAC;IACb,IAAI,CAACC,IAAI,GAAG,IAAIC,GAAG,CAAC,CAAC;EACvB;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}