{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { nextTick } from '.';\n\n//  批量执行\nclass BatchExecution {\n  //  构造函数\n  constructor() {\n    this.has = {};\n    this.queue = [];\n    this.nextTick = nextTick(this.flush, this);\n  }\n\n  //  添加任务\n  push(name, fn) {\n    if (this.has[name]) {\n      this.replaceTask(name, fn);\n      return;\n    }\n    this.has[name] = true;\n    this.queue.push({\n      name,\n      fn\n    });\n    this.nextTick();\n  }\n\n  // 替换任务\n  replaceTask(name, fn) {\n    const index = this.queue.findIndex(item => {\n      return item.name === name;\n    });\n    if (index !== -1) {\n      this.queue[index] = {\n        name,\n        fn\n      };\n    }\n  }\n\n  //   执行队列\n  flush() {\n    let fns = this.queue.slice(0);\n    this.queue = [];\n    fns.forEach(({\n      name,\n      fn\n    }) => {\n      this.has[name] = false;\n      fn();\n    });\n  }\n}\nexport default BatchExecution;","map":{"version":3,"names":["nextTick","BatchExecution","constructor","has","queue","flush","push","name","fn","replaceTask","index","findIndex","item","fns","slice","forEach"],"sources":["C:/Users/otff/Desktop/mindmap_demo/mind_demo/node_modules/simple-mind-map/src/utils/BatchExecution.js"],"sourcesContent":["import { nextTick } from '.'\r\n\r\n//  批量执行\r\nclass BatchExecution {\r\n  //  构造函数\r\n  constructor() {\r\n    this.has = {}\r\n    this.queue = []\r\n    this.nextTick = nextTick(this.flush, this)\r\n  }\r\n\r\n  //  添加任务\r\n  push(name, fn) {\r\n    if (this.has[name]) {\r\n      this.replaceTask(name, fn)\r\n      return\r\n    }\r\n    this.has[name] = true\r\n    this.queue.push({\r\n      name,\r\n      fn\r\n    })\r\n    this.nextTick()\r\n  }\r\n\r\n  // 替换任务\r\n  replaceTask(name, fn) {\r\n    const index = this.queue.findIndex(item => {\r\n      return item.name === name\r\n    })\r\n    if (index !== -1) {\r\n      this.queue[index] = {\r\n        name,\r\n        fn\r\n      }\r\n    }\r\n  }\r\n\r\n  //   执行队列\r\n  flush() {\r\n    let fns = this.queue.slice(0)\r\n    this.queue = []\r\n    fns.forEach(({ name, fn }) => {\r\n      this.has[name] = false\r\n      fn()\r\n    })\r\n  }\r\n}\r\n\r\nexport default BatchExecution\r\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,GAAG;;AAE5B;AACA,MAAMC,cAAc,CAAC;EACnB;EACAC,WAAWA,CAAA,EAAG;IACZ,IAAI,CAACC,GAAG,GAAG,CAAC,CAAC;IACb,IAAI,CAACC,KAAK,GAAG,EAAE;IACf,IAAI,CAACJ,QAAQ,GAAGA,QAAQ,CAAC,IAAI,CAACK,KAAK,EAAE,IAAI,CAAC;EAC5C;;EAEA;EACAC,IAAIA,CAACC,IAAI,EAAEC,EAAE,EAAE;IACb,IAAI,IAAI,CAACL,GAAG,CAACI,IAAI,CAAC,EAAE;MAClB,IAAI,CAACE,WAAW,CAACF,IAAI,EAAEC,EAAE,CAAC;MAC1B;IACF;IACA,IAAI,CAACL,GAAG,CAACI,IAAI,CAAC,GAAG,IAAI;IACrB,IAAI,CAACH,KAAK,CAACE,IAAI,CAAC;MACdC,IAAI;MACJC;IACF,CAAC,CAAC;IACF,IAAI,CAACR,QAAQ,CAAC,CAAC;EACjB;;EAEA;EACAS,WAAWA,CAACF,IAAI,EAAEC,EAAE,EAAE;IACpB,MAAME,KAAK,GAAG,IAAI,CAACN,KAAK,CAACO,SAAS,CAACC,IAAI,IAAI;MACzC,OAAOA,IAAI,CAACL,IAAI,KAAKA,IAAI;IAC3B,CAAC,CAAC;IACF,IAAIG,KAAK,KAAK,CAAC,CAAC,EAAE;MAChB,IAAI,CAACN,KAAK,CAACM,KAAK,CAAC,GAAG;QAClBH,IAAI;QACJC;MACF,CAAC;IACH;EACF;;EAEA;EACAH,KAAKA,CAAA,EAAG;IACN,IAAIQ,GAAG,GAAG,IAAI,CAACT,KAAK,CAACU,KAAK,CAAC,CAAC,CAAC;IAC7B,IAAI,CAACV,KAAK,GAAG,EAAE;IACfS,GAAG,CAACE,OAAO,CAAC,CAAC;MAAER,IAAI;MAAEC;IAAG,CAAC,KAAK;MAC5B,IAAI,CAACL,GAAG,CAACI,IAAI,CAAC,GAAG,KAAK;MACtBC,EAAE,CAAC,CAAC;IACN,CAAC,CAAC;EACJ;AACF;AAEA,eAAeP,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}