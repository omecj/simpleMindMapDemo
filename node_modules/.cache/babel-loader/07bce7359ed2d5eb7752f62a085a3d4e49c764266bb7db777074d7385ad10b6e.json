{"ast":null,"code":"import { delimiter } from '../modules/core/regex.js';\nimport { radians } from '../utils/utils.js';\nimport { register } from '../utils/adopter.js';\nimport Element from '../elements/Element.js';\nimport Point from './Point.js';\nfunction closeEnough(a, b, threshold) {\n  return Math.abs(b - a) < (threshold || 1e-6);\n}\nexport default class Matrix {\n  constructor(...args) {\n    this.init(...args);\n  }\n  static formatTransforms(o) {\n    // Get all of the parameters required to form the matrix\n    const flipBoth = o.flip === 'both' || o.flip === true;\n    const flipX = o.flip && (flipBoth || o.flip === 'x') ? -1 : 1;\n    const flipY = o.flip && (flipBoth || o.flip === 'y') ? -1 : 1;\n    const skewX = o.skew && o.skew.length ? o.skew[0] : isFinite(o.skew) ? o.skew : isFinite(o.skewX) ? o.skewX : 0;\n    const skewY = o.skew && o.skew.length ? o.skew[1] : isFinite(o.skew) ? o.skew : isFinite(o.skewY) ? o.skewY : 0;\n    const scaleX = o.scale && o.scale.length ? o.scale[0] * flipX : isFinite(o.scale) ? o.scale * flipX : isFinite(o.scaleX) ? o.scaleX * flipX : flipX;\n    const scaleY = o.scale && o.scale.length ? o.scale[1] * flipY : isFinite(o.scale) ? o.scale * flipY : isFinite(o.scaleY) ? o.scaleY * flipY : flipY;\n    const shear = o.shear || 0;\n    const theta = o.rotate || o.theta || 0;\n    const origin = new Point(o.origin || o.around || o.ox || o.originX, o.oy || o.originY);\n    const ox = origin.x;\n    const oy = origin.y;\n    // We need Point to be invalid if nothing was passed because we cannot default to 0 here. That is why NaN\n    const position = new Point(o.position || o.px || o.positionX || NaN, o.py || o.positionY || NaN);\n    const px = position.x;\n    const py = position.y;\n    const translate = new Point(o.translate || o.tx || o.translateX, o.ty || o.translateY);\n    const tx = translate.x;\n    const ty = translate.y;\n    const relative = new Point(o.relative || o.rx || o.relativeX, o.ry || o.relativeY);\n    const rx = relative.x;\n    const ry = relative.y;\n\n    // Populate all of the values\n    return {\n      scaleX,\n      scaleY,\n      skewX,\n      skewY,\n      shear,\n      theta,\n      rx,\n      ry,\n      tx,\n      ty,\n      ox,\n      oy,\n      px,\n      py\n    };\n  }\n  static fromArray(a) {\n    return {\n      a: a[0],\n      b: a[1],\n      c: a[2],\n      d: a[3],\n      e: a[4],\n      f: a[5]\n    };\n  }\n  static isMatrixLike(o) {\n    return o.a != null || o.b != null || o.c != null || o.d != null || o.e != null || o.f != null;\n  }\n\n  // left matrix, right matrix, target matrix which is overwritten\n  static matrixMultiply(l, r, o) {\n    // Work out the product directly\n    const a = l.a * r.a + l.c * r.b;\n    const b = l.b * r.a + l.d * r.b;\n    const c = l.a * r.c + l.c * r.d;\n    const d = l.b * r.c + l.d * r.d;\n    const e = l.e + l.a * r.e + l.c * r.f;\n    const f = l.f + l.b * r.e + l.d * r.f;\n\n    // make sure to use local variables because l/r and o could be the same\n    o.a = a;\n    o.b = b;\n    o.c = c;\n    o.d = d;\n    o.e = e;\n    o.f = f;\n    return o;\n  }\n  around(cx, cy, matrix) {\n    return this.clone().aroundO(cx, cy, matrix);\n  }\n\n  // Transform around a center point\n  aroundO(cx, cy, matrix) {\n    const dx = cx || 0;\n    const dy = cy || 0;\n    return this.translateO(-dx, -dy).lmultiplyO(matrix).translateO(dx, dy);\n  }\n\n  // Clones this matrix\n  clone() {\n    return new Matrix(this);\n  }\n\n  // Decomposes this matrix into its affine parameters\n  decompose(cx = 0, cy = 0) {\n    // Get the parameters from the matrix\n    const a = this.a;\n    const b = this.b;\n    const c = this.c;\n    const d = this.d;\n    const e = this.e;\n    const f = this.f;\n\n    // Figure out if the winding direction is clockwise or counterclockwise\n    const determinant = a * d - b * c;\n    const ccw = determinant > 0 ? 1 : -1;\n\n    // Since we only shear in x, we can use the x basis to get the x scale\n    // and the rotation of the resulting matrix\n    const sx = ccw * Math.sqrt(a * a + b * b);\n    const thetaRad = Math.atan2(ccw * b, ccw * a);\n    const theta = 180 / Math.PI * thetaRad;\n    const ct = Math.cos(thetaRad);\n    const st = Math.sin(thetaRad);\n\n    // We can then solve the y basis vector simultaneously to get the other\n    // two affine parameters directly from these parameters\n    const lam = (a * c + b * d) / determinant;\n    const sy = c * sx / (lam * a - b) || d * sx / (lam * b + a);\n\n    // Use the translations\n    const tx = e - cx + cx * ct * sx + cy * (lam * ct * sx - st * sy);\n    const ty = f - cy + cx * st * sx + cy * (lam * st * sx + ct * sy);\n\n    // Construct the decomposition and return it\n    return {\n      // Return the affine parameters\n      scaleX: sx,\n      scaleY: sy,\n      shear: lam,\n      rotate: theta,\n      translateX: tx,\n      translateY: ty,\n      originX: cx,\n      originY: cy,\n      // Return the matrix parameters\n      a: this.a,\n      b: this.b,\n      c: this.c,\n      d: this.d,\n      e: this.e,\n      f: this.f\n    };\n  }\n\n  // Check if two matrices are equal\n  equals(other) {\n    if (other === this) return true;\n    const comp = new Matrix(other);\n    return closeEnough(this.a, comp.a) && closeEnough(this.b, comp.b) && closeEnough(this.c, comp.c) && closeEnough(this.d, comp.d) && closeEnough(this.e, comp.e) && closeEnough(this.f, comp.f);\n  }\n\n  // Flip matrix on x or y, at a given offset\n  flip(axis, around) {\n    return this.clone().flipO(axis, around);\n  }\n  flipO(axis, around) {\n    return axis === 'x' ? this.scaleO(-1, 1, around, 0) : axis === 'y' ? this.scaleO(1, -1, 0, around) : this.scaleO(-1, -1, axis, around || axis); // Define an x, y flip point\n  }\n\n  // Initialize\n  init(source) {\n    const base = Matrix.fromArray([1, 0, 0, 1, 0, 0]);\n\n    // ensure source as object\n    source = source instanceof Element ? source.matrixify() : typeof source === 'string' ? Matrix.fromArray(source.split(delimiter).map(parseFloat)) : Array.isArray(source) ? Matrix.fromArray(source) : typeof source === 'object' && Matrix.isMatrixLike(source) ? source : typeof source === 'object' ? new Matrix().transform(source) : arguments.length === 6 ? Matrix.fromArray([].slice.call(arguments)) : base;\n\n    // Merge the source matrix with the base matrix\n    this.a = source.a != null ? source.a : base.a;\n    this.b = source.b != null ? source.b : base.b;\n    this.c = source.c != null ? source.c : base.c;\n    this.d = source.d != null ? source.d : base.d;\n    this.e = source.e != null ? source.e : base.e;\n    this.f = source.f != null ? source.f : base.f;\n    return this;\n  }\n  inverse() {\n    return this.clone().inverseO();\n  }\n\n  // Inverses matrix\n  inverseO() {\n    // Get the current parameters out of the matrix\n    const a = this.a;\n    const b = this.b;\n    const c = this.c;\n    const d = this.d;\n    const e = this.e;\n    const f = this.f;\n\n    // Invert the 2x2 matrix in the top left\n    const det = a * d - b * c;\n    if (!det) throw new Error('Cannot invert ' + this);\n\n    // Calculate the top 2x2 matrix\n    const na = d / det;\n    const nb = -b / det;\n    const nc = -c / det;\n    const nd = a / det;\n\n    // Apply the inverted matrix to the top right\n    const ne = -(na * e + nc * f);\n    const nf = -(nb * e + nd * f);\n\n    // Construct the inverted matrix\n    this.a = na;\n    this.b = nb;\n    this.c = nc;\n    this.d = nd;\n    this.e = ne;\n    this.f = nf;\n    return this;\n  }\n  lmultiply(matrix) {\n    return this.clone().lmultiplyO(matrix);\n  }\n  lmultiplyO(matrix) {\n    const r = this;\n    const l = matrix instanceof Matrix ? matrix : new Matrix(matrix);\n    return Matrix.matrixMultiply(l, r, this);\n  }\n\n  // Left multiplies by the given matrix\n  multiply(matrix) {\n    return this.clone().multiplyO(matrix);\n  }\n  multiplyO(matrix) {\n    // Get the matrices\n    const l = this;\n    const r = matrix instanceof Matrix ? matrix : new Matrix(matrix);\n    return Matrix.matrixMultiply(l, r, this);\n  }\n\n  // Rotate matrix\n  rotate(r, cx, cy) {\n    return this.clone().rotateO(r, cx, cy);\n  }\n  rotateO(r, cx = 0, cy = 0) {\n    // Convert degrees to radians\n    r = radians(r);\n    const cos = Math.cos(r);\n    const sin = Math.sin(r);\n    const {\n      a,\n      b,\n      c,\n      d,\n      e,\n      f\n    } = this;\n    this.a = a * cos - b * sin;\n    this.b = b * cos + a * sin;\n    this.c = c * cos - d * sin;\n    this.d = d * cos + c * sin;\n    this.e = e * cos - f * sin + cy * sin - cx * cos + cx;\n    this.f = f * cos + e * sin - cx * sin - cy * cos + cy;\n    return this;\n  }\n\n  // Scale matrix\n  scale() {\n    return this.clone().scaleO(...arguments);\n  }\n  scaleO(x, y = x, cx = 0, cy = 0) {\n    // Support uniform scaling\n    if (arguments.length === 3) {\n      cy = cx;\n      cx = y;\n      y = x;\n    }\n    const {\n      a,\n      b,\n      c,\n      d,\n      e,\n      f\n    } = this;\n    this.a = a * x;\n    this.b = b * y;\n    this.c = c * x;\n    this.d = d * y;\n    this.e = e * x - cx * x + cx;\n    this.f = f * y - cy * y + cy;\n    return this;\n  }\n\n  // Shear matrix\n  shear(a, cx, cy) {\n    return this.clone().shearO(a, cx, cy);\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  shearO(lx, cx = 0, cy = 0) {\n    const {\n      a,\n      b,\n      c,\n      d,\n      e,\n      f\n    } = this;\n    this.a = a + b * lx;\n    this.c = c + d * lx;\n    this.e = e + f * lx - cy * lx;\n    return this;\n  }\n\n  // Skew Matrix\n  skew() {\n    return this.clone().skewO(...arguments);\n  }\n  skewO(x, y = x, cx = 0, cy = 0) {\n    // support uniformal skew\n    if (arguments.length === 3) {\n      cy = cx;\n      cx = y;\n      y = x;\n    }\n\n    // Convert degrees to radians\n    x = radians(x);\n    y = radians(y);\n    const lx = Math.tan(x);\n    const ly = Math.tan(y);\n    const {\n      a,\n      b,\n      c,\n      d,\n      e,\n      f\n    } = this;\n    this.a = a + b * lx;\n    this.b = b + a * ly;\n    this.c = c + d * lx;\n    this.d = d + c * ly;\n    this.e = e + f * lx - cy * lx;\n    this.f = f + e * ly - cx * ly;\n    return this;\n  }\n\n  // SkewX\n  skewX(x, cx, cy) {\n    return this.skew(x, 0, cx, cy);\n  }\n\n  // SkewY\n  skewY(y, cx, cy) {\n    return this.skew(0, y, cx, cy);\n  }\n  toArray() {\n    return [this.a, this.b, this.c, this.d, this.e, this.f];\n  }\n\n  // Convert matrix to string\n  toString() {\n    return 'matrix(' + this.a + ',' + this.b + ',' + this.c + ',' + this.d + ',' + this.e + ',' + this.f + ')';\n  }\n\n  // Transform a matrix into another matrix by manipulating the space\n  transform(o) {\n    // Check if o is a matrix and then left multiply it directly\n    if (Matrix.isMatrixLike(o)) {\n      const matrix = new Matrix(o);\n      return matrix.multiplyO(this);\n    }\n\n    // Get the proposed transformations and the current transformations\n    const t = Matrix.formatTransforms(o);\n    const current = this;\n    const {\n      x: ox,\n      y: oy\n    } = new Point(t.ox, t.oy).transform(current);\n\n    // Construct the resulting matrix\n    const transformer = new Matrix().translateO(t.rx, t.ry).lmultiplyO(current).translateO(-ox, -oy).scaleO(t.scaleX, t.scaleY).skewO(t.skewX, t.skewY).shearO(t.shear).rotateO(t.theta).translateO(ox, oy);\n\n    // If we want the origin at a particular place, we force it there\n    if (isFinite(t.px) || isFinite(t.py)) {\n      const origin = new Point(ox, oy).transform(transformer);\n      // TODO: Replace t.px with isFinite(t.px)\n      // Doesn't work because t.px is also 0 if it wasn't passed\n      const dx = isFinite(t.px) ? t.px - origin.x : 0;\n      const dy = isFinite(t.py) ? t.py - origin.y : 0;\n      transformer.translateO(dx, dy);\n    }\n\n    // Translate now after positioning\n    transformer.translateO(t.tx, t.ty);\n    return transformer;\n  }\n\n  // Translate matrix\n  translate(x, y) {\n    return this.clone().translateO(x, y);\n  }\n  translateO(x, y) {\n    this.e += x || 0;\n    this.f += y || 0;\n    return this;\n  }\n  valueOf() {\n    return {\n      a: this.a,\n      b: this.b,\n      c: this.c,\n      d: this.d,\n      e: this.e,\n      f: this.f\n    };\n  }\n}\nexport function ctm() {\n  return new Matrix(this.node.getCTM());\n}\nexport function screenCTM() {\n  try {\n    /* https://bugzilla.mozilla.org/show_bug.cgi?id=1344537\n       This is needed because FF does not return the transformation matrix\n       for the inner coordinate system when getScreenCTM() is called on nested svgs.\n       However all other Browsers do that */\n    if (typeof this.isRoot === 'function' && !this.isRoot()) {\n      const rect = this.rect(1, 1);\n      const m = rect.node.getScreenCTM();\n      rect.remove();\n      return new Matrix(m);\n    }\n    return new Matrix(this.node.getScreenCTM());\n  } catch (e) {\n    console.warn(`Cannot get CTM from SVG node ${this.node.nodeName}. Is the element rendered?`);\n    return new Matrix();\n  }\n}\nregister(Matrix, 'Matrix');","map":{"version":3,"names":["delimiter","radians","register","Element","Point","closeEnough","a","b","threshold","Math","abs","Matrix","constructor","args","init","formatTransforms","o","flipBoth","flip","flipX","flipY","skewX","skew","length","isFinite","skewY","scaleX","scale","scaleY","shear","theta","rotate","origin","around","ox","originX","oy","originY","x","y","position","px","positionX","NaN","py","positionY","translate","tx","translateX","ty","translateY","relative","rx","relativeX","ry","relativeY","fromArray","c","d","e","f","isMatrixLike","matrixMultiply","l","r","cx","cy","matrix","clone","aroundO","dx","dy","translateO","lmultiplyO","decompose","determinant","ccw","sx","sqrt","thetaRad","atan2","PI","ct","cos","st","sin","lam","sy","equals","other","comp","axis","flipO","scaleO","source","base","matrixify","split","map","parseFloat","Array","isArray","transform","arguments","slice","call","inverse","inverseO","det","Error","na","nb","nc","nd","ne","nf","lmultiply","multiply","multiplyO","rotateO","shearO","lx","skewO","tan","ly","toArray","toString","t","current","transformer","valueOf","ctm","node","getCTM","screenCTM","isRoot","rect","m","getScreenCTM","remove","console","warn","nodeName"],"sources":["C:/Users/otff/Desktop/mindmap_demo/mind_demo/node_modules/@svgdotjs/svg.js/src/types/Matrix.js"],"sourcesContent":["import { delimiter } from '../modules/core/regex.js'\nimport { radians } from '../utils/utils.js'\nimport { register } from '../utils/adopter.js'\nimport Element from '../elements/Element.js'\nimport Point from './Point.js'\n\nfunction closeEnough(a, b, threshold) {\n  return Math.abs(b - a) < (threshold || 1e-6)\n}\n\nexport default class Matrix {\n  constructor(...args) {\n    this.init(...args)\n  }\n\n  static formatTransforms(o) {\n    // Get all of the parameters required to form the matrix\n    const flipBoth = o.flip === 'both' || o.flip === true\n    const flipX = o.flip && (flipBoth || o.flip === 'x') ? -1 : 1\n    const flipY = o.flip && (flipBoth || o.flip === 'y') ? -1 : 1\n    const skewX =\n      o.skew && o.skew.length\n        ? o.skew[0]\n        : isFinite(o.skew)\n          ? o.skew\n          : isFinite(o.skewX)\n            ? o.skewX\n            : 0\n    const skewY =\n      o.skew && o.skew.length\n        ? o.skew[1]\n        : isFinite(o.skew)\n          ? o.skew\n          : isFinite(o.skewY)\n            ? o.skewY\n            : 0\n    const scaleX =\n      o.scale && o.scale.length\n        ? o.scale[0] * flipX\n        : isFinite(o.scale)\n          ? o.scale * flipX\n          : isFinite(o.scaleX)\n            ? o.scaleX * flipX\n            : flipX\n    const scaleY =\n      o.scale && o.scale.length\n        ? o.scale[1] * flipY\n        : isFinite(o.scale)\n          ? o.scale * flipY\n          : isFinite(o.scaleY)\n            ? o.scaleY * flipY\n            : flipY\n    const shear = o.shear || 0\n    const theta = o.rotate || o.theta || 0\n    const origin = new Point(\n      o.origin || o.around || o.ox || o.originX,\n      o.oy || o.originY\n    )\n    const ox = origin.x\n    const oy = origin.y\n    // We need Point to be invalid if nothing was passed because we cannot default to 0 here. That is why NaN\n    const position = new Point(\n      o.position || o.px || o.positionX || NaN,\n      o.py || o.positionY || NaN\n    )\n    const px = position.x\n    const py = position.y\n    const translate = new Point(\n      o.translate || o.tx || o.translateX,\n      o.ty || o.translateY\n    )\n    const tx = translate.x\n    const ty = translate.y\n    const relative = new Point(\n      o.relative || o.rx || o.relativeX,\n      o.ry || o.relativeY\n    )\n    const rx = relative.x\n    const ry = relative.y\n\n    // Populate all of the values\n    return {\n      scaleX,\n      scaleY,\n      skewX,\n      skewY,\n      shear,\n      theta,\n      rx,\n      ry,\n      tx,\n      ty,\n      ox,\n      oy,\n      px,\n      py\n    }\n  }\n\n  static fromArray(a) {\n    return { a: a[0], b: a[1], c: a[2], d: a[3], e: a[4], f: a[5] }\n  }\n\n  static isMatrixLike(o) {\n    return (\n      o.a != null ||\n      o.b != null ||\n      o.c != null ||\n      o.d != null ||\n      o.e != null ||\n      o.f != null\n    )\n  }\n\n  // left matrix, right matrix, target matrix which is overwritten\n  static matrixMultiply(l, r, o) {\n    // Work out the product directly\n    const a = l.a * r.a + l.c * r.b\n    const b = l.b * r.a + l.d * r.b\n    const c = l.a * r.c + l.c * r.d\n    const d = l.b * r.c + l.d * r.d\n    const e = l.e + l.a * r.e + l.c * r.f\n    const f = l.f + l.b * r.e + l.d * r.f\n\n    // make sure to use local variables because l/r and o could be the same\n    o.a = a\n    o.b = b\n    o.c = c\n    o.d = d\n    o.e = e\n    o.f = f\n\n    return o\n  }\n\n  around(cx, cy, matrix) {\n    return this.clone().aroundO(cx, cy, matrix)\n  }\n\n  // Transform around a center point\n  aroundO(cx, cy, matrix) {\n    const dx = cx || 0\n    const dy = cy || 0\n    return this.translateO(-dx, -dy).lmultiplyO(matrix).translateO(dx, dy)\n  }\n\n  // Clones this matrix\n  clone() {\n    return new Matrix(this)\n  }\n\n  // Decomposes this matrix into its affine parameters\n  decompose(cx = 0, cy = 0) {\n    // Get the parameters from the matrix\n    const a = this.a\n    const b = this.b\n    const c = this.c\n    const d = this.d\n    const e = this.e\n    const f = this.f\n\n    // Figure out if the winding direction is clockwise or counterclockwise\n    const determinant = a * d - b * c\n    const ccw = determinant > 0 ? 1 : -1\n\n    // Since we only shear in x, we can use the x basis to get the x scale\n    // and the rotation of the resulting matrix\n    const sx = ccw * Math.sqrt(a * a + b * b)\n    const thetaRad = Math.atan2(ccw * b, ccw * a)\n    const theta = (180 / Math.PI) * thetaRad\n    const ct = Math.cos(thetaRad)\n    const st = Math.sin(thetaRad)\n\n    // We can then solve the y basis vector simultaneously to get the other\n    // two affine parameters directly from these parameters\n    const lam = (a * c + b * d) / determinant\n    const sy = (c * sx) / (lam * a - b) || (d * sx) / (lam * b + a)\n\n    // Use the translations\n    const tx = e - cx + cx * ct * sx + cy * (lam * ct * sx - st * sy)\n    const ty = f - cy + cx * st * sx + cy * (lam * st * sx + ct * sy)\n\n    // Construct the decomposition and return it\n    return {\n      // Return the affine parameters\n      scaleX: sx,\n      scaleY: sy,\n      shear: lam,\n      rotate: theta,\n      translateX: tx,\n      translateY: ty,\n      originX: cx,\n      originY: cy,\n\n      // Return the matrix parameters\n      a: this.a,\n      b: this.b,\n      c: this.c,\n      d: this.d,\n      e: this.e,\n      f: this.f\n    }\n  }\n\n  // Check if two matrices are equal\n  equals(other) {\n    if (other === this) return true\n    const comp = new Matrix(other)\n    return (\n      closeEnough(this.a, comp.a) &&\n      closeEnough(this.b, comp.b) &&\n      closeEnough(this.c, comp.c) &&\n      closeEnough(this.d, comp.d) &&\n      closeEnough(this.e, comp.e) &&\n      closeEnough(this.f, comp.f)\n    )\n  }\n\n  // Flip matrix on x or y, at a given offset\n  flip(axis, around) {\n    return this.clone().flipO(axis, around)\n  }\n\n  flipO(axis, around) {\n    return axis === 'x'\n      ? this.scaleO(-1, 1, around, 0)\n      : axis === 'y'\n        ? this.scaleO(1, -1, 0, around)\n        : this.scaleO(-1, -1, axis, around || axis) // Define an x, y flip point\n  }\n\n  // Initialize\n  init(source) {\n    const base = Matrix.fromArray([1, 0, 0, 1, 0, 0])\n\n    // ensure source as object\n    source =\n      source instanceof Element\n        ? source.matrixify()\n        : typeof source === 'string'\n          ? Matrix.fromArray(source.split(delimiter).map(parseFloat))\n          : Array.isArray(source)\n            ? Matrix.fromArray(source)\n            : typeof source === 'object' && Matrix.isMatrixLike(source)\n              ? source\n              : typeof source === 'object'\n                ? new Matrix().transform(source)\n                : arguments.length === 6\n                  ? Matrix.fromArray([].slice.call(arguments))\n                  : base\n\n    // Merge the source matrix with the base matrix\n    this.a = source.a != null ? source.a : base.a\n    this.b = source.b != null ? source.b : base.b\n    this.c = source.c != null ? source.c : base.c\n    this.d = source.d != null ? source.d : base.d\n    this.e = source.e != null ? source.e : base.e\n    this.f = source.f != null ? source.f : base.f\n\n    return this\n  }\n\n  inverse() {\n    return this.clone().inverseO()\n  }\n\n  // Inverses matrix\n  inverseO() {\n    // Get the current parameters out of the matrix\n    const a = this.a\n    const b = this.b\n    const c = this.c\n    const d = this.d\n    const e = this.e\n    const f = this.f\n\n    // Invert the 2x2 matrix in the top left\n    const det = a * d - b * c\n    if (!det) throw new Error('Cannot invert ' + this)\n\n    // Calculate the top 2x2 matrix\n    const na = d / det\n    const nb = -b / det\n    const nc = -c / det\n    const nd = a / det\n\n    // Apply the inverted matrix to the top right\n    const ne = -(na * e + nc * f)\n    const nf = -(nb * e + nd * f)\n\n    // Construct the inverted matrix\n    this.a = na\n    this.b = nb\n    this.c = nc\n    this.d = nd\n    this.e = ne\n    this.f = nf\n\n    return this\n  }\n\n  lmultiply(matrix) {\n    return this.clone().lmultiplyO(matrix)\n  }\n\n  lmultiplyO(matrix) {\n    const r = this\n    const l = matrix instanceof Matrix ? matrix : new Matrix(matrix)\n\n    return Matrix.matrixMultiply(l, r, this)\n  }\n\n  // Left multiplies by the given matrix\n  multiply(matrix) {\n    return this.clone().multiplyO(matrix)\n  }\n\n  multiplyO(matrix) {\n    // Get the matrices\n    const l = this\n    const r = matrix instanceof Matrix ? matrix : new Matrix(matrix)\n\n    return Matrix.matrixMultiply(l, r, this)\n  }\n\n  // Rotate matrix\n  rotate(r, cx, cy) {\n    return this.clone().rotateO(r, cx, cy)\n  }\n\n  rotateO(r, cx = 0, cy = 0) {\n    // Convert degrees to radians\n    r = radians(r)\n\n    const cos = Math.cos(r)\n    const sin = Math.sin(r)\n\n    const { a, b, c, d, e, f } = this\n\n    this.a = a * cos - b * sin\n    this.b = b * cos + a * sin\n    this.c = c * cos - d * sin\n    this.d = d * cos + c * sin\n    this.e = e * cos - f * sin + cy * sin - cx * cos + cx\n    this.f = f * cos + e * sin - cx * sin - cy * cos + cy\n\n    return this\n  }\n\n  // Scale matrix\n  scale() {\n    return this.clone().scaleO(...arguments)\n  }\n\n  scaleO(x, y = x, cx = 0, cy = 0) {\n    // Support uniform scaling\n    if (arguments.length === 3) {\n      cy = cx\n      cx = y\n      y = x\n    }\n\n    const { a, b, c, d, e, f } = this\n\n    this.a = a * x\n    this.b = b * y\n    this.c = c * x\n    this.d = d * y\n    this.e = e * x - cx * x + cx\n    this.f = f * y - cy * y + cy\n\n    return this\n  }\n\n  // Shear matrix\n  shear(a, cx, cy) {\n    return this.clone().shearO(a, cx, cy)\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  shearO(lx, cx = 0, cy = 0) {\n    const { a, b, c, d, e, f } = this\n\n    this.a = a + b * lx\n    this.c = c + d * lx\n    this.e = e + f * lx - cy * lx\n\n    return this\n  }\n\n  // Skew Matrix\n  skew() {\n    return this.clone().skewO(...arguments)\n  }\n\n  skewO(x, y = x, cx = 0, cy = 0) {\n    // support uniformal skew\n    if (arguments.length === 3) {\n      cy = cx\n      cx = y\n      y = x\n    }\n\n    // Convert degrees to radians\n    x = radians(x)\n    y = radians(y)\n\n    const lx = Math.tan(x)\n    const ly = Math.tan(y)\n\n    const { a, b, c, d, e, f } = this\n\n    this.a = a + b * lx\n    this.b = b + a * ly\n    this.c = c + d * lx\n    this.d = d + c * ly\n    this.e = e + f * lx - cy * lx\n    this.f = f + e * ly - cx * ly\n\n    return this\n  }\n\n  // SkewX\n  skewX(x, cx, cy) {\n    return this.skew(x, 0, cx, cy)\n  }\n\n  // SkewY\n  skewY(y, cx, cy) {\n    return this.skew(0, y, cx, cy)\n  }\n\n  toArray() {\n    return [this.a, this.b, this.c, this.d, this.e, this.f]\n  }\n\n  // Convert matrix to string\n  toString() {\n    return (\n      'matrix(' +\n      this.a +\n      ',' +\n      this.b +\n      ',' +\n      this.c +\n      ',' +\n      this.d +\n      ',' +\n      this.e +\n      ',' +\n      this.f +\n      ')'\n    )\n  }\n\n  // Transform a matrix into another matrix by manipulating the space\n  transform(o) {\n    // Check if o is a matrix and then left multiply it directly\n    if (Matrix.isMatrixLike(o)) {\n      const matrix = new Matrix(o)\n      return matrix.multiplyO(this)\n    }\n\n    // Get the proposed transformations and the current transformations\n    const t = Matrix.formatTransforms(o)\n    const current = this\n    const { x: ox, y: oy } = new Point(t.ox, t.oy).transform(current)\n\n    // Construct the resulting matrix\n    const transformer = new Matrix()\n      .translateO(t.rx, t.ry)\n      .lmultiplyO(current)\n      .translateO(-ox, -oy)\n      .scaleO(t.scaleX, t.scaleY)\n      .skewO(t.skewX, t.skewY)\n      .shearO(t.shear)\n      .rotateO(t.theta)\n      .translateO(ox, oy)\n\n    // If we want the origin at a particular place, we force it there\n    if (isFinite(t.px) || isFinite(t.py)) {\n      const origin = new Point(ox, oy).transform(transformer)\n      // TODO: Replace t.px with isFinite(t.px)\n      // Doesn't work because t.px is also 0 if it wasn't passed\n      const dx = isFinite(t.px) ? t.px - origin.x : 0\n      const dy = isFinite(t.py) ? t.py - origin.y : 0\n      transformer.translateO(dx, dy)\n    }\n\n    // Translate now after positioning\n    transformer.translateO(t.tx, t.ty)\n    return transformer\n  }\n\n  // Translate matrix\n  translate(x, y) {\n    return this.clone().translateO(x, y)\n  }\n\n  translateO(x, y) {\n    this.e += x || 0\n    this.f += y || 0\n    return this\n  }\n\n  valueOf() {\n    return {\n      a: this.a,\n      b: this.b,\n      c: this.c,\n      d: this.d,\n      e: this.e,\n      f: this.f\n    }\n  }\n}\n\nexport function ctm() {\n  return new Matrix(this.node.getCTM())\n}\n\nexport function screenCTM() {\n  try {\n    /* https://bugzilla.mozilla.org/show_bug.cgi?id=1344537\n       This is needed because FF does not return the transformation matrix\n       for the inner coordinate system when getScreenCTM() is called on nested svgs.\n       However all other Browsers do that */\n    if (typeof this.isRoot === 'function' && !this.isRoot()) {\n      const rect = this.rect(1, 1)\n      const m = rect.node.getScreenCTM()\n      rect.remove()\n      return new Matrix(m)\n    }\n    return new Matrix(this.node.getScreenCTM())\n  } catch (e) {\n    console.warn(\n      `Cannot get CTM from SVG node ${this.node.nodeName}. Is the element rendered?`\n    )\n    return new Matrix()\n  }\n}\n\nregister(Matrix, 'Matrix')\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}