{"ast":null,"code":"import { isImage } from '../modules/core/regex.js';\nimport { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js';\nimport { off, on } from '../modules/core/event.js';\nimport { registerAttrHook } from '../modules/core/attr.js';\nimport { registerMethods } from '../utils/methods.js';\nimport { xlink } from '../modules/core/namespaces.js';\nimport Pattern from './Pattern.js';\nimport Shape from './Shape.js';\nimport { globals } from '../utils/window.js';\nexport default class Image extends Shape {\n  constructor(node, attrs = node) {\n    super(nodeOrNew('image', node), attrs);\n  }\n\n  // (re)load image\n  load(url, callback) {\n    if (!url) return this;\n    const img = new globals.window.Image();\n    on(img, 'load', function (e) {\n      const p = this.parent(Pattern);\n\n      // ensure image size\n      if (this.width() === 0 && this.height() === 0) {\n        this.size(img.width, img.height);\n      }\n      if (p instanceof Pattern) {\n        // ensure pattern size if not set\n        if (p.width() === 0 && p.height() === 0) {\n          p.size(this.width(), this.height());\n        }\n      }\n      if (typeof callback === 'function') {\n        callback.call(this, e);\n      }\n    }, this);\n    on(img, 'load error', function () {\n      // dont forget to unbind memory leaking events\n      off(img);\n    });\n    return this.attr('href', img.src = url, xlink);\n  }\n}\nregisterAttrHook(function (attr, val, _this) {\n  // convert image fill and stroke to patterns\n  if (attr === 'fill' || attr === 'stroke') {\n    if (isImage.test(val)) {\n      val = _this.root().defs().image(val);\n    }\n  }\n  if (val instanceof Image) {\n    val = _this.root().defs().pattern(0, 0, pattern => {\n      pattern.add(val);\n    });\n  }\n  return val;\n});\nregisterMethods({\n  Container: {\n    // create image element, load image and set its size\n    image: wrapWithAttrCheck(function (source, callback) {\n      return this.put(new Image()).size(0, 0).load(source, callback);\n    })\n  }\n});\nregister(Image, 'Image');","map":{"version":3,"names":["isImage","nodeOrNew","register","wrapWithAttrCheck","off","on","registerAttrHook","registerMethods","xlink","Pattern","Shape","globals","Image","constructor","node","attrs","load","url","callback","img","window","e","p","parent","width","height","size","call","attr","src","val","_this","test","root","defs","image","pattern","add","Container","source","put"],"sources":["C:/Users/otff/Desktop/mindmap_demo/mind_demo/node_modules/@svgdotjs/svg.js/src/elements/Image.js"],"sourcesContent":["import { isImage } from '../modules/core/regex.js'\nimport { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\nimport { off, on } from '../modules/core/event.js'\nimport { registerAttrHook } from '../modules/core/attr.js'\nimport { registerMethods } from '../utils/methods.js'\nimport { xlink } from '../modules/core/namespaces.js'\nimport Pattern from './Pattern.js'\nimport Shape from './Shape.js'\nimport { globals } from '../utils/window.js'\n\nexport default class Image extends Shape {\n  constructor(node, attrs = node) {\n    super(nodeOrNew('image', node), attrs)\n  }\n\n  // (re)load image\n  load(url, callback) {\n    if (!url) return this\n\n    const img = new globals.window.Image()\n\n    on(\n      img,\n      'load',\n      function (e) {\n        const p = this.parent(Pattern)\n\n        // ensure image size\n        if (this.width() === 0 && this.height() === 0) {\n          this.size(img.width, img.height)\n        }\n\n        if (p instanceof Pattern) {\n          // ensure pattern size if not set\n          if (p.width() === 0 && p.height() === 0) {\n            p.size(this.width(), this.height())\n          }\n        }\n\n        if (typeof callback === 'function') {\n          callback.call(this, e)\n        }\n      },\n      this\n    )\n\n    on(img, 'load error', function () {\n      // dont forget to unbind memory leaking events\n      off(img)\n    })\n\n    return this.attr('href', (img.src = url), xlink)\n  }\n}\n\nregisterAttrHook(function (attr, val, _this) {\n  // convert image fill and stroke to patterns\n  if (attr === 'fill' || attr === 'stroke') {\n    if (isImage.test(val)) {\n      val = _this.root().defs().image(val)\n    }\n  }\n\n  if (val instanceof Image) {\n    val = _this\n      .root()\n      .defs()\n      .pattern(0, 0, (pattern) => {\n        pattern.add(val)\n      })\n  }\n\n  return val\n})\n\nregisterMethods({\n  Container: {\n    // create image element, load image and set its size\n    image: wrapWithAttrCheck(function (source, callback) {\n      return this.put(new Image()).size(0, 0).load(source, callback)\n    })\n  }\n})\n\nregister(Image, 'Image')\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}