{"ast":null,"code":"import { CONSTANTS } from '../../constants/constant';\n\n//  视图操作类\nclass View {\n  //  构造函数\n  constructor(opt = {}) {\n    this.opt = opt;\n    this.mindMap = this.opt.mindMap;\n    this.scale = 1;\n    this.sx = 0;\n    this.sy = 0;\n    this.x = 0;\n    this.y = 0;\n    this.firstDrag = true;\n    this.setTransformData(this.mindMap.opt.viewData);\n    this.bind();\n  }\n\n  //  绑定\n  bind() {\n    // 快捷键\n    this.mindMap.keyCommand.addShortcut('Control+=', () => {\n      this.enlarge();\n    });\n    this.mindMap.keyCommand.addShortcut('Control+-', () => {\n      this.narrow();\n    });\n    this.mindMap.keyCommand.addShortcut('Control+i', () => {\n      this.fit();\n    });\n    // 拖动视图\n    this.mindMap.event.on('mousedown', () => {\n      if (this.mindMap.opt.isDisableDrag) return;\n      this.sx = this.x;\n      this.sy = this.y;\n    });\n    this.mindMap.event.on('drag', (e, event) => {\n      // 按住ctrl键拖动为多选\n      // 禁用拖拽\n      if (e.ctrlKey || e.metaKey || this.mindMap.opt.isDisableDrag) {\n        return;\n      }\n      if (this.firstDrag) {\n        this.firstDrag = false;\n        // 清除激活节点\n        if (this.mindMap.renderer.activeNodeList.length > 0) {\n          this.mindMap.execCommand('CLEAR_ACTIVE_NODE');\n        }\n      }\n      this.x = this.sx + event.mousemoveOffset.x;\n      this.y = this.sy + event.mousemoveOffset.y;\n      this.transform();\n    });\n    this.mindMap.event.on('mouseup', () => {\n      this.firstDrag = true;\n    });\n    // 放大缩小视图\n    this.mindMap.event.on('mousewheel', (e, dirs, event, isTouchPad) => {\n      const {\n        customHandleMousewheel,\n        mousewheelAction,\n        mouseScaleCenterUseMousePosition,\n        mousewheelMoveStep,\n        mousewheelZoomActionReverse,\n        disableMouseWheelZoom\n      } = this.mindMap.opt;\n      // 是否自定义鼠标滚轮事件\n      if (customHandleMousewheel && typeof customHandleMousewheel === 'function') {\n        return customHandleMousewheel(e);\n      }\n      // 1.鼠标滚轮事件控制缩放\n      if (mousewheelAction === CONSTANTS.MOUSE_WHEEL_ACTION.ZOOM || e.ctrlKey || e.metaKey) {\n        if (disableMouseWheelZoom) return;\n        const {\n          x: clientX,\n          y: clientY\n        } = this.mindMap.toPos(e.clientX, e.clientY);\n        const cx = mouseScaleCenterUseMousePosition ? clientX : undefined;\n        const cy = mouseScaleCenterUseMousePosition ? clientY : undefined;\n        // 如果来自触控板，那么过滤掉左右的移动\n        if (isTouchPad && (dirs.includes(CONSTANTS.DIR.LEFT) || dirs.includes(CONSTANTS.DIR.RIGHT))) {\n          dirs = dirs.filter(dir => {\n            return ![CONSTANTS.DIR.LEFT, CONSTANTS.DIR.RIGHT].includes(dir);\n          });\n        }\n        switch (true) {\n          // 鼠标滚轮，向上和向左，都是缩小\n          case dirs.includes(CONSTANTS.DIR.UP || CONSTANTS.DIR.LEFT):\n            mousewheelZoomActionReverse ? this.enlarge(cx, cy, isTouchPad) : this.narrow(cx, cy, isTouchPad);\n            break;\n          // 鼠标滚轮，向下和向右，都是放大\n          case dirs.includes(CONSTANTS.DIR.DOWN || CONSTANTS.DIR.RIGHT):\n            mousewheelZoomActionReverse ? this.narrow(cx, cy, isTouchPad) : this.enlarge(cx, cy, isTouchPad);\n            break;\n        }\n      } else {\n        // 2.鼠标滚轮事件控制画布移动\n        const step = isTouchPad ? 10 : mousewheelMoveStep;\n        let mx = 0;\n        let my = 0;\n        // 上移\n        if (dirs.includes(CONSTANTS.DIR.DOWN)) {\n          my = -step;\n        }\n        // 下移\n        if (dirs.includes(CONSTANTS.DIR.UP)) {\n          my = step;\n        }\n        // 右移\n        if (dirs.includes(CONSTANTS.DIR.LEFT)) {\n          mx = step;\n        }\n        // 左移\n        if (dirs.includes(CONSTANTS.DIR.RIGHT)) {\n          mx = -step;\n        }\n        this.translateXY(mx, my);\n      }\n    });\n    this.mindMap.on('resize', () => {\n      if (!this.checkNeedMindMapInCanvas()) return;\n      this.transform();\n    });\n  }\n\n  //  获取当前变换状态数据\n  getTransformData() {\n    return {\n      transform: this.mindMap.draw.transform(),\n      state: {\n        scale: this.scale,\n        x: this.x,\n        y: this.y,\n        sx: this.sx,\n        sy: this.sy\n      }\n    };\n  }\n\n  //  动态设置变换状态数据\n  setTransformData(viewData) {\n    if (viewData) {\n      Object.keys(viewData.state).forEach(prop => {\n        this[prop] = viewData.state[prop];\n      });\n      this.mindMap.draw.transform({\n        ...viewData.transform\n      });\n      this.mindMap.emit('view_data_change', this.getTransformData());\n      this.emitEvent('scale');\n      this.emitEvent('translate');\n    }\n  }\n\n  //  平移x,y方向\n  translateXY(x, y) {\n    if (x === 0 && y === 0) return;\n    this.x += x;\n    this.y += y;\n    this.transform();\n    this.emitEvent('translate');\n  }\n\n  //  平移x方向\n  translateX(step) {\n    if (step === 0) return;\n    this.x += step;\n    this.transform();\n    this.emitEvent('translate');\n  }\n\n  //  平移x方式到\n  translateXTo(x) {\n    this.x = x;\n    this.transform();\n    this.emitEvent('translate');\n  }\n\n  //  平移y方向\n  translateY(step) {\n    if (step === 0) return;\n    this.y += step;\n    this.transform();\n    this.emitEvent('translate');\n  }\n\n  //  平移y方向到\n  translateYTo(y) {\n    this.y = y;\n    this.transform();\n    this.emitEvent('translate');\n  }\n\n  //   应用变换\n  transform() {\n    try {\n      this.limitMindMapInCanvas();\n    } catch (error) {}\n    this.mindMap.draw.transform({\n      origin: [0, 0],\n      scale: this.scale,\n      translate: [this.x, this.y]\n    });\n    this.mindMap.emit('view_data_change', this.getTransformData());\n  }\n\n  //  恢复\n  reset() {\n    const scaleChange = this.scale !== 1;\n    const translateChange = this.x !== 0 || this.y !== 0;\n    this.scale = 1;\n    this.x = 0;\n    this.y = 0;\n    this.transform();\n    if (scaleChange) {\n      this.emitEvent('scale');\n    }\n    if (translateChange) {\n      this.emitEvent('translate');\n    }\n  }\n\n  //  缩小\n  narrow(cx, cy, isTouchPad) {\n    const scaleRatio = this.mindMap.opt.scaleRatio / (isTouchPad ? 5 : 1);\n    const scale = Math.max(this.scale - scaleRatio, 0.1);\n    this.scaleInCenter(scale, cx, cy);\n    this.transform();\n    this.emitEvent('scale');\n  }\n\n  //  放大\n  enlarge(cx, cy, isTouchPad) {\n    const scaleRatio = this.mindMap.opt.scaleRatio / (isTouchPad ? 5 : 1);\n    const scale = this.scale + scaleRatio;\n    this.scaleInCenter(scale, cx, cy);\n    this.transform();\n    this.emitEvent('scale');\n  }\n\n  // 基于指定中心进行缩放，cx，cy 可不指定，此时会使用画布中心点\n  scaleInCenter(scale, cx, cy) {\n    if (cx === undefined || cy === undefined) {\n      cx = this.mindMap.width / 2;\n      cy = this.mindMap.height / 2;\n    }\n    const prevScale = this.scale;\n    const ratio = 1 - scale / prevScale;\n    const dx = (cx - this.x) * ratio;\n    const dy = (cy - this.y) * ratio;\n    this.x += dx;\n    this.y += dy;\n    this.scale = scale;\n  }\n\n  //  设置缩放\n  setScale(scale, cx, cy) {\n    if (cx !== undefined && cy !== undefined) {\n      this.scaleInCenter(scale, cx, cy);\n    } else {\n      this.scale = scale;\n    }\n    this.transform();\n    this.emitEvent('scale');\n  }\n\n  // 适应画布大小\n  fit(getRbox = () => {}, enlarge = false, fitPadding) {\n    fitPadding = fitPadding === undefined ? this.mindMap.opt.fitPadding : fitPadding;\n    const draw = this.mindMap.draw;\n    const origTransform = draw.transform();\n    const rect = getRbox() || draw.rbox();\n    const drawWidth = rect.width / origTransform.scaleX;\n    const drawHeight = rect.height / origTransform.scaleY;\n    const drawRatio = drawWidth / drawHeight;\n    let {\n      width: elWidth,\n      height: elHeight\n    } = this.mindMap.elRect;\n    elWidth = elWidth - fitPadding * 2;\n    elHeight = elHeight - fitPadding * 2;\n    const elRatio = elWidth / elHeight;\n    let newScale = 0;\n    let flag = '';\n    if (drawWidth <= elWidth && drawHeight <= elHeight && !enlarge) {\n      newScale = 1;\n      flag = 1;\n    } else {\n      let newWidth = 0;\n      let newHeight = 0;\n      if (drawRatio > elRatio) {\n        newWidth = elWidth;\n        newHeight = elWidth / drawRatio;\n        flag = 2;\n      } else {\n        newHeight = elHeight;\n        newWidth = elHeight * drawRatio;\n        flag = 3;\n      }\n      newScale = newWidth / drawWidth;\n    }\n    this.setScale(newScale);\n    const newRect = getRbox() || draw.rbox();\n    // 需要考虑画布容器距浏览器窗口左上角的距离\n    newRect.x -= this.mindMap.elRect.left;\n    newRect.y -= this.mindMap.elRect.top;\n    let newX = 0;\n    let newY = 0;\n    if (flag === 1) {\n      newX = -newRect.x + fitPadding + (elWidth - newRect.width) / 2;\n      newY = -newRect.y + fitPadding + (elHeight - newRect.height) / 2;\n    } else if (flag === 2) {\n      newX = -newRect.x + fitPadding;\n      newY = -newRect.y + fitPadding + (elHeight - newRect.height) / 2;\n    } else if (flag === 3) {\n      newX = -newRect.x + fitPadding + (elWidth - newRect.width) / 2;\n      newY = -newRect.y + fitPadding;\n    }\n    this.translateXY(newX, newY);\n  }\n\n  // 判断是否需要将思维导图限制在画布内\n  checkNeedMindMapInCanvas() {\n    const {\n      isLimitMindMapInCanvasWhenHasScrollbar,\n      isLimitMindMapInCanvas\n    } = this.mindMap.opt;\n    // 如果注册了滚动条插件，那么使用isLimitMindMapInCanvasWhenHasScrollbar配置\n    if (this.mindMap.scrollbar) {\n      return isLimitMindMapInCanvasWhenHasScrollbar;\n    } else {\n      // 否则使用isLimitMindMapInCanvas配置\n      return isLimitMindMapInCanvas;\n    }\n  }\n\n  // 将思维导图限制在画布内\n  limitMindMapInCanvas() {\n    if (!this.checkNeedMindMapInCanvas()) return;\n    let {\n      scale,\n      left,\n      top,\n      right,\n      bottom\n    } = this.getPositionLimit();\n\n    // 画布宽高改变了，但是思维导图元素变换的中心点依旧是原有位置，所以需要加上中心点变化量\n    const centerXChange = (this.mindMap.width - this.mindMap.initWidth) / 2 * scale;\n    const centerYChange = (this.mindMap.height - this.mindMap.initHeight) / 2 * scale;\n\n    // 如果缩放值改变了\n    const scaleRatio = this.scale / scale;\n    left *= scaleRatio;\n    right *= scaleRatio;\n    top *= scaleRatio;\n    bottom *= scaleRatio;\n\n    // 加上画布中心点距离\n    const centerX = this.mindMap.width / 2;\n    const centerY = this.mindMap.height / 2;\n    const scaleOffset = this.scale - 1;\n    left -= scaleOffset * centerX - centerXChange;\n    right -= scaleOffset * centerX - centerXChange;\n    top -= scaleOffset * centerY - centerYChange;\n    bottom -= scaleOffset * centerY - centerYChange;\n\n    // 判断是否超出边界\n    if (this.x > left) {\n      this.x = left;\n    }\n    if (this.x < right) {\n      this.x = right;\n    }\n    if (this.y > top) {\n      this.y = top;\n    }\n    if (this.y < bottom) {\n      this.y = bottom;\n    }\n  }\n\n  // 计算图形四个方向的位置边界值\n  getPositionLimit() {\n    const {\n      scaleX,\n      scaleY\n    } = this.mindMap.draw.transform();\n    const drawRect = this.mindMap.draw.rbox();\n    const rootRect = this.mindMap.renderer.root.group.rbox();\n    const rootCenterOffset = this.mindMap.renderer.layout.getRootCenterOffset(rootRect.width, rootRect.height);\n    const left = rootRect.x - drawRect.x - rootCenterOffset.x * scaleX;\n    const right = rootRect.x - drawRect.x2 - rootCenterOffset.x * scaleX;\n    const top = rootRect.y - drawRect.y - rootCenterOffset.y * scaleY;\n    const bottom = rootRect.y - drawRect.y2 - rootCenterOffset.y * scaleY;\n    return {\n      scale: scaleX,\n      left,\n      right,\n      top,\n      bottom\n    };\n  }\n\n  // 派发事件\n  emitEvent(type) {\n    switch (type) {\n      case 'scale':\n        this.mindMap.emit('scale', this.scale);\n      case 'translate':\n        this.mindMap.emit('translate', this.x, this.y);\n    }\n  }\n}\nexport default View;","map":{"version":3,"names":["CONSTANTS","View","constructor","opt","mindMap","scale","sx","sy","x","y","firstDrag","setTransformData","viewData","bind","keyCommand","addShortcut","enlarge","narrow","fit","event","on","isDisableDrag","e","ctrlKey","metaKey","renderer","activeNodeList","length","execCommand","mousemoveOffset","transform","dirs","isTouchPad","customHandleMousewheel","mousewheelAction","mouseScaleCenterUseMousePosition","mousewheelMoveStep","mousewheelZoomActionReverse","disableMouseWheelZoom","MOUSE_WHEEL_ACTION","ZOOM","clientX","clientY","toPos","cx","undefined","cy","includes","DIR","LEFT","RIGHT","filter","dir","UP","DOWN","step","mx","my","translateXY","checkNeedMindMapInCanvas","getTransformData","draw","state","Object","keys","forEach","prop","emit","emitEvent","translateX","translateXTo","translateY","translateYTo","limitMindMapInCanvas","error","origin","translate","reset","scaleChange","translateChange","scaleRatio","Math","max","scaleInCenter","width","height","prevScale","ratio","dx","dy","setScale","getRbox","fitPadding","origTransform","rect","rbox","drawWidth","scaleX","drawHeight","scaleY","drawRatio","elWidth","elHeight","elRect","elRatio","newScale","flag","newWidth","newHeight","newRect","left","top","newX","newY","isLimitMindMapInCanvasWhenHasScrollbar","isLimitMindMapInCanvas","scrollbar","right","bottom","getPositionLimit","centerXChange","initWidth","centerYChange","initHeight","centerX","centerY","scaleOffset","drawRect","rootRect","root","group","rootCenterOffset","layout","getRootCenterOffset","x2","y2","type"],"sources":["C:/Users/otff/Desktop/mindmap_demo/mind_demo/node_modules/simple-mind-map/src/core/view/View.js"],"sourcesContent":["import { CONSTANTS } from '../../constants/constant'\r\n\r\n//  视图操作类\r\nclass View {\r\n  //  构造函数\r\n  constructor(opt = {}) {\r\n    this.opt = opt\r\n    this.mindMap = this.opt.mindMap\r\n    this.scale = 1\r\n    this.sx = 0\r\n    this.sy = 0\r\n    this.x = 0\r\n    this.y = 0\r\n    this.firstDrag = true\r\n    this.setTransformData(this.mindMap.opt.viewData)\r\n    this.bind()\r\n  }\r\n\r\n  //  绑定\r\n  bind() {\r\n    // 快捷键\r\n    this.mindMap.keyCommand.addShortcut('Control+=', () => {\r\n      this.enlarge()\r\n    })\r\n    this.mindMap.keyCommand.addShortcut('Control+-', () => {\r\n      this.narrow()\r\n    })\r\n    this.mindMap.keyCommand.addShortcut('Control+i', () => {\r\n      this.fit()\r\n    })\r\n    // 拖动视图\r\n    this.mindMap.event.on('mousedown', () => {\r\n      if (this.mindMap.opt.isDisableDrag) return\r\n      this.sx = this.x\r\n      this.sy = this.y\r\n    })\r\n    this.mindMap.event.on('drag', (e, event) => {\r\n      // 按住ctrl键拖动为多选\r\n      // 禁用拖拽\r\n      if (e.ctrlKey || e.metaKey || this.mindMap.opt.isDisableDrag) {\r\n        return\r\n      }\r\n      if (this.firstDrag) {\r\n        this.firstDrag = false\r\n        // 清除激活节点\r\n        if (this.mindMap.renderer.activeNodeList.length > 0) {\r\n          this.mindMap.execCommand('CLEAR_ACTIVE_NODE')\r\n        }\r\n      }\r\n      this.x = this.sx + event.mousemoveOffset.x\r\n      this.y = this.sy + event.mousemoveOffset.y\r\n      this.transform()\r\n    })\r\n    this.mindMap.event.on('mouseup', () => {\r\n      this.firstDrag = true\r\n    })\r\n    // 放大缩小视图\r\n    this.mindMap.event.on('mousewheel', (e, dirs, event, isTouchPad) => {\r\n      const {\r\n        customHandleMousewheel,\r\n        mousewheelAction,\r\n        mouseScaleCenterUseMousePosition,\r\n        mousewheelMoveStep,\r\n        mousewheelZoomActionReverse,\r\n        disableMouseWheelZoom\r\n      } = this.mindMap.opt\r\n      // 是否自定义鼠标滚轮事件\r\n      if (\r\n        customHandleMousewheel &&\r\n        typeof customHandleMousewheel === 'function'\r\n      ) {\r\n        return customHandleMousewheel(e)\r\n      }\r\n      // 1.鼠标滚轮事件控制缩放\r\n      if (\r\n        mousewheelAction === CONSTANTS.MOUSE_WHEEL_ACTION.ZOOM ||\r\n        e.ctrlKey ||\r\n        e.metaKey\r\n      ) {\r\n        if (disableMouseWheelZoom) return\r\n        const { x: clientX, y: clientY } = this.mindMap.toPos(\r\n          e.clientX,\r\n          e.clientY\r\n        )\r\n        const cx = mouseScaleCenterUseMousePosition ? clientX : undefined\r\n        const cy = mouseScaleCenterUseMousePosition ? clientY : undefined\r\n        // 如果来自触控板，那么过滤掉左右的移动\r\n        if (\r\n          isTouchPad &&\r\n          (dirs.includes(CONSTANTS.DIR.LEFT) ||\r\n            dirs.includes(CONSTANTS.DIR.RIGHT))\r\n        ) {\r\n          dirs = dirs.filter(dir => {\r\n            return ![CONSTANTS.DIR.LEFT, CONSTANTS.DIR.RIGHT].includes(dir)\r\n          })\r\n        }\r\n        switch (true) {\r\n          // 鼠标滚轮，向上和向左，都是缩小\r\n          case dirs.includes(CONSTANTS.DIR.UP || CONSTANTS.DIR.LEFT):\r\n            mousewheelZoomActionReverse\r\n              ? this.enlarge(cx, cy, isTouchPad)\r\n              : this.narrow(cx, cy, isTouchPad)\r\n            break\r\n          // 鼠标滚轮，向下和向右，都是放大\r\n          case dirs.includes(CONSTANTS.DIR.DOWN || CONSTANTS.DIR.RIGHT):\r\n            mousewheelZoomActionReverse\r\n              ? this.narrow(cx, cy, isTouchPad)\r\n              : this.enlarge(cx, cy, isTouchPad)\r\n            break\r\n        }\r\n      } else {\r\n        // 2.鼠标滚轮事件控制画布移动\r\n        const step = isTouchPad ? 10 : mousewheelMoveStep\r\n        let mx = 0\r\n        let my = 0\r\n        // 上移\r\n        if (dirs.includes(CONSTANTS.DIR.DOWN)) {\r\n          my = -step\r\n        }\r\n        // 下移\r\n        if (dirs.includes(CONSTANTS.DIR.UP)) {\r\n          my = step\r\n        }\r\n        // 右移\r\n        if (dirs.includes(CONSTANTS.DIR.LEFT)) {\r\n          mx = step\r\n        }\r\n        // 左移\r\n        if (dirs.includes(CONSTANTS.DIR.RIGHT)) {\r\n          mx = -step\r\n        }\r\n        this.translateXY(mx, my)\r\n      }\r\n    })\r\n    this.mindMap.on('resize', () => {\r\n      if (!this.checkNeedMindMapInCanvas()) return\r\n      this.transform()\r\n    })\r\n  }\r\n\r\n  //  获取当前变换状态数据\r\n  getTransformData() {\r\n    return {\r\n      transform: this.mindMap.draw.transform(),\r\n      state: {\r\n        scale: this.scale,\r\n        x: this.x,\r\n        y: this.y,\r\n        sx: this.sx,\r\n        sy: this.sy\r\n      }\r\n    }\r\n  }\r\n\r\n  //  动态设置变换状态数据\r\n  setTransformData(viewData) {\r\n    if (viewData) {\r\n      Object.keys(viewData.state).forEach(prop => {\r\n        this[prop] = viewData.state[prop]\r\n      })\r\n      this.mindMap.draw.transform({\r\n        ...viewData.transform\r\n      })\r\n      this.mindMap.emit('view_data_change', this.getTransformData())\r\n      this.emitEvent('scale')\r\n      this.emitEvent('translate')\r\n    }\r\n  }\r\n\r\n  //  平移x,y方向\r\n  translateXY(x, y) {\r\n    if (x === 0 && y === 0) return\r\n    this.x += x\r\n    this.y += y\r\n    this.transform()\r\n    this.emitEvent('translate')\r\n  }\r\n\r\n  //  平移x方向\r\n  translateX(step) {\r\n    if (step === 0) return\r\n    this.x += step\r\n    this.transform()\r\n    this.emitEvent('translate')\r\n  }\r\n\r\n  //  平移x方式到\r\n  translateXTo(x) {\r\n    this.x = x\r\n    this.transform()\r\n    this.emitEvent('translate')\r\n  }\r\n\r\n  //  平移y方向\r\n  translateY(step) {\r\n    if (step === 0) return\r\n    this.y += step\r\n    this.transform()\r\n    this.emitEvent('translate')\r\n  }\r\n\r\n  //  平移y方向到\r\n  translateYTo(y) {\r\n    this.y = y\r\n    this.transform()\r\n    this.emitEvent('translate')\r\n  }\r\n\r\n  //   应用变换\r\n  transform() {\r\n    try {\r\n      this.limitMindMapInCanvas()\r\n    } catch (error) {}\r\n    this.mindMap.draw.transform({\r\n      origin: [0, 0],\r\n      scale: this.scale,\r\n      translate: [this.x, this.y]\r\n    })\r\n    this.mindMap.emit('view_data_change', this.getTransformData())\r\n  }\r\n\r\n  //  恢复\r\n  reset() {\r\n    const scaleChange = this.scale !== 1\r\n    const translateChange = this.x !== 0 || this.y !== 0\r\n    this.scale = 1\r\n    this.x = 0\r\n    this.y = 0\r\n    this.transform()\r\n    if (scaleChange) {\r\n      this.emitEvent('scale')\r\n    }\r\n    if (translateChange) {\r\n      this.emitEvent('translate')\r\n    }\r\n  }\r\n\r\n  //  缩小\r\n  narrow(cx, cy, isTouchPad) {\r\n    const scaleRatio = this.mindMap.opt.scaleRatio / (isTouchPad ? 5 : 1)\r\n    const scale = Math.max(this.scale - scaleRatio, 0.1)\r\n    this.scaleInCenter(scale, cx, cy)\r\n    this.transform()\r\n    this.emitEvent('scale')\r\n  }\r\n\r\n  //  放大\r\n  enlarge(cx, cy, isTouchPad) {\r\n    const scaleRatio = this.mindMap.opt.scaleRatio / (isTouchPad ? 5 : 1)\r\n    const scale = this.scale + scaleRatio\r\n    this.scaleInCenter(scale, cx, cy)\r\n    this.transform()\r\n    this.emitEvent('scale')\r\n  }\r\n\r\n  // 基于指定中心进行缩放，cx，cy 可不指定，此时会使用画布中心点\r\n  scaleInCenter(scale, cx, cy) {\r\n    if (cx === undefined || cy === undefined) {\r\n      cx = this.mindMap.width / 2\r\n      cy = this.mindMap.height / 2\r\n    }\r\n    const prevScale = this.scale\r\n    const ratio = 1 - scale / prevScale\r\n    const dx = (cx - this.x) * ratio\r\n    const dy = (cy - this.y) * ratio\r\n    this.x += dx\r\n    this.y += dy\r\n    this.scale = scale\r\n  }\r\n\r\n  //  设置缩放\r\n  setScale(scale, cx, cy) {\r\n    if (cx !== undefined && cy !== undefined) {\r\n      this.scaleInCenter(scale, cx, cy)\r\n    } else {\r\n      this.scale = scale\r\n    }\r\n    this.transform()\r\n    this.emitEvent('scale')\r\n  }\r\n\r\n  // 适应画布大小\r\n  fit(getRbox = () => {}, enlarge = false, fitPadding) {\r\n    fitPadding =\r\n      fitPadding === undefined ? this.mindMap.opt.fitPadding : fitPadding\r\n    const draw = this.mindMap.draw\r\n    const origTransform = draw.transform()\r\n    const rect = getRbox() || draw.rbox()\r\n    const drawWidth = rect.width / origTransform.scaleX\r\n    const drawHeight = rect.height / origTransform.scaleY\r\n    const drawRatio = drawWidth / drawHeight\r\n    let { width: elWidth, height: elHeight } = this.mindMap.elRect\r\n    elWidth = elWidth - fitPadding * 2\r\n    elHeight = elHeight - fitPadding * 2\r\n    const elRatio = elWidth / elHeight\r\n    let newScale = 0\r\n    let flag = ''\r\n    if (drawWidth <= elWidth && drawHeight <= elHeight && !enlarge) {\r\n      newScale = 1\r\n      flag = 1\r\n    } else {\r\n      let newWidth = 0\r\n      let newHeight = 0\r\n      if (drawRatio > elRatio) {\r\n        newWidth = elWidth\r\n        newHeight = elWidth / drawRatio\r\n        flag = 2\r\n      } else {\r\n        newHeight = elHeight\r\n        newWidth = elHeight * drawRatio\r\n        flag = 3\r\n      }\r\n      newScale = newWidth / drawWidth\r\n    }\r\n    this.setScale(newScale)\r\n    const newRect = getRbox() || draw.rbox()\r\n    // 需要考虑画布容器距浏览器窗口左上角的距离\r\n    newRect.x -= this.mindMap.elRect.left\r\n    newRect.y -= this.mindMap.elRect.top\r\n    let newX = 0\r\n    let newY = 0\r\n    if (flag === 1) {\r\n      newX = -newRect.x + fitPadding + (elWidth - newRect.width) / 2\r\n      newY = -newRect.y + fitPadding + (elHeight - newRect.height) / 2\r\n    } else if (flag === 2) {\r\n      newX = -newRect.x + fitPadding\r\n      newY = -newRect.y + fitPadding + (elHeight - newRect.height) / 2\r\n    } else if (flag === 3) {\r\n      newX = -newRect.x + fitPadding + (elWidth - newRect.width) / 2\r\n      newY = -newRect.y + fitPadding\r\n    }\r\n    this.translateXY(newX, newY)\r\n  }\r\n\r\n  // 判断是否需要将思维导图限制在画布内\r\n  checkNeedMindMapInCanvas() {\r\n    const { isLimitMindMapInCanvasWhenHasScrollbar, isLimitMindMapInCanvas } =\r\n      this.mindMap.opt\r\n    // 如果注册了滚动条插件，那么使用isLimitMindMapInCanvasWhenHasScrollbar配置\r\n    if (this.mindMap.scrollbar) {\r\n      return isLimitMindMapInCanvasWhenHasScrollbar\r\n    } else {\r\n      // 否则使用isLimitMindMapInCanvas配置\r\n      return isLimitMindMapInCanvas\r\n    }\r\n  }\r\n\r\n  // 将思维导图限制在画布内\r\n  limitMindMapInCanvas() {\r\n    if (!this.checkNeedMindMapInCanvas()) return\r\n\r\n    let { scale, left, top, right, bottom } = this.getPositionLimit()\r\n\r\n    // 画布宽高改变了，但是思维导图元素变换的中心点依旧是原有位置，所以需要加上中心点变化量\r\n    const centerXChange =\r\n      ((this.mindMap.width - this.mindMap.initWidth) / 2) * scale\r\n    const centerYChange =\r\n      ((this.mindMap.height - this.mindMap.initHeight) / 2) * scale\r\n\r\n    // 如果缩放值改变了\r\n    const scaleRatio = this.scale / scale\r\n    left *= scaleRatio\r\n    right *= scaleRatio\r\n    top *= scaleRatio\r\n    bottom *= scaleRatio\r\n\r\n    // 加上画布中心点距离\r\n    const centerX = this.mindMap.width / 2\r\n    const centerY = this.mindMap.height / 2\r\n    const scaleOffset = this.scale - 1\r\n    left -= scaleOffset * centerX - centerXChange\r\n    right -= scaleOffset * centerX - centerXChange\r\n    top -= scaleOffset * centerY - centerYChange\r\n    bottom -= scaleOffset * centerY - centerYChange\r\n\r\n    // 判断是否超出边界\r\n    if (this.x > left) {\r\n      this.x = left\r\n    }\r\n    if (this.x < right) {\r\n      this.x = right\r\n    }\r\n    if (this.y > top) {\r\n      this.y = top\r\n    }\r\n    if (this.y < bottom) {\r\n      this.y = bottom\r\n    }\r\n  }\r\n\r\n  // 计算图形四个方向的位置边界值\r\n  getPositionLimit() {\r\n    const { scaleX, scaleY } = this.mindMap.draw.transform()\r\n    const drawRect = this.mindMap.draw.rbox()\r\n    const rootRect = this.mindMap.renderer.root.group.rbox()\r\n    const rootCenterOffset = this.mindMap.renderer.layout.getRootCenterOffset(\r\n      rootRect.width,\r\n      rootRect.height\r\n    )\r\n    const left = rootRect.x - drawRect.x - rootCenterOffset.x * scaleX\r\n    const right = rootRect.x - drawRect.x2 - rootCenterOffset.x * scaleX\r\n    const top = rootRect.y - drawRect.y - rootCenterOffset.y * scaleY\r\n    const bottom = rootRect.y - drawRect.y2 - rootCenterOffset.y * scaleY\r\n    return {\r\n      scale: scaleX,\r\n      left,\r\n      right,\r\n      top,\r\n      bottom\r\n    }\r\n  }\r\n\r\n  // 派发事件\r\n  emitEvent(type) {\r\n    switch (type) {\r\n      case 'scale':\r\n        this.mindMap.emit('scale', this.scale)\r\n      case 'translate':\r\n        this.mindMap.emit('translate', this.x, this.y)\r\n    }\r\n  }\r\n}\r\n\r\nexport default View\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}