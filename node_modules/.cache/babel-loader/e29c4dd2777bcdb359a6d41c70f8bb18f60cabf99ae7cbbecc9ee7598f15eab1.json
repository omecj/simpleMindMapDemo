{"ast":null,"code":"import { extend, nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js';\nimport { globals } from '../utils/window.js';\nimport { registerMethods } from '../utils/methods.js';\nimport SVGNumber from '../types/SVGNumber.js';\nimport Shape from './Shape.js';\nimport Text from './Text.js';\nimport * as textable from '../modules/core/textable.js';\nexport default class Tspan extends Shape {\n  // Initialize node\n  constructor(node, attrs = node) {\n    super(nodeOrNew('tspan', node), attrs);\n    this._build = false; // disable build mode for adding multiple lines\n  }\n\n  // Shortcut dx\n  dx(dx) {\n    return this.attr('dx', dx);\n  }\n\n  // Shortcut dy\n  dy(dy) {\n    return this.attr('dy', dy);\n  }\n\n  // Create new line\n  newLine() {\n    // mark new line\n    this.dom.newLined = true;\n\n    // fetch parent\n    const text = this.parent();\n\n    // early return in case we are not in a text element\n    if (!(text instanceof Text)) {\n      return this;\n    }\n    const i = text.index(this);\n    const fontSize = globals.window.getComputedStyle(this.node).getPropertyValue('font-size');\n    const dy = text.dom.leading * new SVGNumber(fontSize);\n\n    // apply new position\n    return this.dy(i ? dy : 0).attr('x', text.x());\n  }\n\n  // Set text content\n  text(text) {\n    if (text == null) return this.node.textContent + (this.dom.newLined ? '\\n' : '');\n    if (typeof text === 'function') {\n      this.clear().build(true);\n      text.call(this, this);\n      this.build(false);\n    } else {\n      this.plain(text);\n    }\n    return this;\n  }\n}\nextend(Tspan, textable);\nregisterMethods({\n  Tspan: {\n    tspan: wrapWithAttrCheck(function (text = '') {\n      const tspan = new Tspan();\n\n      // clear if build mode is disabled\n      if (!this._build) {\n        this.clear();\n      }\n\n      // add new tspan\n      return this.put(tspan).text(text);\n    })\n  },\n  Text: {\n    newLine: function (text = '') {\n      return this.tspan(text).newLine();\n    }\n  }\n});\nregister(Tspan, 'Tspan');","map":{"version":3,"names":["extend","nodeOrNew","register","wrapWithAttrCheck","globals","registerMethods","SVGNumber","Shape","Text","textable","Tspan","constructor","node","attrs","_build","dx","attr","dy","newLine","dom","newLined","text","parent","i","index","fontSize","window","getComputedStyle","getPropertyValue","leading","x","textContent","clear","build","call","plain","tspan","put"],"sources":["C:/Users/otff/Desktop/mindmap_demo/mind_demo/node_modules/@svgdotjs/svg.js/src/elements/Tspan.js"],"sourcesContent":["import {\n  extend,\n  nodeOrNew,\n  register,\n  wrapWithAttrCheck\n} from '../utils/adopter.js'\nimport { globals } from '../utils/window.js'\nimport { registerMethods } from '../utils/methods.js'\nimport SVGNumber from '../types/SVGNumber.js'\nimport Shape from './Shape.js'\nimport Text from './Text.js'\nimport * as textable from '../modules/core/textable.js'\n\nexport default class Tspan extends Shape {\n  // Initialize node\n  constructor(node, attrs = node) {\n    super(nodeOrNew('tspan', node), attrs)\n    this._build = false // disable build mode for adding multiple lines\n  }\n\n  // Shortcut dx\n  dx(dx) {\n    return this.attr('dx', dx)\n  }\n\n  // Shortcut dy\n  dy(dy) {\n    return this.attr('dy', dy)\n  }\n\n  // Create new line\n  newLine() {\n    // mark new line\n    this.dom.newLined = true\n\n    // fetch parent\n    const text = this.parent()\n\n    // early return in case we are not in a text element\n    if (!(text instanceof Text)) {\n      return this\n    }\n\n    const i = text.index(this)\n\n    const fontSize = globals.window\n      .getComputedStyle(this.node)\n      .getPropertyValue('font-size')\n    const dy = text.dom.leading * new SVGNumber(fontSize)\n\n    // apply new position\n    return this.dy(i ? dy : 0).attr('x', text.x())\n  }\n\n  // Set text content\n  text(text) {\n    if (text == null)\n      return this.node.textContent + (this.dom.newLined ? '\\n' : '')\n\n    if (typeof text === 'function') {\n      this.clear().build(true)\n      text.call(this, this)\n      this.build(false)\n    } else {\n      this.plain(text)\n    }\n\n    return this\n  }\n}\n\nextend(Tspan, textable)\n\nregisterMethods({\n  Tspan: {\n    tspan: wrapWithAttrCheck(function (text = '') {\n      const tspan = new Tspan()\n\n      // clear if build mode is disabled\n      if (!this._build) {\n        this.clear()\n      }\n\n      // add new tspan\n      return this.put(tspan).text(text)\n    })\n  },\n  Text: {\n    newLine: function (text = '') {\n      return this.tspan(text).newLine()\n    }\n  }\n})\n\nregister(Tspan, 'Tspan')\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}