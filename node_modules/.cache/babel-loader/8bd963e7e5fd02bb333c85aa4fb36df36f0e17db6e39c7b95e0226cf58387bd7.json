{"ast":null,"code":"import { addMethodNames } from './methods.js';\nimport { capitalize } from './utils.js';\nimport { svg } from '../modules/core/namespaces.js';\nimport { globals } from '../utils/window.js';\nimport Base from '../types/Base.js';\nconst elements = {};\nexport const root = '___SYMBOL___ROOT___';\n\n// Method for element creation\nexport function create(name, ns = svg) {\n  // create element\n  return globals.document.createElementNS(ns, name);\n}\nexport function makeInstance(element, isHTML = false) {\n  if (element instanceof Base) return element;\n  if (typeof element === 'object') {\n    return adopter(element);\n  }\n  if (element == null) {\n    return new elements[root]();\n  }\n  if (typeof element === 'string' && element.charAt(0) !== '<') {\n    return adopter(globals.document.querySelector(element));\n  }\n\n  // Make sure, that HTML elements are created with the correct namespace\n  const wrapper = isHTML ? globals.document.createElement('div') : create('svg');\n  wrapper.innerHTML = element;\n\n  // We can use firstChild here because we know,\n  // that the first char is < and thus an element\n  element = adopter(wrapper.firstChild);\n\n  // make sure, that element doesn't have its wrapper attached\n  wrapper.removeChild(wrapper.firstChild);\n  return element;\n}\nexport function nodeOrNew(name, node) {\n  return node && (node instanceof globals.window.Node || node.ownerDocument && node instanceof node.ownerDocument.defaultView.Node) ? node : create(name);\n}\n\n// Adopt existing svg elements\nexport function adopt(node) {\n  // check for presence of node\n  if (!node) return null;\n\n  // make sure a node isn't already adopted\n  if (node.instance instanceof Base) return node.instance;\n  if (node.nodeName === '#document-fragment') {\n    return new elements.Fragment(node);\n  }\n\n  // initialize variables\n  let className = capitalize(node.nodeName || 'Dom');\n\n  // Make sure that gradients are adopted correctly\n  if (className === 'LinearGradient' || className === 'RadialGradient') {\n    className = 'Gradient';\n\n    // Fallback to Dom if element is not known\n  } else if (!elements[className]) {\n    className = 'Dom';\n  }\n  return new elements[className](node);\n}\nlet adopter = adopt;\nexport function mockAdopt(mock = adopt) {\n  adopter = mock;\n}\nexport function register(element, name = element.name, asRoot = false) {\n  elements[name] = element;\n  if (asRoot) elements[root] = element;\n  addMethodNames(Object.getOwnPropertyNames(element.prototype));\n  return element;\n}\nexport function getClass(name) {\n  return elements[name];\n}\n\n// Element id sequence\nlet did = 1000;\n\n// Get next named element id\nexport function eid(name) {\n  return 'Svgjs' + capitalize(name) + did++;\n}\n\n// Deep new id assignment\nexport function assignNewId(node) {\n  // do the same for SVG child nodes as well\n  for (let i = node.children.length - 1; i >= 0; i--) {\n    assignNewId(node.children[i]);\n  }\n  if (node.id) {\n    node.id = eid(node.nodeName);\n    return node;\n  }\n  return node;\n}\n\n// Method for extending objects\nexport function extend(modules, methods) {\n  let key, i;\n  modules = Array.isArray(modules) ? modules : [modules];\n  for (i = modules.length - 1; i >= 0; i--) {\n    for (key in methods) {\n      modules[i].prototype[key] = methods[key];\n    }\n  }\n}\nexport function wrapWithAttrCheck(fn) {\n  return function (...args) {\n    const o = args[args.length - 1];\n    if (o && o.constructor === Object && !(o instanceof Array)) {\n      return fn.apply(this, args.slice(0, -1)).attr(o);\n    } else {\n      return fn.apply(this, args);\n    }\n  };\n}","map":{"version":3,"names":["addMethodNames","capitalize","svg","globals","Base","elements","root","create","name","ns","document","createElementNS","makeInstance","element","isHTML","adopter","charAt","querySelector","wrapper","createElement","innerHTML","firstChild","removeChild","nodeOrNew","node","window","Node","ownerDocument","defaultView","adopt","instance","nodeName","Fragment","className","mockAdopt","mock","register","asRoot","Object","getOwnPropertyNames","prototype","getClass","did","eid","assignNewId","i","children","length","id","extend","modules","methods","key","Array","isArray","wrapWithAttrCheck","fn","args","o","constructor","apply","slice","attr"],"sources":["C:/Users/otff/Desktop/mindmap_demo/mind_demo/node_modules/@svgdotjs/svg.js/src/utils/adopter.js"],"sourcesContent":["import { addMethodNames } from './methods.js'\nimport { capitalize } from './utils.js'\nimport { svg } from '../modules/core/namespaces.js'\nimport { globals } from '../utils/window.js'\nimport Base from '../types/Base.js'\n\nconst elements = {}\nexport const root = '___SYMBOL___ROOT___'\n\n// Method for element creation\nexport function create(name, ns = svg) {\n  // create element\n  return globals.document.createElementNS(ns, name)\n}\n\nexport function makeInstance(element, isHTML = false) {\n  if (element instanceof Base) return element\n\n  if (typeof element === 'object') {\n    return adopter(element)\n  }\n\n  if (element == null) {\n    return new elements[root]()\n  }\n\n  if (typeof element === 'string' && element.charAt(0) !== '<') {\n    return adopter(globals.document.querySelector(element))\n  }\n\n  // Make sure, that HTML elements are created with the correct namespace\n  const wrapper = isHTML ? globals.document.createElement('div') : create('svg')\n  wrapper.innerHTML = element\n\n  // We can use firstChild here because we know,\n  // that the first char is < and thus an element\n  element = adopter(wrapper.firstChild)\n\n  // make sure, that element doesn't have its wrapper attached\n  wrapper.removeChild(wrapper.firstChild)\n  return element\n}\n\nexport function nodeOrNew(name, node) {\n  return node &&\n    (node instanceof globals.window.Node ||\n      (node.ownerDocument &&\n        node instanceof node.ownerDocument.defaultView.Node))\n    ? node\n    : create(name)\n}\n\n// Adopt existing svg elements\nexport function adopt(node) {\n  // check for presence of node\n  if (!node) return null\n\n  // make sure a node isn't already adopted\n  if (node.instance instanceof Base) return node.instance\n\n  if (node.nodeName === '#document-fragment') {\n    return new elements.Fragment(node)\n  }\n\n  // initialize variables\n  let className = capitalize(node.nodeName || 'Dom')\n\n  // Make sure that gradients are adopted correctly\n  if (className === 'LinearGradient' || className === 'RadialGradient') {\n    className = 'Gradient'\n\n    // Fallback to Dom if element is not known\n  } else if (!elements[className]) {\n    className = 'Dom'\n  }\n\n  return new elements[className](node)\n}\n\nlet adopter = adopt\n\nexport function mockAdopt(mock = adopt) {\n  adopter = mock\n}\n\nexport function register(element, name = element.name, asRoot = false) {\n  elements[name] = element\n  if (asRoot) elements[root] = element\n\n  addMethodNames(Object.getOwnPropertyNames(element.prototype))\n\n  return element\n}\n\nexport function getClass(name) {\n  return elements[name]\n}\n\n// Element id sequence\nlet did = 1000\n\n// Get next named element id\nexport function eid(name) {\n  return 'Svgjs' + capitalize(name) + did++\n}\n\n// Deep new id assignment\nexport function assignNewId(node) {\n  // do the same for SVG child nodes as well\n  for (let i = node.children.length - 1; i >= 0; i--) {\n    assignNewId(node.children[i])\n  }\n\n  if (node.id) {\n    node.id = eid(node.nodeName)\n    return node\n  }\n\n  return node\n}\n\n// Method for extending objects\nexport function extend(modules, methods) {\n  let key, i\n\n  modules = Array.isArray(modules) ? modules : [modules]\n\n  for (i = modules.length - 1; i >= 0; i--) {\n    for (key in methods) {\n      modules[i].prototype[key] = methods[key]\n    }\n  }\n}\n\nexport function wrapWithAttrCheck(fn) {\n  return function (...args) {\n    const o = args[args.length - 1]\n\n    if (o && o.constructor === Object && !(o instanceof Array)) {\n      return fn.apply(this, args.slice(0, -1)).attr(o)\n    } else {\n      return fn.apply(this, args)\n    }\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}