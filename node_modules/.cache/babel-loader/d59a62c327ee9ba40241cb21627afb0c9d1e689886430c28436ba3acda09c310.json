{"ast":null,"code":"import { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js';\nimport { registerMethods } from '../utils/methods.js';\nimport Container from './Container.js';\nimport baseFind from '../modules/core/selector.js';\nexport default class ClipPath extends Container {\n  constructor(node, attrs = node) {\n    super(nodeOrNew('clipPath', node), attrs);\n  }\n\n  // Unclip all clipped elements and remove itself\n  remove() {\n    // unclip all targets\n    this.targets().forEach(function (el) {\n      el.unclip();\n    });\n\n    // remove clipPath from parent\n    return super.remove();\n  }\n  targets() {\n    return baseFind('svg [clip-path*=' + this.id() + ']');\n  }\n}\nregisterMethods({\n  Container: {\n    // Create clipping element\n    clip: wrapWithAttrCheck(function () {\n      return this.defs().put(new ClipPath());\n    })\n  },\n  Element: {\n    // Distribute clipPath to svg element\n    clipper() {\n      return this.reference('clip-path');\n    },\n    clipWith(element) {\n      // use given clip or create a new one\n      const clipper = element instanceof ClipPath ? element : this.parent().clip().add(element);\n\n      // apply mask\n      return this.attr('clip-path', 'url(#' + clipper.id() + ')');\n    },\n    // Unclip element\n    unclip() {\n      return this.attr('clip-path', null);\n    }\n  }\n});\nregister(ClipPath, 'ClipPath');","map":{"version":3,"names":["nodeOrNew","register","wrapWithAttrCheck","registerMethods","Container","baseFind","ClipPath","constructor","node","attrs","remove","targets","forEach","el","unclip","id","clip","defs","put","Element","clipper","reference","clipWith","element","parent","add","attr"],"sources":["C:/Users/otff/Desktop/mindmap_demo/mind_demo/node_modules/@svgdotjs/svg.js/src/elements/ClipPath.js"],"sourcesContent":["import { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\nimport { registerMethods } from '../utils/methods.js'\nimport Container from './Container.js'\nimport baseFind from '../modules/core/selector.js'\n\nexport default class ClipPath extends Container {\n  constructor(node, attrs = node) {\n    super(nodeOrNew('clipPath', node), attrs)\n  }\n\n  // Unclip all clipped elements and remove itself\n  remove() {\n    // unclip all targets\n    this.targets().forEach(function (el) {\n      el.unclip()\n    })\n\n    // remove clipPath from parent\n    return super.remove()\n  }\n\n  targets() {\n    return baseFind('svg [clip-path*=' + this.id() + ']')\n  }\n}\n\nregisterMethods({\n  Container: {\n    // Create clipping element\n    clip: wrapWithAttrCheck(function () {\n      return this.defs().put(new ClipPath())\n    })\n  },\n  Element: {\n    // Distribute clipPath to svg element\n    clipper() {\n      return this.reference('clip-path')\n    },\n\n    clipWith(element) {\n      // use given clip or create a new one\n      const clipper =\n        element instanceof ClipPath\n          ? element\n          : this.parent().clip().add(element)\n\n      // apply mask\n      return this.attr('clip-path', 'url(#' + clipper.id() + ')')\n    },\n\n    // Unclip element\n    unclip() {\n      return this.attr('clip-path', null)\n    }\n  }\n})\n\nregister(ClipPath, 'ClipPath')\n"],"mappings":"AAAA,SAASA,SAAS,EAAEC,QAAQ,EAAEC,iBAAiB,QAAQ,qBAAqB;AAC5E,SAASC,eAAe,QAAQ,qBAAqB;AACrD,OAAOC,SAAS,MAAM,gBAAgB;AACtC,OAAOC,QAAQ,MAAM,6BAA6B;AAElD,eAAe,MAAMC,QAAQ,SAASF,SAAS,CAAC;EAC9CG,WAAWA,CAACC,IAAI,EAAEC,KAAK,GAAGD,IAAI,EAAE;IAC9B,KAAK,CAACR,SAAS,CAAC,UAAU,EAAEQ,IAAI,CAAC,EAAEC,KAAK,CAAC;EAC3C;;EAEA;EACAC,MAAMA,CAAA,EAAG;IACP;IACA,IAAI,CAACC,OAAO,CAAC,CAAC,CAACC,OAAO,CAAC,UAAUC,EAAE,EAAE;MACnCA,EAAE,CAACC,MAAM,CAAC,CAAC;IACb,CAAC,CAAC;;IAEF;IACA,OAAO,KAAK,CAACJ,MAAM,CAAC,CAAC;EACvB;EAEAC,OAAOA,CAAA,EAAG;IACR,OAAON,QAAQ,CAAC,kBAAkB,GAAG,IAAI,CAACU,EAAE,CAAC,CAAC,GAAG,GAAG,CAAC;EACvD;AACF;AAEAZ,eAAe,CAAC;EACdC,SAAS,EAAE;IACT;IACAY,IAAI,EAAEd,iBAAiB,CAAC,YAAY;MAClC,OAAO,IAAI,CAACe,IAAI,CAAC,CAAC,CAACC,GAAG,CAAC,IAAIZ,QAAQ,CAAC,CAAC,CAAC;IACxC,CAAC;EACH,CAAC;EACDa,OAAO,EAAE;IACP;IACAC,OAAOA,CAAA,EAAG;MACR,OAAO,IAAI,CAACC,SAAS,CAAC,WAAW,CAAC;IACpC,CAAC;IAEDC,QAAQA,CAACC,OAAO,EAAE;MAChB;MACA,MAAMH,OAAO,GACXG,OAAO,YAAYjB,QAAQ,GACvBiB,OAAO,GACP,IAAI,CAACC,MAAM,CAAC,CAAC,CAACR,IAAI,CAAC,CAAC,CAACS,GAAG,CAACF,OAAO,CAAC;;MAEvC;MACA,OAAO,IAAI,CAACG,IAAI,CAAC,WAAW,EAAE,OAAO,GAAGN,OAAO,CAACL,EAAE,CAAC,CAAC,GAAG,GAAG,CAAC;IAC7D,CAAC;IAED;IACAD,MAAMA,CAAA,EAAG;MACP,OAAO,IAAI,CAACY,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC;IACrC;EACF;AACF,CAAC,CAAC;AAEFzB,QAAQ,CAACK,QAAQ,EAAE,UAAU,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}