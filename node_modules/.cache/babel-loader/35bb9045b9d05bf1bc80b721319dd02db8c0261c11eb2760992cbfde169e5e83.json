{"ast":null,"code":"import { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js';\nimport { registerMethods } from '../utils/methods.js';\nimport { xlink } from '../modules/core/namespaces.js';\nimport Path from './Path.js';\nimport PathArray from '../types/PathArray.js';\nimport Text from './Text.js';\nimport baseFind from '../modules/core/selector.js';\nexport default class TextPath extends Text {\n  // Initialize node\n  constructor(node, attrs = node) {\n    super(nodeOrNew('textPath', node), attrs);\n  }\n\n  // return the array of the path track element\n  array() {\n    const track = this.track();\n    return track ? track.array() : null;\n  }\n\n  // Plot path if any\n  plot(d) {\n    const track = this.track();\n    let pathArray = null;\n    if (track) {\n      pathArray = track.plot(d);\n    }\n    return d == null ? pathArray : this;\n  }\n\n  // Get the path element\n  track() {\n    return this.reference('href');\n  }\n}\nregisterMethods({\n  Container: {\n    textPath: wrapWithAttrCheck(function (text, path) {\n      // Convert text to instance if needed\n      if (!(text instanceof Text)) {\n        text = this.text(text);\n      }\n      return text.path(path);\n    })\n  },\n  Text: {\n    // Create path for text to run on\n    path: wrapWithAttrCheck(function (track, importNodes = true) {\n      const textPath = new TextPath();\n\n      // if track is a path, reuse it\n      if (!(track instanceof Path)) {\n        // create path element\n        track = this.defs().path(track);\n      }\n\n      // link textPath to path and add content\n      textPath.attr('href', '#' + track, xlink);\n\n      // Transplant all nodes from text to textPath\n      let node;\n      if (importNodes) {\n        while (node = this.node.firstChild) {\n          textPath.node.appendChild(node);\n        }\n      }\n\n      // add textPath element as child node and return textPath\n      return this.put(textPath);\n    }),\n    // Get the textPath children\n    textPath() {\n      return this.findOne('textPath');\n    }\n  },\n  Path: {\n    // creates a textPath from this path\n    text: wrapWithAttrCheck(function (text) {\n      // Convert text to instance if needed\n      if (!(text instanceof Text)) {\n        text = new Text().addTo(this.parent()).text(text);\n      }\n\n      // Create textPath from text and path and return\n      return text.path(this);\n    }),\n    targets() {\n      return baseFind('svg textPath').filter(node => {\n        return (node.attr('href') || '').includes(this.id());\n      });\n\n      // Does not work in IE11. Use when IE support is dropped\n      // return baseFind('svg textPath[*|href*=' + this.id() + ']')\n    }\n  }\n});\nTextPath.prototype.MorphArray = PathArray;\nregister(TextPath, 'TextPath');","map":{"version":3,"names":["nodeOrNew","register","wrapWithAttrCheck","registerMethods","xlink","Path","PathArray","Text","baseFind","TextPath","constructor","node","attrs","array","track","plot","d","pathArray","reference","Container","textPath","text","path","importNodes","defs","attr","firstChild","appendChild","put","findOne","addTo","parent","targets","filter","includes","id","prototype","MorphArray"],"sources":["C:/Users/otff/Desktop/mindmap_demo/mind_demo/node_modules/@svgdotjs/svg.js/src/elements/TextPath.js"],"sourcesContent":["import { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\nimport { registerMethods } from '../utils/methods.js'\nimport { xlink } from '../modules/core/namespaces.js'\nimport Path from './Path.js'\nimport PathArray from '../types/PathArray.js'\nimport Text from './Text.js'\nimport baseFind from '../modules/core/selector.js'\n\nexport default class TextPath extends Text {\n  // Initialize node\n  constructor(node, attrs = node) {\n    super(nodeOrNew('textPath', node), attrs)\n  }\n\n  // return the array of the path track element\n  array() {\n    const track = this.track()\n\n    return track ? track.array() : null\n  }\n\n  // Plot path if any\n  plot(d) {\n    const track = this.track()\n    let pathArray = null\n\n    if (track) {\n      pathArray = track.plot(d)\n    }\n\n    return d == null ? pathArray : this\n  }\n\n  // Get the path element\n  track() {\n    return this.reference('href')\n  }\n}\n\nregisterMethods({\n  Container: {\n    textPath: wrapWithAttrCheck(function (text, path) {\n      // Convert text to instance if needed\n      if (!(text instanceof Text)) {\n        text = this.text(text)\n      }\n\n      return text.path(path)\n    })\n  },\n  Text: {\n    // Create path for text to run on\n    path: wrapWithAttrCheck(function (track, importNodes = true) {\n      const textPath = new TextPath()\n\n      // if track is a path, reuse it\n      if (!(track instanceof Path)) {\n        // create path element\n        track = this.defs().path(track)\n      }\n\n      // link textPath to path and add content\n      textPath.attr('href', '#' + track, xlink)\n\n      // Transplant all nodes from text to textPath\n      let node\n      if (importNodes) {\n        while ((node = this.node.firstChild)) {\n          textPath.node.appendChild(node)\n        }\n      }\n\n      // add textPath element as child node and return textPath\n      return this.put(textPath)\n    }),\n\n    // Get the textPath children\n    textPath() {\n      return this.findOne('textPath')\n    }\n  },\n  Path: {\n    // creates a textPath from this path\n    text: wrapWithAttrCheck(function (text) {\n      // Convert text to instance if needed\n      if (!(text instanceof Text)) {\n        text = new Text().addTo(this.parent()).text(text)\n      }\n\n      // Create textPath from text and path and return\n      return text.path(this)\n    }),\n\n    targets() {\n      return baseFind('svg textPath').filter((node) => {\n        return (node.attr('href') || '').includes(this.id())\n      })\n\n      // Does not work in IE11. Use when IE support is dropped\n      // return baseFind('svg textPath[*|href*=' + this.id() + ']')\n    }\n  }\n})\n\nTextPath.prototype.MorphArray = PathArray\nregister(TextPath, 'TextPath')\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}