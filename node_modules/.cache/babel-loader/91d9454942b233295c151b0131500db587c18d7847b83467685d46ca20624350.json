{"ast":null,"code":"import { timeline } from '../modules/core/defaults.js';\nimport { extend } from '../utils/adopter.js';\n\n/***\nBase Class\n==========\nThe base stepper class that will be\n***/\n\nfunction makeSetterGetter(k, f) {\n  return function (v) {\n    if (v == null) return this[k];\n    this[k] = v;\n    if (f) f.call(this);\n    return this;\n  };\n}\nexport const easing = {\n  '-': function (pos) {\n    return pos;\n  },\n  '<>': function (pos) {\n    return -Math.cos(pos * Math.PI) / 2 + 0.5;\n  },\n  '>': function (pos) {\n    return Math.sin(pos * Math.PI / 2);\n  },\n  '<': function (pos) {\n    return -Math.cos(pos * Math.PI / 2) + 1;\n  },\n  bezier: function (x1, y1, x2, y2) {\n    // see https://www.w3.org/TR/css-easing-1/#cubic-bezier-algo\n    return function (t) {\n      if (t < 0) {\n        if (x1 > 0) {\n          return y1 / x1 * t;\n        } else if (x2 > 0) {\n          return y2 / x2 * t;\n        } else {\n          return 0;\n        }\n      } else if (t > 1) {\n        if (x2 < 1) {\n          return (1 - y2) / (1 - x2) * t + (y2 - x2) / (1 - x2);\n        } else if (x1 < 1) {\n          return (1 - y1) / (1 - x1) * t + (y1 - x1) / (1 - x1);\n        } else {\n          return 1;\n        }\n      } else {\n        return 3 * t * (1 - t) ** 2 * y1 + 3 * t ** 2 * (1 - t) * y2 + t ** 3;\n      }\n    };\n  },\n  // see https://www.w3.org/TR/css-easing-1/#step-timing-function-algo\n  steps: function (steps, stepPosition = 'end') {\n    // deal with \"jump-\" prefix\n    stepPosition = stepPosition.split('-').reverse()[0];\n    let jumps = steps;\n    if (stepPosition === 'none') {\n      --jumps;\n    } else if (stepPosition === 'both') {\n      ++jumps;\n    }\n\n    // The beforeFlag is essentially useless\n    return (t, beforeFlag = false) => {\n      // Step is called currentStep in referenced url\n      let step = Math.floor(t * steps);\n      const jumping = t * step % 1 === 0;\n      if (stepPosition === 'start' || stepPosition === 'both') {\n        ++step;\n      }\n      if (beforeFlag && jumping) {\n        --step;\n      }\n      if (t >= 0 && step < 0) {\n        step = 0;\n      }\n      if (t <= 1 && step > jumps) {\n        step = jumps;\n      }\n      return step / jumps;\n    };\n  }\n};\nexport class Stepper {\n  done() {\n    return false;\n  }\n}\n\n/***\nEasing Functions\n================\n***/\n\nexport class Ease extends Stepper {\n  constructor(fn = timeline.ease) {\n    super();\n    this.ease = easing[fn] || fn;\n  }\n  step(from, to, pos) {\n    if (typeof from !== 'number') {\n      return pos < 1 ? from : to;\n    }\n    return from + (to - from) * this.ease(pos);\n  }\n}\n\n/***\nController Types\n================\n***/\n\nexport class Controller extends Stepper {\n  constructor(fn) {\n    super();\n    this.stepper = fn;\n  }\n  done(c) {\n    return c.done;\n  }\n  step(current, target, dt, c) {\n    return this.stepper(current, target, dt, c);\n  }\n}\nfunction recalculate() {\n  // Apply the default parameters\n  const duration = (this._duration || 500) / 1000;\n  const overshoot = this._overshoot || 0;\n\n  // Calculate the PID natural response\n  const eps = 1e-10;\n  const pi = Math.PI;\n  const os = Math.log(overshoot / 100 + eps);\n  const zeta = -os / Math.sqrt(pi * pi + os * os);\n  const wn = 3.9 / (zeta * duration);\n\n  // Calculate the Spring values\n  this.d = 2 * zeta * wn;\n  this.k = wn * wn;\n}\nexport class Spring extends Controller {\n  constructor(duration = 500, overshoot = 0) {\n    super();\n    this.duration(duration).overshoot(overshoot);\n  }\n  step(current, target, dt, c) {\n    if (typeof current === 'string') return current;\n    c.done = dt === Infinity;\n    if (dt === Infinity) return target;\n    if (dt === 0) return current;\n    if (dt > 100) dt = 16;\n    dt /= 1000;\n\n    // Get the previous velocity\n    const velocity = c.velocity || 0;\n\n    // Apply the control to get the new position and store it\n    const acceleration = -this.d * velocity - this.k * (current - target);\n    const newPosition = current + velocity * dt + acceleration * dt * dt / 2;\n\n    // Store the velocity\n    c.velocity = velocity + acceleration * dt;\n\n    // Figure out if we have converged, and if so, pass the value\n    c.done = Math.abs(target - newPosition) + Math.abs(velocity) < 0.002;\n    return c.done ? target : newPosition;\n  }\n}\nextend(Spring, {\n  duration: makeSetterGetter('_duration', recalculate),\n  overshoot: makeSetterGetter('_overshoot', recalculate)\n});\nexport class PID extends Controller {\n  constructor(p = 0.1, i = 0.01, d = 0, windup = 1000) {\n    super();\n    this.p(p).i(i).d(d).windup(windup);\n  }\n  step(current, target, dt, c) {\n    if (typeof current === 'string') return current;\n    c.done = dt === Infinity;\n    if (dt === Infinity) return target;\n    if (dt === 0) return current;\n    const p = target - current;\n    let i = (c.integral || 0) + p * dt;\n    const d = (p - (c.error || 0)) / dt;\n    const windup = this._windup;\n\n    // antiwindup\n    if (windup !== false) {\n      i = Math.max(-windup, Math.min(i, windup));\n    }\n    c.error = p;\n    c.integral = i;\n    c.done = Math.abs(p) < 0.001;\n    return c.done ? target : current + (this.P * p + this.I * i + this.D * d);\n  }\n}\nextend(PID, {\n  windup: makeSetterGetter('_windup'),\n  p: makeSetterGetter('P'),\n  i: makeSetterGetter('I'),\n  d: makeSetterGetter('D')\n});","map":{"version":3,"names":["timeline","extend","makeSetterGetter","k","f","v","call","easing","-","pos","<>","Math","cos","PI",">","sin","<","bezier","x1","y1","x2","y2","t","steps","stepPosition","split","reverse","jumps","beforeFlag","step","floor","jumping","Stepper","done","Ease","constructor","fn","ease","from","to","Controller","stepper","c","current","target","dt","recalculate","duration","_duration","overshoot","_overshoot","eps","pi","os","log","zeta","sqrt","wn","d","Spring","Infinity","velocity","acceleration","newPosition","abs","PID","p","i","windup","integral","error","_windup","max","min","P","I","D"],"sources":["C:/Users/otff/Desktop/mindmap_demo/mind_demo/node_modules/@svgdotjs/svg.js/src/animation/Controller.js"],"sourcesContent":["import { timeline } from '../modules/core/defaults.js'\nimport { extend } from '../utils/adopter.js'\n\n/***\nBase Class\n==========\nThe base stepper class that will be\n***/\n\nfunction makeSetterGetter(k, f) {\n  return function (v) {\n    if (v == null) return this[k]\n    this[k] = v\n    if (f) f.call(this)\n    return this\n  }\n}\n\nexport const easing = {\n  '-': function (pos) {\n    return pos\n  },\n  '<>': function (pos) {\n    return -Math.cos(pos * Math.PI) / 2 + 0.5\n  },\n  '>': function (pos) {\n    return Math.sin((pos * Math.PI) / 2)\n  },\n  '<': function (pos) {\n    return -Math.cos((pos * Math.PI) / 2) + 1\n  },\n  bezier: function (x1, y1, x2, y2) {\n    // see https://www.w3.org/TR/css-easing-1/#cubic-bezier-algo\n    return function (t) {\n      if (t < 0) {\n        if (x1 > 0) {\n          return (y1 / x1) * t\n        } else if (x2 > 0) {\n          return (y2 / x2) * t\n        } else {\n          return 0\n        }\n      } else if (t > 1) {\n        if (x2 < 1) {\n          return ((1 - y2) / (1 - x2)) * t + (y2 - x2) / (1 - x2)\n        } else if (x1 < 1) {\n          return ((1 - y1) / (1 - x1)) * t + (y1 - x1) / (1 - x1)\n        } else {\n          return 1\n        }\n      } else {\n        return 3 * t * (1 - t) ** 2 * y1 + 3 * t ** 2 * (1 - t) * y2 + t ** 3\n      }\n    }\n  },\n  // see https://www.w3.org/TR/css-easing-1/#step-timing-function-algo\n  steps: function (steps, stepPosition = 'end') {\n    // deal with \"jump-\" prefix\n    stepPosition = stepPosition.split('-').reverse()[0]\n\n    let jumps = steps\n    if (stepPosition === 'none') {\n      --jumps\n    } else if (stepPosition === 'both') {\n      ++jumps\n    }\n\n    // The beforeFlag is essentially useless\n    return (t, beforeFlag = false) => {\n      // Step is called currentStep in referenced url\n      let step = Math.floor(t * steps)\n      const jumping = (t * step) % 1 === 0\n\n      if (stepPosition === 'start' || stepPosition === 'both') {\n        ++step\n      }\n\n      if (beforeFlag && jumping) {\n        --step\n      }\n\n      if (t >= 0 && step < 0) {\n        step = 0\n      }\n\n      if (t <= 1 && step > jumps) {\n        step = jumps\n      }\n\n      return step / jumps\n    }\n  }\n}\n\nexport class Stepper {\n  done() {\n    return false\n  }\n}\n\n/***\nEasing Functions\n================\n***/\n\nexport class Ease extends Stepper {\n  constructor(fn = timeline.ease) {\n    super()\n    this.ease = easing[fn] || fn\n  }\n\n  step(from, to, pos) {\n    if (typeof from !== 'number') {\n      return pos < 1 ? from : to\n    }\n    return from + (to - from) * this.ease(pos)\n  }\n}\n\n/***\nController Types\n================\n***/\n\nexport class Controller extends Stepper {\n  constructor(fn) {\n    super()\n    this.stepper = fn\n  }\n\n  done(c) {\n    return c.done\n  }\n\n  step(current, target, dt, c) {\n    return this.stepper(current, target, dt, c)\n  }\n}\n\nfunction recalculate() {\n  // Apply the default parameters\n  const duration = (this._duration || 500) / 1000\n  const overshoot = this._overshoot || 0\n\n  // Calculate the PID natural response\n  const eps = 1e-10\n  const pi = Math.PI\n  const os = Math.log(overshoot / 100 + eps)\n  const zeta = -os / Math.sqrt(pi * pi + os * os)\n  const wn = 3.9 / (zeta * duration)\n\n  // Calculate the Spring values\n  this.d = 2 * zeta * wn\n  this.k = wn * wn\n}\n\nexport class Spring extends Controller {\n  constructor(duration = 500, overshoot = 0) {\n    super()\n    this.duration(duration).overshoot(overshoot)\n  }\n\n  step(current, target, dt, c) {\n    if (typeof current === 'string') return current\n    c.done = dt === Infinity\n    if (dt === Infinity) return target\n    if (dt === 0) return current\n\n    if (dt > 100) dt = 16\n\n    dt /= 1000\n\n    // Get the previous velocity\n    const velocity = c.velocity || 0\n\n    // Apply the control to get the new position and store it\n    const acceleration = -this.d * velocity - this.k * (current - target)\n    const newPosition = current + velocity * dt + (acceleration * dt * dt) / 2\n\n    // Store the velocity\n    c.velocity = velocity + acceleration * dt\n\n    // Figure out if we have converged, and if so, pass the value\n    c.done = Math.abs(target - newPosition) + Math.abs(velocity) < 0.002\n    return c.done ? target : newPosition\n  }\n}\n\nextend(Spring, {\n  duration: makeSetterGetter('_duration', recalculate),\n  overshoot: makeSetterGetter('_overshoot', recalculate)\n})\n\nexport class PID extends Controller {\n  constructor(p = 0.1, i = 0.01, d = 0, windup = 1000) {\n    super()\n    this.p(p).i(i).d(d).windup(windup)\n  }\n\n  step(current, target, dt, c) {\n    if (typeof current === 'string') return current\n    c.done = dt === Infinity\n\n    if (dt === Infinity) return target\n    if (dt === 0) return current\n\n    const p = target - current\n    let i = (c.integral || 0) + p * dt\n    const d = (p - (c.error || 0)) / dt\n    const windup = this._windup\n\n    // antiwindup\n    if (windup !== false) {\n      i = Math.max(-windup, Math.min(i, windup))\n    }\n\n    c.error = p\n    c.integral = i\n\n    c.done = Math.abs(p) < 0.001\n\n    return c.done ? target : current + (this.P * p + this.I * i + this.D * d)\n  }\n}\n\nextend(PID, {\n  windup: makeSetterGetter('_windup'),\n  p: makeSetterGetter('P'),\n  i: makeSetterGetter('I'),\n  d: makeSetterGetter('D')\n})\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}