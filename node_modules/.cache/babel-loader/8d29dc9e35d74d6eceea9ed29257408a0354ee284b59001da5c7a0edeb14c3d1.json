{"ast":null,"code":"import { nodeOrNew, register, wrapWithAttrCheck, extend } from '../utils/adopter.js';\nimport { registerMethods } from '../utils/methods.js';\nimport Container from './Container.js';\nimport * as containerGeometry from '../modules/core/containerGeometry.js';\nexport default class G extends Container {\n  constructor(node, attrs = node) {\n    super(nodeOrNew('g', node), attrs);\n  }\n}\nextend(G, containerGeometry);\nregisterMethods({\n  Container: {\n    // Create a group element\n    group: wrapWithAttrCheck(function () {\n      return this.put(new G());\n    })\n  }\n});\nregister(G, 'G');","map":{"version":3,"names":["nodeOrNew","register","wrapWithAttrCheck","extend","registerMethods","Container","containerGeometry","G","constructor","node","attrs","group","put"],"sources":["C:/Users/otff/Desktop/mindmap_demo/mind_demo/node_modules/@svgdotjs/svg.js/src/elements/G.js"],"sourcesContent":["import {\n  nodeOrNew,\n  register,\n  wrapWithAttrCheck,\n  extend\n} from '../utils/adopter.js'\nimport { registerMethods } from '../utils/methods.js'\nimport Container from './Container.js'\nimport * as containerGeometry from '../modules/core/containerGeometry.js'\n\nexport default class G extends Container {\n  constructor(node, attrs = node) {\n    super(nodeOrNew('g', node), attrs)\n  }\n}\n\nextend(G, containerGeometry)\n\nregisterMethods({\n  Container: {\n    // Create a group element\n    group: wrapWithAttrCheck(function () {\n      return this.put(new G())\n    })\n  }\n})\n\nregister(G, 'G')\n"],"mappings":"AAAA,SACEA,SAAS,EACTC,QAAQ,EACRC,iBAAiB,EACjBC,MAAM,QACD,qBAAqB;AAC5B,SAASC,eAAe,QAAQ,qBAAqB;AACrD,OAAOC,SAAS,MAAM,gBAAgB;AACtC,OAAO,KAAKC,iBAAiB,MAAM,sCAAsC;AAEzE,eAAe,MAAMC,CAAC,SAASF,SAAS,CAAC;EACvCG,WAAWA,CAACC,IAAI,EAAEC,KAAK,GAAGD,IAAI,EAAE;IAC9B,KAAK,CAACT,SAAS,CAAC,GAAG,EAAES,IAAI,CAAC,EAAEC,KAAK,CAAC;EACpC;AACF;AAEAP,MAAM,CAACI,CAAC,EAAED,iBAAiB,CAAC;AAE5BF,eAAe,CAAC;EACdC,SAAS,EAAE;IACT;IACAM,KAAK,EAAET,iBAAiB,CAAC,YAAY;MACnC,OAAO,IAAI,CAACU,GAAG,CAAC,IAAIL,CAAC,CAAC,CAAC,CAAC;IAC1B,CAAC;EACH;AACF,CAAC,CAAC;AAEFN,QAAQ,CAACM,CAAC,EAAE,GAAG,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}