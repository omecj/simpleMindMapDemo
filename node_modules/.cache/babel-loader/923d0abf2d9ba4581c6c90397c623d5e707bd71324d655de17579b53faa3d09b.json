{"ast":null,"code":"import { registerMethods } from '../../utils/methods.js';\nimport { filter, map } from '../../utils/utils.js';\n\n// Store data values on svg nodes\nexport function data(a, v, r) {\n  if (a == null) {\n    // get an object of attributes\n    return this.data(map(filter(this.node.attributes, el => el.nodeName.indexOf('data-') === 0), el => el.nodeName.slice(5)));\n  } else if (a instanceof Array) {\n    const data = {};\n    for (const key of a) {\n      data[key] = this.data(key);\n    }\n    return data;\n  } else if (typeof a === 'object') {\n    for (v in a) {\n      this.data(v, a[v]);\n    }\n  } else if (arguments.length < 2) {\n    try {\n      return JSON.parse(this.attr('data-' + a));\n    } catch (e) {\n      return this.attr('data-' + a);\n    }\n  } else {\n    this.attr('data-' + a, v === null ? null : r === true || typeof v === 'string' || typeof v === 'number' ? v : JSON.stringify(v));\n  }\n  return this;\n}\nregisterMethods('Dom', {\n  data\n});","map":{"version":3,"names":["registerMethods","filter","map","data","a","v","r","node","attributes","el","nodeName","indexOf","slice","Array","key","arguments","length","JSON","parse","attr","e","stringify"],"sources":["C:/Users/otff/Desktop/mindmap_demo/mind_demo/node_modules/@svgdotjs/svg.js/src/modules/optional/data.js"],"sourcesContent":["import { registerMethods } from '../../utils/methods.js'\nimport { filter, map } from '../../utils/utils.js'\n\n// Store data values on svg nodes\nexport function data(a, v, r) {\n  if (a == null) {\n    // get an object of attributes\n    return this.data(\n      map(\n        filter(\n          this.node.attributes,\n          (el) => el.nodeName.indexOf('data-') === 0\n        ),\n        (el) => el.nodeName.slice(5)\n      )\n    )\n  } else if (a instanceof Array) {\n    const data = {}\n    for (const key of a) {\n      data[key] = this.data(key)\n    }\n    return data\n  } else if (typeof a === 'object') {\n    for (v in a) {\n      this.data(v, a[v])\n    }\n  } else if (arguments.length < 2) {\n    try {\n      return JSON.parse(this.attr('data-' + a))\n    } catch (e) {\n      return this.attr('data-' + a)\n    }\n  } else {\n    this.attr(\n      'data-' + a,\n      v === null\n        ? null\n        : r === true || typeof v === 'string' || typeof v === 'number'\n          ? v\n          : JSON.stringify(v)\n    )\n  }\n\n  return this\n}\n\nregisterMethods('Dom', { data })\n"],"mappings":"AAAA,SAASA,eAAe,QAAQ,wBAAwB;AACxD,SAASC,MAAM,EAAEC,GAAG,QAAQ,sBAAsB;;AAElD;AACA,OAAO,SAASC,IAAIA,CAACC,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAE;EAC5B,IAAIF,CAAC,IAAI,IAAI,EAAE;IACb;IACA,OAAO,IAAI,CAACD,IAAI,CACdD,GAAG,CACDD,MAAM,CACJ,IAAI,CAACM,IAAI,CAACC,UAAU,EACnBC,EAAE,IAAKA,EAAE,CAACC,QAAQ,CAACC,OAAO,CAAC,OAAO,CAAC,KAAK,CAC3C,CAAC,EACAF,EAAE,IAAKA,EAAE,CAACC,QAAQ,CAACE,KAAK,CAAC,CAAC,CAC7B,CACF,CAAC;EACH,CAAC,MAAM,IAAIR,CAAC,YAAYS,KAAK,EAAE;IAC7B,MAAMV,IAAI,GAAG,CAAC,CAAC;IACf,KAAK,MAAMW,GAAG,IAAIV,CAAC,EAAE;MACnBD,IAAI,CAACW,GAAG,CAAC,GAAG,IAAI,CAACX,IAAI,CAACW,GAAG,CAAC;IAC5B;IACA,OAAOX,IAAI;EACb,CAAC,MAAM,IAAI,OAAOC,CAAC,KAAK,QAAQ,EAAE;IAChC,KAAKC,CAAC,IAAID,CAAC,EAAE;MACX,IAAI,CAACD,IAAI,CAACE,CAAC,EAAED,CAAC,CAACC,CAAC,CAAC,CAAC;IACpB;EACF,CAAC,MAAM,IAAIU,SAAS,CAACC,MAAM,GAAG,CAAC,EAAE;IAC/B,IAAI;MACF,OAAOC,IAAI,CAACC,KAAK,CAAC,IAAI,CAACC,IAAI,CAAC,OAAO,GAAGf,CAAC,CAAC,CAAC;IAC3C,CAAC,CAAC,OAAOgB,CAAC,EAAE;MACV,OAAO,IAAI,CAACD,IAAI,CAAC,OAAO,GAAGf,CAAC,CAAC;IAC/B;EACF,CAAC,MAAM;IACL,IAAI,CAACe,IAAI,CACP,OAAO,GAAGf,CAAC,EACXC,CAAC,KAAK,IAAI,GACN,IAAI,GACJC,CAAC,KAAK,IAAI,IAAI,OAAOD,CAAC,KAAK,QAAQ,IAAI,OAAOA,CAAC,KAAK,QAAQ,GAC1DA,CAAC,GACDY,IAAI,CAACI,SAAS,CAAChB,CAAC,CACxB,CAAC;EACH;EAEA,OAAO,IAAI;AACb;AAEAL,eAAe,CAAC,KAAK,EAAE;EAAEG;AAAK,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}