{"ast":null,"code":"export default class Queue {\n  constructor() {\n    this._first = null;\n    this._last = null;\n  }\n\n  // Shows us the first item in the list\n  first() {\n    return this._first && this._first.value;\n  }\n\n  // Shows us the last item in the list\n  last() {\n    return this._last && this._last.value;\n  }\n  push(value) {\n    // An item stores an id and the provided value\n    const item = typeof value.next !== 'undefined' ? value : {\n      value: value,\n      next: null,\n      prev: null\n    };\n\n    // Deal with the queue being empty or populated\n    if (this._last) {\n      item.prev = this._last;\n      this._last.next = item;\n      this._last = item;\n    } else {\n      this._last = item;\n      this._first = item;\n    }\n\n    // Return the current item\n    return item;\n  }\n\n  // Removes the item that was returned from the push\n  remove(item) {\n    // Relink the previous item\n    if (item.prev) item.prev.next = item.next;\n    if (item.next) item.next.prev = item.prev;\n    if (item === this._last) this._last = item.prev;\n    if (item === this._first) this._first = item.next;\n\n    // Invalidate item\n    item.prev = null;\n    item.next = null;\n  }\n  shift() {\n    // Check if we have a value\n    const remove = this._first;\n    if (!remove) return null;\n\n    // If we do, remove it and relink things\n    this._first = remove.next;\n    if (this._first) this._first.prev = null;\n    this._last = this._first ? this._last : null;\n    return remove.value;\n  }\n}","map":{"version":3,"names":["Queue","constructor","_first","_last","first","value","last","push","item","next","prev","remove","shift"],"sources":["C:/Users/otff/Desktop/mindmap_demo/mind_demo/node_modules/@svgdotjs/svg.js/src/animation/Queue.js"],"sourcesContent":["export default class Queue {\n  constructor() {\n    this._first = null\n    this._last = null\n  }\n\n  // Shows us the first item in the list\n  first() {\n    return this._first && this._first.value\n  }\n\n  // Shows us the last item in the list\n  last() {\n    return this._last && this._last.value\n  }\n\n  push(value) {\n    // An item stores an id and the provided value\n    const item =\n      typeof value.next !== 'undefined'\n        ? value\n        : { value: value, next: null, prev: null }\n\n    // Deal with the queue being empty or populated\n    if (this._last) {\n      item.prev = this._last\n      this._last.next = item\n      this._last = item\n    } else {\n      this._last = item\n      this._first = item\n    }\n\n    // Return the current item\n    return item\n  }\n\n  // Removes the item that was returned from the push\n  remove(item) {\n    // Relink the previous item\n    if (item.prev) item.prev.next = item.next\n    if (item.next) item.next.prev = item.prev\n    if (item === this._last) this._last = item.prev\n    if (item === this._first) this._first = item.next\n\n    // Invalidate item\n    item.prev = null\n    item.next = null\n  }\n\n  shift() {\n    // Check if we have a value\n    const remove = this._first\n    if (!remove) return null\n\n    // If we do, remove it and relink things\n    this._first = remove.next\n    if (this._first) this._first.prev = null\n    this._last = this._first ? this._last : null\n    return remove.value\n  }\n}\n"],"mappings":"AAAA,eAAe,MAAMA,KAAK,CAAC;EACzBC,WAAWA,CAAA,EAAG;IACZ,IAAI,CAACC,MAAM,GAAG,IAAI;IAClB,IAAI,CAACC,KAAK,GAAG,IAAI;EACnB;;EAEA;EACAC,KAAKA,CAAA,EAAG;IACN,OAAO,IAAI,CAACF,MAAM,IAAI,IAAI,CAACA,MAAM,CAACG,KAAK;EACzC;;EAEA;EACAC,IAAIA,CAAA,EAAG;IACL,OAAO,IAAI,CAACH,KAAK,IAAI,IAAI,CAACA,KAAK,CAACE,KAAK;EACvC;EAEAE,IAAIA,CAACF,KAAK,EAAE;IACV;IACA,MAAMG,IAAI,GACR,OAAOH,KAAK,CAACI,IAAI,KAAK,WAAW,GAC7BJ,KAAK,GACL;MAAEA,KAAK,EAAEA,KAAK;MAAEI,IAAI,EAAE,IAAI;MAAEC,IAAI,EAAE;IAAK,CAAC;;IAE9C;IACA,IAAI,IAAI,CAACP,KAAK,EAAE;MACdK,IAAI,CAACE,IAAI,GAAG,IAAI,CAACP,KAAK;MACtB,IAAI,CAACA,KAAK,CAACM,IAAI,GAAGD,IAAI;MACtB,IAAI,CAACL,KAAK,GAAGK,IAAI;IACnB,CAAC,MAAM;MACL,IAAI,CAACL,KAAK,GAAGK,IAAI;MACjB,IAAI,CAACN,MAAM,GAAGM,IAAI;IACpB;;IAEA;IACA,OAAOA,IAAI;EACb;;EAEA;EACAG,MAAMA,CAACH,IAAI,EAAE;IACX;IACA,IAAIA,IAAI,CAACE,IAAI,EAAEF,IAAI,CAACE,IAAI,CAACD,IAAI,GAAGD,IAAI,CAACC,IAAI;IACzC,IAAID,IAAI,CAACC,IAAI,EAAED,IAAI,CAACC,IAAI,CAACC,IAAI,GAAGF,IAAI,CAACE,IAAI;IACzC,IAAIF,IAAI,KAAK,IAAI,CAACL,KAAK,EAAE,IAAI,CAACA,KAAK,GAAGK,IAAI,CAACE,IAAI;IAC/C,IAAIF,IAAI,KAAK,IAAI,CAACN,MAAM,EAAE,IAAI,CAACA,MAAM,GAAGM,IAAI,CAACC,IAAI;;IAEjD;IACAD,IAAI,CAACE,IAAI,GAAG,IAAI;IAChBF,IAAI,CAACC,IAAI,GAAG,IAAI;EAClB;EAEAG,KAAKA,CAAA,EAAG;IACN;IACA,MAAMD,MAAM,GAAG,IAAI,CAACT,MAAM;IAC1B,IAAI,CAACS,MAAM,EAAE,OAAO,IAAI;;IAExB;IACA,IAAI,CAACT,MAAM,GAAGS,MAAM,CAACF,IAAI;IACzB,IAAI,IAAI,CAACP,MAAM,EAAE,IAAI,CAACA,MAAM,CAACQ,IAAI,GAAG,IAAI;IACxC,IAAI,CAACP,KAAK,GAAG,IAAI,CAACD,MAAM,GAAG,IAAI,CAACC,KAAK,GAAG,IAAI;IAC5C,OAAOQ,MAAM,CAACN,KAAK;EACrB;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}