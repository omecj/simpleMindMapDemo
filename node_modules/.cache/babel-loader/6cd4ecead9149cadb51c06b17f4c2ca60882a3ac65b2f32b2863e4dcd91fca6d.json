{"ast":null,"code":"import { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js';\nimport { registerMethods } from '../utils/methods.js';\nimport Container from './Container.js';\nimport baseFind from '../modules/core/selector.js';\nexport default class Mask extends Container {\n  // Initialize node\n  constructor(node, attrs = node) {\n    super(nodeOrNew('mask', node), attrs);\n  }\n\n  // Unmask all masked elements and remove itself\n  remove() {\n    // unmask all targets\n    this.targets().forEach(function (el) {\n      el.unmask();\n    });\n\n    // remove mask from parent\n    return super.remove();\n  }\n  targets() {\n    return baseFind('svg [mask*=' + this.id() + ']');\n  }\n}\nregisterMethods({\n  Container: {\n    mask: wrapWithAttrCheck(function () {\n      return this.defs().put(new Mask());\n    })\n  },\n  Element: {\n    // Distribute mask to svg element\n    masker() {\n      return this.reference('mask');\n    },\n    maskWith(element) {\n      // use given mask or create a new one\n      const masker = element instanceof Mask ? element : this.parent().mask().add(element);\n\n      // apply mask\n      return this.attr('mask', 'url(#' + masker.id() + ')');\n    },\n    // Unmask element\n    unmask() {\n      return this.attr('mask', null);\n    }\n  }\n});\nregister(Mask, 'Mask');","map":{"version":3,"names":["nodeOrNew","register","wrapWithAttrCheck","registerMethods","Container","baseFind","Mask","constructor","node","attrs","remove","targets","forEach","el","unmask","id","mask","defs","put","Element","masker","reference","maskWith","element","parent","add","attr"],"sources":["C:/Users/otff/Desktop/mindmap_demo/mind_demo/node_modules/@svgdotjs/svg.js/src/elements/Mask.js"],"sourcesContent":["import { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\nimport { registerMethods } from '../utils/methods.js'\nimport Container from './Container.js'\nimport baseFind from '../modules/core/selector.js'\n\nexport default class Mask extends Container {\n  // Initialize node\n  constructor(node, attrs = node) {\n    super(nodeOrNew('mask', node), attrs)\n  }\n\n  // Unmask all masked elements and remove itself\n  remove() {\n    // unmask all targets\n    this.targets().forEach(function (el) {\n      el.unmask()\n    })\n\n    // remove mask from parent\n    return super.remove()\n  }\n\n  targets() {\n    return baseFind('svg [mask*=' + this.id() + ']')\n  }\n}\n\nregisterMethods({\n  Container: {\n    mask: wrapWithAttrCheck(function () {\n      return this.defs().put(new Mask())\n    })\n  },\n  Element: {\n    // Distribute mask to svg element\n    masker() {\n      return this.reference('mask')\n    },\n\n    maskWith(element) {\n      // use given mask or create a new one\n      const masker =\n        element instanceof Mask ? element : this.parent().mask().add(element)\n\n      // apply mask\n      return this.attr('mask', 'url(#' + masker.id() + ')')\n    },\n\n    // Unmask element\n    unmask() {\n      return this.attr('mask', null)\n    }\n  }\n})\n\nregister(Mask, 'Mask')\n"],"mappings":"AAAA,SAASA,SAAS,EAAEC,QAAQ,EAAEC,iBAAiB,QAAQ,qBAAqB;AAC5E,SAASC,eAAe,QAAQ,qBAAqB;AACrD,OAAOC,SAAS,MAAM,gBAAgB;AACtC,OAAOC,QAAQ,MAAM,6BAA6B;AAElD,eAAe,MAAMC,IAAI,SAASF,SAAS,CAAC;EAC1C;EACAG,WAAWA,CAACC,IAAI,EAAEC,KAAK,GAAGD,IAAI,EAAE;IAC9B,KAAK,CAACR,SAAS,CAAC,MAAM,EAAEQ,IAAI,CAAC,EAAEC,KAAK,CAAC;EACvC;;EAEA;EACAC,MAAMA,CAAA,EAAG;IACP;IACA,IAAI,CAACC,OAAO,CAAC,CAAC,CAACC,OAAO,CAAC,UAAUC,EAAE,EAAE;MACnCA,EAAE,CAACC,MAAM,CAAC,CAAC;IACb,CAAC,CAAC;;IAEF;IACA,OAAO,KAAK,CAACJ,MAAM,CAAC,CAAC;EACvB;EAEAC,OAAOA,CAAA,EAAG;IACR,OAAON,QAAQ,CAAC,aAAa,GAAG,IAAI,CAACU,EAAE,CAAC,CAAC,GAAG,GAAG,CAAC;EAClD;AACF;AAEAZ,eAAe,CAAC;EACdC,SAAS,EAAE;IACTY,IAAI,EAAEd,iBAAiB,CAAC,YAAY;MAClC,OAAO,IAAI,CAACe,IAAI,CAAC,CAAC,CAACC,GAAG,CAAC,IAAIZ,IAAI,CAAC,CAAC,CAAC;IACpC,CAAC;EACH,CAAC;EACDa,OAAO,EAAE;IACP;IACAC,MAAMA,CAAA,EAAG;MACP,OAAO,IAAI,CAACC,SAAS,CAAC,MAAM,CAAC;IAC/B,CAAC;IAEDC,QAAQA,CAACC,OAAO,EAAE;MAChB;MACA,MAAMH,MAAM,GACVG,OAAO,YAAYjB,IAAI,GAAGiB,OAAO,GAAG,IAAI,CAACC,MAAM,CAAC,CAAC,CAACR,IAAI,CAAC,CAAC,CAACS,GAAG,CAACF,OAAO,CAAC;;MAEvE;MACA,OAAO,IAAI,CAACG,IAAI,CAAC,MAAM,EAAE,OAAO,GAAGN,MAAM,CAACL,EAAE,CAAC,CAAC,GAAG,GAAG,CAAC;IACvD,CAAC;IAED;IACAD,MAAMA,CAAA,EAAG;MACP,OAAO,IAAI,CAACY,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC;IAChC;EACF;AACF,CAAC,CAAC;AAEFzB,QAAQ,CAACK,IAAI,EAAE,MAAM,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}