{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { delimiter } from '../core/regex.js';\nimport { registerMethods } from '../../utils/methods.js';\n\n// Return array of classes on the node\nexport function classes() {\n  const attr = this.attr('class');\n  return attr == null ? [] : attr.trim().split(delimiter);\n}\n\n// Return true if class exists on the node, false otherwise\nexport function hasClass(name) {\n  return this.classes().indexOf(name) !== -1;\n}\n\n// Add class to the node\nexport function addClass(name) {\n  if (!this.hasClass(name)) {\n    const array = this.classes();\n    array.push(name);\n    this.attr('class', array.join(' '));\n  }\n  return this;\n}\n\n// Remove class from the node\nexport function removeClass(name) {\n  if (this.hasClass(name)) {\n    this.attr('class', this.classes().filter(function (c) {\n      return c !== name;\n    }).join(' '));\n  }\n  return this;\n}\n\n// Toggle the presence of a class on the node\nexport function toggleClass(name) {\n  return this.hasClass(name) ? this.removeClass(name) : this.addClass(name);\n}\nregisterMethods('Dom', {\n  classes,\n  hasClass,\n  addClass,\n  removeClass,\n  toggleClass\n});","map":{"version":3,"names":["delimiter","registerMethods","classes","attr","trim","split","hasClass","name","indexOf","addClass","array","push","join","removeClass","filter","c","toggleClass"],"sources":["C:/Users/otff/Desktop/mindmap_demo/mind_demo/node_modules/@svgdotjs/svg.js/src/modules/optional/class.js"],"sourcesContent":["import { delimiter } from '../core/regex.js'\nimport { registerMethods } from '../../utils/methods.js'\n\n// Return array of classes on the node\nexport function classes() {\n  const attr = this.attr('class')\n  return attr == null ? [] : attr.trim().split(delimiter)\n}\n\n// Return true if class exists on the node, false otherwise\nexport function hasClass(name) {\n  return this.classes().indexOf(name) !== -1\n}\n\n// Add class to the node\nexport function addClass(name) {\n  if (!this.hasClass(name)) {\n    const array = this.classes()\n    array.push(name)\n    this.attr('class', array.join(' '))\n  }\n\n  return this\n}\n\n// Remove class from the node\nexport function removeClass(name) {\n  if (this.hasClass(name)) {\n    this.attr(\n      'class',\n      this.classes()\n        .filter(function (c) {\n          return c !== name\n        })\n        .join(' ')\n    )\n  }\n\n  return this\n}\n\n// Toggle the presence of a class on the node\nexport function toggleClass(name) {\n  return this.hasClass(name) ? this.removeClass(name) : this.addClass(name)\n}\n\nregisterMethods('Dom', {\n  classes,\n  hasClass,\n  addClass,\n  removeClass,\n  toggleClass\n})\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,eAAe,QAAQ,wBAAwB;;AAExD;AACA,OAAO,SAASC,OAAOA,CAAA,EAAG;EACxB,MAAMC,IAAI,GAAG,IAAI,CAACA,IAAI,CAAC,OAAO,CAAC;EAC/B,OAAOA,IAAI,IAAI,IAAI,GAAG,EAAE,GAAGA,IAAI,CAACC,IAAI,CAAC,CAAC,CAACC,KAAK,CAACL,SAAS,CAAC;AACzD;;AAEA;AACA,OAAO,SAASM,QAAQA,CAACC,IAAI,EAAE;EAC7B,OAAO,IAAI,CAACL,OAAO,CAAC,CAAC,CAACM,OAAO,CAACD,IAAI,CAAC,KAAK,CAAC,CAAC;AAC5C;;AAEA;AACA,OAAO,SAASE,QAAQA,CAACF,IAAI,EAAE;EAC7B,IAAI,CAAC,IAAI,CAACD,QAAQ,CAACC,IAAI,CAAC,EAAE;IACxB,MAAMG,KAAK,GAAG,IAAI,CAACR,OAAO,CAAC,CAAC;IAC5BQ,KAAK,CAACC,IAAI,CAACJ,IAAI,CAAC;IAChB,IAAI,CAACJ,IAAI,CAAC,OAAO,EAAEO,KAAK,CAACE,IAAI,CAAC,GAAG,CAAC,CAAC;EACrC;EAEA,OAAO,IAAI;AACb;;AAEA;AACA,OAAO,SAASC,WAAWA,CAACN,IAAI,EAAE;EAChC,IAAI,IAAI,CAACD,QAAQ,CAACC,IAAI,CAAC,EAAE;IACvB,IAAI,CAACJ,IAAI,CACP,OAAO,EACP,IAAI,CAACD,OAAO,CAAC,CAAC,CACXY,MAAM,CAAC,UAAUC,CAAC,EAAE;MACnB,OAAOA,CAAC,KAAKR,IAAI;IACnB,CAAC,CAAC,CACDK,IAAI,CAAC,GAAG,CACb,CAAC;EACH;EAEA,OAAO,IAAI;AACb;;AAEA;AACA,OAAO,SAASI,WAAWA,CAACT,IAAI,EAAE;EAChC,OAAO,IAAI,CAACD,QAAQ,CAACC,IAAI,CAAC,GAAG,IAAI,CAACM,WAAW,CAACN,IAAI,CAAC,GAAG,IAAI,CAACE,QAAQ,CAACF,IAAI,CAAC;AAC3E;AAEAN,eAAe,CAAC,KAAK,EAAE;EACrBC,OAAO;EACPI,QAAQ;EACRG,QAAQ;EACRI,WAAW;EACXG;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}