{"ast":null,"code":"import { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js';\nimport { registerMethods } from '../utils/methods.js';\nimport Box from '../types/Box.js';\nimport Container from './Container.js';\nimport baseFind from '../modules/core/selector.js';\nexport default class Pattern extends Container {\n  // Initialize node\n  constructor(node, attrs = node) {\n    super(nodeOrNew('pattern', node), attrs);\n  }\n\n  // custom attr to handle transform\n  attr(a, b, c) {\n    if (a === 'transform') a = 'patternTransform';\n    return super.attr(a, b, c);\n  }\n  bbox() {\n    return new Box();\n  }\n  targets() {\n    return baseFind('svg [fill*=' + this.id() + ']');\n  }\n\n  // Alias string conversion to fill\n  toString() {\n    return this.url();\n  }\n\n  // Update pattern by rebuilding\n  update(block) {\n    // remove content\n    this.clear();\n\n    // invoke passed block\n    if (typeof block === 'function') {\n      block.call(this, this);\n    }\n    return this;\n  }\n\n  // Return the fill id\n  url() {\n    return 'url(#' + this.id() + ')';\n  }\n}\nregisterMethods({\n  Container: {\n    // Create pattern element in defs\n    pattern(...args) {\n      return this.defs().pattern(...args);\n    }\n  },\n  Defs: {\n    pattern: wrapWithAttrCheck(function (width, height, block) {\n      return this.put(new Pattern()).update(block).attr({\n        x: 0,\n        y: 0,\n        width: width,\n        height: height,\n        patternUnits: 'userSpaceOnUse'\n      });\n    })\n  }\n});\nregister(Pattern, 'Pattern');","map":{"version":3,"names":["nodeOrNew","register","wrapWithAttrCheck","registerMethods","Box","Container","baseFind","Pattern","constructor","node","attrs","attr","a","b","c","bbox","targets","id","toString","url","update","block","clear","call","pattern","args","defs","Defs","width","height","put","x","y","patternUnits"],"sources":["C:/Users/otff/Desktop/mindmap_demo/mind_demo/node_modules/@svgdotjs/svg.js/src/elements/Pattern.js"],"sourcesContent":["import { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\nimport { registerMethods } from '../utils/methods.js'\nimport Box from '../types/Box.js'\nimport Container from './Container.js'\nimport baseFind from '../modules/core/selector.js'\n\nexport default class Pattern extends Container {\n  // Initialize node\n  constructor(node, attrs = node) {\n    super(nodeOrNew('pattern', node), attrs)\n  }\n\n  // custom attr to handle transform\n  attr(a, b, c) {\n    if (a === 'transform') a = 'patternTransform'\n    return super.attr(a, b, c)\n  }\n\n  bbox() {\n    return new Box()\n  }\n\n  targets() {\n    return baseFind('svg [fill*=' + this.id() + ']')\n  }\n\n  // Alias string conversion to fill\n  toString() {\n    return this.url()\n  }\n\n  // Update pattern by rebuilding\n  update(block) {\n    // remove content\n    this.clear()\n\n    // invoke passed block\n    if (typeof block === 'function') {\n      block.call(this, this)\n    }\n\n    return this\n  }\n\n  // Return the fill id\n  url() {\n    return 'url(#' + this.id() + ')'\n  }\n}\n\nregisterMethods({\n  Container: {\n    // Create pattern element in defs\n    pattern(...args) {\n      return this.defs().pattern(...args)\n    }\n  },\n  Defs: {\n    pattern: wrapWithAttrCheck(function (width, height, block) {\n      return this.put(new Pattern()).update(block).attr({\n        x: 0,\n        y: 0,\n        width: width,\n        height: height,\n        patternUnits: 'userSpaceOnUse'\n      })\n    })\n  }\n})\n\nregister(Pattern, 'Pattern')\n"],"mappings":"AAAA,SAASA,SAAS,EAAEC,QAAQ,EAAEC,iBAAiB,QAAQ,qBAAqB;AAC5E,SAASC,eAAe,QAAQ,qBAAqB;AACrD,OAAOC,GAAG,MAAM,iBAAiB;AACjC,OAAOC,SAAS,MAAM,gBAAgB;AACtC,OAAOC,QAAQ,MAAM,6BAA6B;AAElD,eAAe,MAAMC,OAAO,SAASF,SAAS,CAAC;EAC7C;EACAG,WAAWA,CAACC,IAAI,EAAEC,KAAK,GAAGD,IAAI,EAAE;IAC9B,KAAK,CAACT,SAAS,CAAC,SAAS,EAAES,IAAI,CAAC,EAAEC,KAAK,CAAC;EAC1C;;EAEA;EACAC,IAAIA,CAACC,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAE;IACZ,IAAIF,CAAC,KAAK,WAAW,EAAEA,CAAC,GAAG,kBAAkB;IAC7C,OAAO,KAAK,CAACD,IAAI,CAACC,CAAC,EAAEC,CAAC,EAAEC,CAAC,CAAC;EAC5B;EAEAC,IAAIA,CAAA,EAAG;IACL,OAAO,IAAIX,GAAG,CAAC,CAAC;EAClB;EAEAY,OAAOA,CAAA,EAAG;IACR,OAAOV,QAAQ,CAAC,aAAa,GAAG,IAAI,CAACW,EAAE,CAAC,CAAC,GAAG,GAAG,CAAC;EAClD;;EAEA;EACAC,QAAQA,CAAA,EAAG;IACT,OAAO,IAAI,CAACC,GAAG,CAAC,CAAC;EACnB;;EAEA;EACAC,MAAMA,CAACC,KAAK,EAAE;IACZ;IACA,IAAI,CAACC,KAAK,CAAC,CAAC;;IAEZ;IACA,IAAI,OAAOD,KAAK,KAAK,UAAU,EAAE;MAC/BA,KAAK,CAACE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC;IACxB;IAEA,OAAO,IAAI;EACb;;EAEA;EACAJ,GAAGA,CAAA,EAAG;IACJ,OAAO,OAAO,GAAG,IAAI,CAACF,EAAE,CAAC,CAAC,GAAG,GAAG;EAClC;AACF;AAEAd,eAAe,CAAC;EACdE,SAAS,EAAE;IACT;IACAmB,OAAOA,CAAC,GAAGC,IAAI,EAAE;MACf,OAAO,IAAI,CAACC,IAAI,CAAC,CAAC,CAACF,OAAO,CAAC,GAAGC,IAAI,CAAC;IACrC;EACF,CAAC;EACDE,IAAI,EAAE;IACJH,OAAO,EAAEtB,iBAAiB,CAAC,UAAU0B,KAAK,EAAEC,MAAM,EAAER,KAAK,EAAE;MACzD,OAAO,IAAI,CAACS,GAAG,CAAC,IAAIvB,OAAO,CAAC,CAAC,CAAC,CAACa,MAAM,CAACC,KAAK,CAAC,CAACV,IAAI,CAAC;QAChDoB,CAAC,EAAE,CAAC;QACJC,CAAC,EAAE,CAAC;QACJJ,KAAK,EAAEA,KAAK;QACZC,MAAM,EAAEA,MAAM;QACdI,YAAY,EAAE;MAChB,CAAC,CAAC;IACJ,CAAC;EACH;AACF,CAAC,CAAC;AAEFhC,QAAQ,CAACM,OAAO,EAAE,SAAS,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}