{"ast":null,"code":"// Parse unit value\nexport const numberAndUnit = /^([+-]?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?)([a-z%]*)$/i;\n\n// Parse hex value\nexport const hex = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i;\n\n// Parse rgb value\nexport const rgb = /rgb\\((\\d+),(\\d+),(\\d+)\\)/;\n\n// Parse reference id\nexport const reference = /(#[a-z_][a-z0-9\\-_]*)/i;\n\n// splits a transformation chain\nexport const transforms = /\\)\\s*,?\\s*/;\n\n// Whitespace\nexport const whitespace = /\\s/g;\n\n// Test hex value\nexport const isHex = /^#[a-f0-9]{3}$|^#[a-f0-9]{6}$/i;\n\n// Test rgb value\nexport const isRgb = /^rgb\\(/;\n\n// Test for blank string\nexport const isBlank = /^(\\s+)?$/;\n\n// Test for numeric string\nexport const isNumber = /^[+-]?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i;\n\n// Test for image url\nexport const isImage = /\\.(jpg|jpeg|png|gif|svg)(\\?[^=]+.*)?/i;\n\n// split at whitespace and comma\nexport const delimiter = /[\\s,]+/;\n\n// Test for path letter\nexport const isPathLetter = /[MLHVCSQTAZ]/i;","map":{"version":3,"names":["numberAndUnit","hex","rgb","reference","transforms","whitespace","isHex","isRgb","isBlank","isNumber","isImage","delimiter","isPathLetter"],"sources":["C:/Users/otff/Desktop/mindmap_demo/mind_demo/node_modules/@svgdotjs/svg.js/src/modules/core/regex.js"],"sourcesContent":["// Parse unit value\nexport const numberAndUnit =\n  /^([+-]?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?)([a-z%]*)$/i\n\n// Parse hex value\nexport const hex = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i\n\n// Parse rgb value\nexport const rgb = /rgb\\((\\d+),(\\d+),(\\d+)\\)/\n\n// Parse reference id\nexport const reference = /(#[a-z_][a-z0-9\\-_]*)/i\n\n// splits a transformation chain\nexport const transforms = /\\)\\s*,?\\s*/\n\n// Whitespace\nexport const whitespace = /\\s/g\n\n// Test hex value\nexport const isHex = /^#[a-f0-9]{3}$|^#[a-f0-9]{6}$/i\n\n// Test rgb value\nexport const isRgb = /^rgb\\(/\n\n// Test for blank string\nexport const isBlank = /^(\\s+)?$/\n\n// Test for numeric string\nexport const isNumber = /^[+-]?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i\n\n// Test for image url\nexport const isImage = /\\.(jpg|jpeg|png|gif|svg)(\\?[^=]+.*)?/i\n\n// split at whitespace and comma\nexport const delimiter = /[\\s,]+/\n\n// Test for path letter\nexport const isPathLetter = /[MLHVCSQTAZ]/i\n"],"mappings":"AAAA;AACA,OAAO,MAAMA,aAAa,GACxB,oDAAoD;;AAEtD;AACA,OAAO,MAAMC,GAAG,GAAG,2CAA2C;;AAE9D;AACA,OAAO,MAAMC,GAAG,GAAG,0BAA0B;;AAE7C;AACA,OAAO,MAAMC,SAAS,GAAG,wBAAwB;;AAEjD;AACA,OAAO,MAAMC,UAAU,GAAG,YAAY;;AAEtC;AACA,OAAO,MAAMC,UAAU,GAAG,KAAK;;AAE/B;AACA,OAAO,MAAMC,KAAK,GAAG,gCAAgC;;AAErD;AACA,OAAO,MAAMC,KAAK,GAAG,QAAQ;;AAE7B;AACA,OAAO,MAAMC,OAAO,GAAG,UAAU;;AAEjC;AACA,OAAO,MAAMC,QAAQ,GAAG,yCAAyC;;AAEjE;AACA,OAAO,MAAMC,OAAO,GAAG,uCAAuC;;AAE9D;AACA,OAAO,MAAMC,SAAS,GAAG,QAAQ;;AAEjC;AACA,OAAO,MAAMC,YAAY,GAAG,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}