{"ast":null,"code":"const map = {\n  Backspace: 8,\n  Tab: 9,\n  Enter: 13,\n  Shift: 16,\n  Control: 17,\n  Alt: 18,\n  CapsLock: 20,\n  Esc: 27,\n  Spacebar: 32,\n  PageUp: 33,\n  PageDown: 34,\n  End: 35,\n  Home: 36,\n  Insert: 45,\n  Left: 37,\n  Up: 38,\n  Right: 39,\n  Down: 40,\n  Del: 46,\n  NumLock: 144,\n  Cmd: 91,\n  CmdFF: 224,\n  F1: 112,\n  F2: 113,\n  F3: 114,\n  F4: 115,\n  F5: 116,\n  F6: 117,\n  F7: 118,\n  F8: 119,\n  F9: 120,\n  F10: 121,\n  F11: 122,\n  F12: 123,\n  '`': 192,\n  '=': 187,\n  '-': 189,\n  '/': 191,\n  '.': 190\n};\n\n// 数字\nfor (let i = 0; i <= 9; i++) {\n  map[i] = i + 48;\n}\n\n// 字母\n'abcdefghijklmnopqrstuvwxyz'.split('').forEach((n, index) => {\n  map[n] = index + 65;\n});\nexport const keyMap = map;\nexport const isKey = (e, key) => {\n  let code = typeof e === 'object' ? e.keyCode : e;\n  return map[key] === code;\n};","map":{"version":3,"names":["map","Backspace","Tab","Enter","Shift","Control","Alt","CapsLock","Esc","Spacebar","PageUp","PageDown","End","Home","Insert","Left","Up","Right","Down","Del","NumLock","Cmd","CmdFF","F1","F2","F3","F4","F5","F6","F7","F8","F9","F10","F11","F12","i","split","forEach","n","index","keyMap","isKey","e","key","code","keyCode"],"sources":["C:/Users/otff/Desktop/mindmap_demo/mind_demo/node_modules/simple-mind-map/src/core/command/keyMap.js"],"sourcesContent":["const map = {\r\n  Backspace: 8,\r\n  Tab: 9,\r\n  Enter: 13,\r\n\r\n  Shift: 16,\r\n  Control: 17,\r\n  Alt: 18,\r\n  CapsLock: 20,\r\n\r\n  Esc: 27,\r\n\r\n  Spacebar: 32,\r\n\r\n  PageUp: 33,\r\n  PageDown: 34,\r\n  End: 35,\r\n  Home: 36,\r\n\r\n  Insert: 45,\r\n\r\n  Left: 37,\r\n  Up: 38,\r\n  Right: 39,\r\n  Down: 40,\r\n\r\n  Del: 46,\r\n\r\n  NumLock: 144,\r\n\r\n  Cmd: 91,\r\n  CmdFF: 224,\r\n  F1: 112,\r\n  F2: 113,\r\n  F3: 114,\r\n  F4: 115,\r\n  F5: 116,\r\n  F6: 117,\r\n  F7: 118,\r\n  F8: 119,\r\n  F9: 120,\r\n  F10: 121,\r\n  F11: 122,\r\n  F12: 123,\r\n\r\n  '`': 192,\r\n  '=': 187,\r\n  '-': 189,\r\n\r\n  '/': 191,\r\n  '.': 190\r\n}\r\n\r\n// 数字\r\nfor (let i = 0; i <= 9; i++) {\r\n  map[i] = i + 48\r\n}\r\n\r\n// 字母\r\n'abcdefghijklmnopqrstuvwxyz'.split('').forEach((n, index) => {\r\n  map[n] = index + 65\r\n})\r\n\r\nexport const keyMap = map\r\n\r\nexport const isKey = (e, key) => {\r\n  let code = typeof e === 'object' ? e.keyCode : e\r\n  return map[key] === code\r\n}\r\n"],"mappings":"AAAA,MAAMA,GAAG,GAAG;EACVC,SAAS,EAAE,CAAC;EACZC,GAAG,EAAE,CAAC;EACNC,KAAK,EAAE,EAAE;EAETC,KAAK,EAAE,EAAE;EACTC,OAAO,EAAE,EAAE;EACXC,GAAG,EAAE,EAAE;EACPC,QAAQ,EAAE,EAAE;EAEZC,GAAG,EAAE,EAAE;EAEPC,QAAQ,EAAE,EAAE;EAEZC,MAAM,EAAE,EAAE;EACVC,QAAQ,EAAE,EAAE;EACZC,GAAG,EAAE,EAAE;EACPC,IAAI,EAAE,EAAE;EAERC,MAAM,EAAE,EAAE;EAEVC,IAAI,EAAE,EAAE;EACRC,EAAE,EAAE,EAAE;EACNC,KAAK,EAAE,EAAE;EACTC,IAAI,EAAE,EAAE;EAERC,GAAG,EAAE,EAAE;EAEPC,OAAO,EAAE,GAAG;EAEZC,GAAG,EAAE,EAAE;EACPC,KAAK,EAAE,GAAG;EACVC,EAAE,EAAE,GAAG;EACPC,EAAE,EAAE,GAAG;EACPC,EAAE,EAAE,GAAG;EACPC,EAAE,EAAE,GAAG;EACPC,EAAE,EAAE,GAAG;EACPC,EAAE,EAAE,GAAG;EACPC,EAAE,EAAE,GAAG;EACPC,EAAE,EAAE,GAAG;EACPC,EAAE,EAAE,GAAG;EACPC,GAAG,EAAE,GAAG;EACRC,GAAG,EAAE,GAAG;EACRC,GAAG,EAAE,GAAG;EAER,GAAG,EAAE,GAAG;EACR,GAAG,EAAE,GAAG;EACR,GAAG,EAAE,GAAG;EAER,GAAG,EAAE,GAAG;EACR,GAAG,EAAE;AACP,CAAC;;AAED;AACA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;EAC3BnC,GAAG,CAACmC,CAAC,CAAC,GAAGA,CAAC,GAAG,EAAE;AACjB;;AAEA;AACA,4BAA4B,CAACC,KAAK,CAAC,EAAE,CAAC,CAACC,OAAO,CAAC,CAACC,CAAC,EAAEC,KAAK,KAAK;EAC3DvC,GAAG,CAACsC,CAAC,CAAC,GAAGC,KAAK,GAAG,EAAE;AACrB,CAAC,CAAC;AAEF,OAAO,MAAMC,MAAM,GAAGxC,GAAG;AAEzB,OAAO,MAAMyC,KAAK,GAAGA,CAACC,CAAC,EAAEC,GAAG,KAAK;EAC/B,IAAIC,IAAI,GAAG,OAAOF,CAAC,KAAK,QAAQ,GAAGA,CAAC,CAACG,OAAO,GAAGH,CAAC;EAChD,OAAO1C,GAAG,CAAC2C,GAAG,CAAC,KAAKC,IAAI;AAC1B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}